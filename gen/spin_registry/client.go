// Code generated by goa v3.2.6, DO NOT EDIT.
//
// spin-registry client
//
// Command:
// $ goa gen code.hollensbe.org/erikh/spin/design

package spinregistry

import (
	"context"

	goa "goa.design/goa/v3/pkg"
)

// Client is the "spin-registry" service client.
type Client struct {
	VMCreateEndpoint             goa.Endpoint
	VMUpdateEndpoint             goa.Endpoint
	VMDeleteEndpoint             goa.Endpoint
	VMGetEndpoint                goa.Endpoint
	VMListEndpoint               goa.Endpoint
	StorageVolumesListEndpoint   goa.Endpoint
	StorageVolumesCreateEndpoint goa.Endpoint
	StorageVolumesDeleteEndpoint goa.Endpoint
	StorageImagesListEndpoint    goa.Endpoint
	StorageImagesCreateEndpoint  goa.Endpoint
	StorageImagesDeleteEndpoint  goa.Endpoint
	StorageImagesGetEndpoint     goa.Endpoint
}

// NewClient initializes a "spin-registry" service client given the endpoints.
func NewClient(vMCreate, vMUpdate, vMDelete, vMGet, vMList, storageVolumesList, storageVolumesCreate, storageVolumesDelete, storageImagesList, storageImagesCreate, storageImagesDelete, storageImagesGet goa.Endpoint) *Client {
	return &Client{
		VMCreateEndpoint:             vMCreate,
		VMUpdateEndpoint:             vMUpdate,
		VMDeleteEndpoint:             vMDelete,
		VMGetEndpoint:                vMGet,
		VMListEndpoint:               vMList,
		StorageVolumesListEndpoint:   storageVolumesList,
		StorageVolumesCreateEndpoint: storageVolumesCreate,
		StorageVolumesDeleteEndpoint: storageVolumesDelete,
		StorageImagesListEndpoint:    storageImagesList,
		StorageImagesCreateEndpoint:  storageImagesCreate,
		StorageImagesDeleteEndpoint:  storageImagesDelete,
		StorageImagesGetEndpoint:     storageImagesGet,
	}
}

// VMCreate calls the "vm_create" endpoint of the "spin-registry" service.
func (c *Client) VMCreate(ctx context.Context, p *VM) (res uint64, err error) {
	var ires interface{}
	ires, err = c.VMCreateEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(uint64), nil
}

// VMUpdate calls the "vm_update" endpoint of the "spin-registry" service.
func (c *Client) VMUpdate(ctx context.Context, p *UpdateVM) (err error) {
	_, err = c.VMUpdateEndpoint(ctx, p)
	return
}

// VMDelete calls the "vm_delete" endpoint of the "spin-registry" service.
func (c *Client) VMDelete(ctx context.Context, p *VMDeletePayload) (err error) {
	_, err = c.VMDeleteEndpoint(ctx, p)
	return
}

// VMGet calls the "vm_get" endpoint of the "spin-registry" service.
func (c *Client) VMGet(ctx context.Context, p *VMGetPayload) (res *VM, err error) {
	var ires interface{}
	ires, err = c.VMGetEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*VM), nil
}

// VMList calls the "vm_list" endpoint of the "spin-registry" service.
func (c *Client) VMList(ctx context.Context) (res []uint64, err error) {
	var ires interface{}
	ires, err = c.VMListEndpoint(ctx, nil)
	if err != nil {
		return
	}
	return ires.([]uint64), nil
}

// StorageVolumesList calls the "storage_volumes_list" endpoint of the
// "spin-registry" service.
func (c *Client) StorageVolumesList(ctx context.Context) (res []string, err error) {
	var ires interface{}
	ires, err = c.StorageVolumesListEndpoint(ctx, nil)
	if err != nil {
		return
	}
	return ires.([]string), nil
}

// StorageVolumesCreate calls the "storage_volumes_create" endpoint of the
// "spin-registry" service.
func (c *Client) StorageVolumesCreate(ctx context.Context, p *StorageVolumesCreatePayload) (err error) {
	_, err = c.StorageVolumesCreateEndpoint(ctx, p)
	return
}

// StorageVolumesDelete calls the "storage_volumes_delete" endpoint of the
// "spin-registry" service.
func (c *Client) StorageVolumesDelete(ctx context.Context, p *StorageVolumesDeletePayload) (err error) {
	_, err = c.StorageVolumesDeleteEndpoint(ctx, p)
	return
}

// StorageImagesList calls the "storage_images_list" endpoint of the
// "spin-registry" service.
func (c *Client) StorageImagesList(ctx context.Context, p *StorageImagesListPayload) (res []string, err error) {
	var ires interface{}
	ires, err = c.StorageImagesListEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.([]string), nil
}

// StorageImagesCreate calls the "storage_images_create" endpoint of the
// "spin-registry" service.
func (c *Client) StorageImagesCreate(ctx context.Context, p *Storage) (err error) {
	_, err = c.StorageImagesCreateEndpoint(ctx, p)
	return
}

// StorageImagesDelete calls the "storage_images_delete" endpoint of the
// "spin-registry" service.
func (c *Client) StorageImagesDelete(ctx context.Context, p *StorageImagesDeletePayload) (err error) {
	_, err = c.StorageImagesDeleteEndpoint(ctx, p)
	return
}

// StorageImagesGet calls the "storage_images_get" endpoint of the
// "spin-registry" service.
func (c *Client) StorageImagesGet(ctx context.Context, p *StorageImagesGetPayload) (res *Storage, err error) {
	var ires interface{}
	ires, err = c.StorageImagesGetEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*Storage), nil
}
