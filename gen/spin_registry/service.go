// Code generated by goa v3.2.6, DO NOT EDIT.
//
// spin-registry service
//
// Command:
// $ goa gen code.hollensbe.org/erikh/spin/design

package spinregistry

import (
	"context"
)

// Keeper of the VMs
type Service interface {
	// Create a VM
	VMCreate(context.Context, *VM) (res uint64, err error)
	// Update a VM
	VMUpdate(context.Context, *UpdateVM) (err error)
	// Delete a VM by ID
	VMDelete(context.Context, *VMDeletePayload) (err error)
	// Retrieve a VM by ID
	VMGet(context.Context, *VMGetPayload) (res *VM, err error)
	// Retrieve all VM IDs
	VMList(context.Context) (res []uint64, err error)
	// list all volumes
	StorageVolumesList(context.Context) (res []string, err error)
	// create a new volume
	StorageVolumesCreate(context.Context, *StorageVolumesCreatePayload) (err error)
	// delete an existing volume
	StorageVolumesDelete(context.Context, *StorageVolumesDeletePayload) (err error)
}

// ServiceName is the name of the service as defined in the design. This is the
// same value that is set in the endpoint request contexts under the ServiceKey
// key.
const ServiceName = "spin-registry"

// MethodNames lists the service method names as defined in the design. These
// are the same values that are set in the endpoint request contexts under the
// MethodKey key.
var MethodNames = [8]string{"vm/create", "vm/update", "vm/delete", "vm/get", "vm/list", "storage/volumes/list", "storage/volumes/create", "storage/volumes/delete"}

// VM is the payload type of the spin-registry service vm/create method.
type VM struct {
	// Name of VM; does not need to be unique
	Name string
	// CPU count
	Cpus uint
	// Memory (in megabytes)
	Memory uint
	// Storage references
	Storage []*Storage
}

// UpdateVM is the payload type of the spin-registry service vm/update method.
type UpdateVM struct {
	// ID of VM to update
	ID uint64
	// VM to publish
	VM *VM
}

// VMDeletePayload is the payload type of the spin-registry service vm/delete
// method.
type VMDeletePayload struct {
	// ID of VM to remove
	ID uint64
}

// VMGetPayload is the payload type of the spin-registry service vm/get method.
type VMGetPayload struct {
	// ID of VM to remove
	ID uint64
}

// StorageVolumesCreatePayload is the payload type of the spin-registry service
// storage/volumes/create method.
type StorageVolumesCreatePayload struct {
	// name of volume
	Name string
}

// StorageVolumesDeletePayload is the payload type of the spin-registry service
// storage/volumes/delete method.
type StorageVolumesDeletePayload struct {
	// name of volume
	Name string
}

type Storage struct {
	// Volume name, must not include `/`
	Volume string
	// Image filename, must not include `/`
	Image string
	// Image size (in gigabytes)
	ImageSize *uint
	// Is this image a cdrom?
	Cdrom *bool
}
