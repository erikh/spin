// Code generated by goa v3.2.6, DO NOT EDIT.
//
// spin-registry service
//
// Command:
// $ goa gen code.hollensbe.org/erikh/spin/design

package spinregistry

import (
	"context"
)

// Keeper of the VMs
type Service interface {
	// Create a VM
	VMCreate(context.Context, *UpdatedVM) (res uint64, err error)
	// Update a VM
	VMUpdate(context.Context, *UpdateVM) (err error)
	// Delete a VM by ID
	VMDelete(context.Context, *VMDeletePayload) (err error)
	// Retrieve a VM by ID
	VMGet(context.Context, *VMGetPayload) (res *UpdatedVM, err error)
	// Retrieve all VM IDs
	VMList(context.Context) (res []uint64, err error)
	// list all volumes
	StorageVolumesList(context.Context) (res map[string]string, err error)
	// create a new volume
	StorageVolumesCreate(context.Context, *StorageVolumesCreatePayload) (err error)
	// delete an existing volume
	StorageVolumesDelete(context.Context, *StorageVolumesDeletePayload) (err error)
	// list all images by volume
	StorageImagesList(context.Context, *StorageImagesListPayload) (res []string, err error)
	// add an image definition to the registry
	StorageImagesCreate(context.Context, *Storage) (res *Image, err error)
	// remove an image definition from the registry
	StorageImagesDelete(context.Context, *StorageImagesDeletePayload) (err error)
	// retrieves an image definition from the registry
	StorageImagesGet(context.Context, *StorageImagesGetPayload) (res *Image, err error)
}

// ServiceName is the name of the service as defined in the design. This is the
// same value that is set in the endpoint request contexts under the ServiceKey
// key.
const ServiceName = "spin-registry"

// MethodNames lists the service method names as defined in the design. These
// are the same values that are set in the endpoint request contexts under the
// MethodKey key.
var MethodNames = [12]string{"vm_create", "vm_update", "vm_delete", "vm_get", "vm_list", "storage_volumes_list", "storage_volumes_create", "storage_volumes_delete", "storage_images_list", "storage_images_create", "storage_images_delete", "storage_images_get"}

// UpdatedVM is the payload type of the spin-registry service vm_create method.
type UpdatedVM struct {
	// Image references
	Images []*Image
	// Name of VM; does not need to be unique
	Name string
	// CPU count
	Cpus uint
	// Memory (in megabytes)
	Memory uint
}

// UpdateVM is the payload type of the spin-registry service vm_update method.
type UpdateVM struct {
	// ID of VM to update
	ID uint64
	// VM to publish
	VM *UpdatedVM
}

// VMDeletePayload is the payload type of the spin-registry service vm_delete
// method.
type VMDeletePayload struct {
	// ID of VM to remove
	ID uint64
}

// VMGetPayload is the payload type of the spin-registry service vm_get method.
type VMGetPayload struct {
	// ID of VM to remove
	ID uint64
}

// StorageVolumesCreatePayload is the payload type of the spin-registry service
// storage_volumes_create method.
type StorageVolumesCreatePayload struct {
	// name of volume
	Name string
	// path to volume
	Path string
}

// StorageVolumesDeletePayload is the payload type of the spin-registry service
// storage_volumes_delete method.
type StorageVolumesDeletePayload struct {
	// name of volume
	Name string
}

// StorageImagesListPayload is the payload type of the spin-registry service
// storage_images_list method.
type StorageImagesListPayload struct {
	// name of volume to list images for
	VolumeName string
}

// Storage is the payload type of the spin-registry service
// storage_images_create method.
type Storage struct {
	// Volume name; required if image is not a cdrom
	Volume *string
	// Image filename, no `/` characters
	Image string
	// Image size (in gigabytes); required if image is not a cdrom
	ImageSize *uint
	// Is this image a cdrom?
	Cdrom bool
}

// Image is the result type of the spin-registry service storage_images_create
// method.
type Image struct {
	// Image path
	Path string
	// Is this a cdrom image?
	Cdrom bool
	// Volume name
	Volume *string
}

// StorageImagesDeletePayload is the payload type of the spin-registry service
// storage_images_delete method.
type StorageImagesDeletePayload struct {
	// name of volume
	VolumeName string
	// name of image
	ImageName string
}

// StorageImagesGetPayload is the payload type of the spin-registry service
// storage_images_get method.
type StorageImagesGetPayload struct {
	// name of volume
	VolumeName string
	// name of image
	ImageName string
}
