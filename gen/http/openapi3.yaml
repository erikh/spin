openapi: 3.0.3
info:
  title: Spin API service
  description: HTTP service for controlling the spin service
  version: "1.0"
servers:
- url: http://localhost:8080
paths:
  /add/{id}:
    post:
      tags:
      - spin-broker
      summary: add spin-broker
      description: Add a command to the package
      operationId: spin-broker#add
      parameters:
      - name: id
        in: path
        description: Package ID
        required: true
        schema:
          type: string
          description: Package ID
          example: Ipsam assumenda quisquam incidunt placeat perferendis.
        example: Aspernatur voluptate aspernatur dolor.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddRequestBody'
            example:
              action: Saepe occaecati impedit quas laborum.
              dependencies:
              - Fugiat ex consequatur.
              - Dignissimos eum.
              - Velit quod sit aut.
              parameters:
                Itaque aut dolorem.: Quibusdam dolor sit.
              resource: Id et autem ut debitis.
      responses:
        "200":
          description: OK response.
          content:
            application/json:
              schema:
                type: string
                example: Sed iusto quam non ratione fugiat distinctio.
              example: Hic veniam fuga enim.
  /complete:
    post:
      tags:
      - spin-broker
      summary: complete spin-broker
      description: Mark a command as completed with a result status
      operationId: spin-broker#complete
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CompleteRequestBody'
            example:
              id: Non sit recusandae eum repellat earum.
              status: false
              status_reason: Eveniet hic minus facere animi quas tempora.
      responses:
        "200":
          description: OK response.
  /control/shutdown/{id}:
    post:
      tags:
      - spin-apiserver
      summary: control_shutdown spin-apiserver
      operationId: spin-apiserver#control_shutdown
      parameters:
      - name: id
        in: path
        description: ID of VM to shutdown
        required: true
        schema:
          type: integer
          description: ID of VM to shutdown
          example: 16078445746201692648
        example: 8577175321615317110
      responses:
        "200":
          description: OK response.
  /control/start/{id}:
    post:
      tags:
      - spin-apiserver
      summary: control_start spin-apiserver
      operationId: spin-apiserver#control_start
      parameters:
      - name: id
        in: path
        description: ID of VM to start
        required: true
        schema:
          type: integer
          description: ID of VM to start
          example: 10512743238251449057
        example: 14682297352063235846
      responses:
        "200":
          description: OK response.
  /control/stop/{id}:
    post:
      tags:
      - spin-apiserver
      summary: control_stop spin-apiserver
      operationId: spin-apiserver#control_stop
      parameters:
      - name: id
        in: path
        description: ID of VM to stop
        required: true
        schema:
          type: integer
          description: ID of VM to stop
          example: 1680910933085389922
        example: 9612697741584459434
      responses:
        "200":
          description: OK response.
  /enqueue/{id}:
    post:
      tags:
      - spin-broker
      summary: enqueue spin-broker
      description: Enqueue the package into the various resource queues
      operationId: spin-broker#enqueue
      parameters:
      - name: id
        in: path
        description: Package ID
        required: true
        schema:
          type: string
          description: Package ID
          example: Dolor in fuga veritatis debitis dolores rerum.
        example: Eligendi dolor non vitae.
      responses:
        "200":
          description: OK response.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
                  example: Assumenda temporibus a qui illo eos.
                example:
                - Vel corporis rerum.
                - Officiis accusamus rerum facilis architecto.
                - Temporibus placeat odio ea.
                - Minima cum quae voluptas et.
              example:
              - Facilis distinctio soluta.
              - Sit nihil voluptas.
              - Ea iste eum.
  /new:
    post:
      tags:
      - spin-broker
      summary: new spin-broker
      description: Create a new package; a collection of items to join into the queue simultaneously
      operationId: spin-broker#new
      responses:
        "200":
          description: OK response.
          content:
            application/json:
              schema:
                type: string
                example: Mollitia est aliquam.
              example: Et dolores.
  /next/{resource}:
    get:
      tags:
      - spin-broker
      summary: next spin-broker
      description: Get the next command for a given resource
      operationId: spin-broker#next
      parameters:
      - name: resource
        in: path
        description: resource type
        required: true
        schema:
          type: string
          description: resource type
          example: Ut consequatur distinctio rerum aut culpa accusamus.
        example: Veniam laboriosam odit voluptas occaecati pariatur fugit.
      responses:
        "200":
          description: OK response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NextResponseBody'
              example:
                action: Consequatur quo exercitationem occaecati magnam molestiae qui.
                parameters:
                  Aut voluptas qui fuga unde.: Cupiditate soluta ut corporis.
                resource: Neque reiciendis ipsum.
                uuid: Repellendus eaque nesciunt quia.
        "400":
          description: No records were found
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                id: 3F1FKVRR
                message: Value of ID must be an integer
                name: bad_request
  /status/{id}:
    get:
      tags:
      - spin-broker
      summary: status spin-broker
      description: Get the status for a package
      operationId: spin-broker#status
      parameters:
      - name: id
        in: path
        description: Package ID
        required: true
        schema:
          type: string
          description: Package ID
          example: Fuga tempore.
        example: Ducimus dolorum.
      responses:
        "200":
          description: OK response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusResponseBody'
              example:
                causer: Soluta voluptatem minima natus.
                reason: Itaque tenetur labore quia distinctio aperiam.
                status: true
        "400":
          description: No records were found
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                id: 3F1FKVRR
                message: Value of ID must be an integer
                name: bad_request
  /storage/images/create:
    post:
      tags:
      - spin-registry
      summary: storage_images_create spin-registry
      description: add an image definition to the registry
      operationId: spin-registry#storage_images_create
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Storage'
            example:
              cdrom: true
              image: Nostrum qui perferendis rerum molestias.
              image_size: 11387401285549308839
              volume: Iure qui voluptas.
      responses:
        "200":
          description: OK response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Image'
              example:
                cdrom: true
                path: Quia qui provident esse.
                volume: Ut sint officia quod tempora consequatur ut.
  /storage/images/delete:
    post:
      tags:
      - spin-registry
      summary: storage_images_delete spin-registry
      description: remove an image definition from the registry
      operationId: spin-registry#storage_images_delete
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StorageImagesDeleteRequestBody'
            example:
              image_name: Ipsam dicta accusantium.
              volume_name: Impedit laboriosam et dolorum tempora inventore officia.
      responses:
        "200":
          description: OK response.
  /storage/images/get:
    get:
      tags:
      - spin-registry
      summary: storage_images_get spin-registry
      description: retrieves an image definition from the registry
      operationId: spin-registry#storage_images_get
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StorageImagesDeleteRequestBody'
            example:
              image_name: Laudantium consectetur assumenda soluta.
              volume_name: In ea natus tempore.
      responses:
        "200":
          description: OK response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Image'
              example:
                cdrom: false
                path: Eaque neque.
                volume: Beatae nihil.
  /storage/images/list:
    get:
      tags:
      - spin-registry
      summary: storage_images_list spin-registry
      description: list all images by volume
      operationId: spin-registry#storage_images_list
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StorageImagesListRequestBody'
            example:
              volume_name: Sunt nesciunt natus dolorem.
      responses:
        "200":
          description: OK response.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
                  example: Neque magnam praesentium est.
                example:
                - Veniam ut voluptatibus modi quo est.
                - Ut vitae a non illum modi.
                - Est quia temporibus nam ex incidunt.
              example:
              - Harum aut omnis.
              - Veniam tenetur.
  /storage/volumes/create:
    post:
      tags:
      - spin-registry
      summary: storage_volumes_create spin-registry
      description: create a new volume
      operationId: spin-registry#storage_volumes_create
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StorageVolumesCreateRequestBody'
            example:
              name: Ut ea excepturi.
              path: Facilis ad quod.
      responses:
        "200":
          description: OK response.
  /storage/volumes/delete:
    post:
      tags:
      - spin-registry
      summary: storage_volumes_delete spin-registry
      description: delete an existing volume
      operationId: spin-registry#storage_volumes_delete
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StorageVolumesDeleteRequestBody'
            example:
              name: Quia facere.
      responses:
        "200":
          description: OK response.
  /storage/volumes/list:
    get:
      tags:
      - spin-registry
      summary: storage_volumes_list spin-registry
      description: list all volumes
      operationId: spin-registry#storage_volumes_list
      responses:
        "200":
          description: OK response.
          content:
            application/json:
              schema:
                type: object
                example:
                  Autem et.: Est molestiae accusamus aperiam ipsa voluptatem minima.
                  Porro quia vitae facere ducimus esse.: Aut repellendus et.
                additionalProperties: true
              example:
                Animi pariatur soluta numquam ut quis porro.: Recusandae ad.
                Laborum rerum rerum alias quia earum.: Error molestiae accusantium dolor corrupti.
                Voluptate sed.: Qui placeat necessitatibus.
  /vm/create:
    post:
      tags:
      - spin-registry
      summary: vm_create spin-registry
      description: Create a VM
      operationId: spin-registry#vm_create
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatedVM'
            example:
              cpus: 2551606264180670795
              images:
              - cdrom: true
                path: Dignissimos qui error modi.
                volume: Corrupti et voluptatibus et et occaecati.
              - cdrom: true
                path: Dignissimos qui error modi.
                volume: Corrupti et voluptatibus et et occaecati.
              - cdrom: true
                path: Dignissimos qui error modi.
                volume: Corrupti et voluptatibus et et occaecati.
              - cdrom: true
                path: Dignissimos qui error modi.
                volume: Corrupti et voluptatibus et et occaecati.
              memory: 17694085759044319548
              name: Nobis quia.
      responses:
        "200":
          description: OK response.
          content:
            application/json:
              schema:
                type: integer
                example: 14731460144231757442
              example: 7420604301471728366
  /vm/delete/{id}:
    post:
      tags:
      - spin-registry
      summary: vm_delete spin-registry
      description: Delete a VM by ID
      operationId: spin-registry#vm_delete
      parameters:
      - name: id
        in: path
        description: ID of VM to remove
        required: true
        schema:
          type: integer
          description: ID of VM to remove
          example: 498782861266362245
        example: 1317167141178875161
      responses:
        "200":
          description: OK response.
  /vm/get/{id}:
    get:
      tags:
      - spin-registry
      summary: vm_get spin-registry
      description: Retrieve a VM by ID
      operationId: spin-registry#vm_get
      parameters:
      - name: id
        in: path
        description: ID of VM to remove
        required: true
        schema:
          type: integer
          description: ID of VM to remove
          example: 14771951023174206041
        example: 10890909484864851594
      responses:
        "200":
          description: OK response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdatedVM'
              example:
                cpus: 14590562928325661118
                images:
                - cdrom: true
                  path: Sint rerum rerum porro eius.
                  volume: Labore voluptas perferendis ea iusto adipisci.
                - cdrom: true
                  path: Sint rerum rerum porro eius.
                  volume: Labore voluptas perferendis ea iusto adipisci.
                - cdrom: true
                  path: Sint rerum rerum porro eius.
                  volume: Labore voluptas perferendis ea iusto adipisci.
                memory: 7638373082656033857
                name: Vel qui dolores nihil autem dolorem.
  /vm/list:
    get:
      tags:
      - spin-registry
      summary: vm_list spin-registry
      description: Retrieve all VM IDs
      operationId: spin-registry#vm_list
      responses:
        "200":
          description: OK response.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: integer
                  example: 4408300531769624001
                example:
                - 14831374920607788309
                - 5235048447385954593
                - 16775010496013032263
              example:
              - 15927170269863465287
              - 3527971472621142872
              - 11183569463095756819
              - 17228501160994306435
    post:
      tags:
      - spin-apiserver
      summary: vm_list spin-apiserver
      operationId: spin-apiserver#vm_list
      responses:
        "200":
          description: OK response.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: integer
                  example: 3223206614813158083
                example:
                - 13635831619747663269
                - 5480492904096509302
                - 17631366753769681391
                - 18257255936749339677
              example:
              - 12891879552641096566
              - 13358841124917358759
              - 4771336335823583331
  /vm/update/{id}:
    post:
      tags:
      - spin-registry
      summary: vm_update spin-registry
      description: Update a VM
      operationId: spin-registry#vm_update
      parameters:
      - name: id
        in: path
        description: ID of VM to update
        required: true
        schema:
          type: integer
          description: ID of VM to update
          example: 17125974161978897644
        example: 9256596398261420980
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VMUpdateRequestBody'
            example:
              vm:
                cpus: 3472743333644681302
                images:
                - cdrom: true
                  path: Dignissimos qui error modi.
                  volume: Corrupti et voluptatibus et et occaecati.
                - cdrom: true
                  path: Dignissimos qui error modi.
                  volume: Corrupti et voluptatibus et et occaecati.
                - cdrom: true
                  path: Dignissimos qui error modi.
                  volume: Corrupti et voluptatibus et et occaecati.
                memory: 639108202290023137
                name: Quo dolore soluta consectetur.
      responses:
        "200":
          description: OK response.
components:
  schemas:
    AddRequestBody:
      type: object
      properties:
        action:
          type: string
          description: Action name
          example: Autem ut.
        dependencies:
          type: array
          items:
            type: string
            example: Recusandae unde sed.
          description: Dependency UUIDs
          example:
          - Error ipsum minima fugit vero.
          - In voluptas laborum corrupti magnam quis.
        parameters:
          type: object
          description: Action parameters
          example:
            Optio nemo dolor doloremque similique eligendi veniam.: Sint voluptatem.
            Quo cum fugit facere ea voluptas libero.: Repudiandae illum ut.
          additionalProperties: true
        resource:
          type: string
          description: Resource name
          example: Nisi placeat quasi consequatur ut sed.
      example:
        action: Odio est.
        dependencies:
        - Voluptatem reiciendis voluptatem.
        - Iusto tenetur qui ipsa et.
        parameters:
          Deserunt modi qui voluptatem placeat.: Ullam dolore ea at ut.
          Molestiae cupiditate neque eos.: Nihil sunt doloremque amet sint ut perspiciatis.
          Quos maxime ut error facilis modi autem.: Corporis nam.
        resource: Voluptas omnis asperiores qui.
      required:
      - resource
      - action
    CompleteRequestBody:
      type: object
      properties:
        id:
          type: string
          description: Command ID
          example: Deserunt et dolorem quis dolores laborum ut.
        status:
          type: boolean
          description: status of work
          example: false
        status_reason:
          type: string
          description: reason of success/failure
          example: Expedita aspernatur illo eligendi.
      example:
        id: Cupiditate voluptas sapiente ipsam qui omnis.
        status: false
        status_reason: Asperiores ex.
      required:
      - id
      - status
    Error:
      type: object
      properties:
        fault:
          type: boolean
          description: Is the error a server-side fault?
          example: false
        id:
          type: string
          description: ID is a unique identifier for this particular occurrence of the problem.
          example: 123abc
        message:
          type: string
          description: Message is a human-readable explanation specific to this occurrence of the problem.
          example: parameter 'p' must be an integer
        name:
          type: string
          description: Name is the name of this class of errors.
          example: bad_request
        temporary:
          type: boolean
          description: Is the error temporary?
          example: true
        timeout:
          type: boolean
          description: Is the error a timeout?
          example: true
      example:
        id: 3F1FKVRR
        message: Value of ID must be an integer
        name: bad_request
      required:
      - name
      - id
      - message
      - temporary
      - timeout
      - fault
    Image:
      type: object
      properties:
        cdrom:
          type: boolean
          description: Is this a cdrom image?
          example: false
        path:
          type: string
          description: Image path
          example: Labore dicta error dolores reprehenderit.
        volume:
          type: string
          description: Volume name
          example: Illo dolor sint et asperiores.
      example:
        cdrom: false
        path: Tempore commodi deserunt et nemo expedita libero.
        volume: Dolor similique reiciendis maxime dolorum.
      required:
      - path
      - cdrom
    NextResponseBody:
      type: object
      properties:
        action:
          type: string
          description: action name
          example: Officiis officiis.
        parameters:
          type: object
          description: Action parameters
          example:
            Fugit in molestiae repellat cupiditate odit.: Veniam corrupti.
            Unde assumenda praesentium similique blanditiis eum nihil.: Optio voluptatem.
          additionalProperties: true
        resource:
          type: string
          description: resource type
          example: Ex vel ipsum autem et et.
        uuid:
          type: string
          description: Command ID
          example: Et quia consequatur magnam officia.
      example:
        action: Eaque perferendis et quisquam odio.
        parameters:
          Ducimus ratione doloremque.: Enim architecto.
        resource: Molestiae voluptatem quos inventore aut.
        uuid: Consequatur eos aut laborum at.
      required:
      - uuid
      - resource
      - action
    StatusResponseBody:
      type: object
      properties:
        causer:
          type: string
          description: Failure causer as UUID (if any)
          example: Voluptate tempora fugit qui doloremque accusantium.
        reason:
          type: string
          description: Failure reason (if any)
          example: Et aut omnis reprehenderit dolorum non.
        status:
          type: boolean
          description: Pass/Fail status
          example: false
      example:
        causer: Officia facere reprehenderit consequuntur inventore.
        reason: Occaecati aut.
        status: true
      required:
      - status
    Storage:
      type: object
      properties:
        cdrom:
          type: boolean
          description: Is this image a cdrom?
          example: false
        image:
          type: string
          description: Image filename, no `/` characters
          example: Deleniti delectus aut ex est.
        image_size:
          type: integer
          description: Image size (in gigabytes); required if image is not a cdrom
          example: 9176697114519538264
        volume:
          type: string
          description: Volume name; required if image is not a cdrom
          example: A iusto.
      example:
        cdrom: true
        image: Optio minus repellendus quibusdam.
        image_size: 17491568033483232509
        volume: Deleniti distinctio rerum doloremque architecto quia corrupti.
      required:
      - image
      - cdrom
    StorageImagesDeleteRequestBody:
      type: object
      properties:
        image_name:
          type: string
          description: name of image
          example: Est illo.
        volume_name:
          type: string
          description: name of volume
          example: Est omnis perferendis quia veritatis.
      example:
        image_name: Sit dolores sunt repudiandae quas assumenda voluptatem.
        volume_name: Cumque ab officiis veniam et.
      required:
      - volume_name
      - image_name
    StorageImagesListRequestBody:
      type: object
      properties:
        volume_name:
          type: string
          description: name of volume to list images for
          example: Sint fugit rem totam est est earum.
      example:
        volume_name: Sed voluptate quibusdam.
      required:
      - volume_name
    StorageVolumesCreateRequestBody:
      type: object
      properties:
        name:
          type: string
          description: name of volume
          example: Quam a.
        path:
          type: string
          description: path to volume
          example: Mollitia id neque officiis similique nostrum magnam.
      example:
        name: Cumque iusto sapiente reprehenderit molestiae quia.
        path: Eaque perferendis mollitia officiis officiis quia.
      required:
      - name
      - path
    StorageVolumesDeleteRequestBody:
      type: object
      properties:
        name:
          type: string
          description: name of volume
          example: Tenetur non.
      example:
        name: Laboriosam dicta modi aperiam dignissimos.
      required:
      - name
    UpdatedVM:
      type: object
      properties:
        cpus:
          type: integer
          description: CPU count
          example: 3114547486064229816
        images:
          type: array
          items:
            $ref: '#/components/schemas/Image'
          description: Image references
          example:
          - cdrom: true
            path: Sint rerum rerum porro eius.
            volume: Labore voluptas perferendis ea iusto adipisci.
          - cdrom: true
            path: Sint rerum rerum porro eius.
            volume: Labore voluptas perferendis ea iusto adipisci.
        memory:
          type: integer
          description: Memory (in megabytes)
          example: 13118154824415273872
        name:
          type: string
          description: Name of VM; does not need to be unique
          example: Neque corporis omnis corporis.
      example:
        cpus: 1702224486107515112
        images:
        - cdrom: true
          path: Sint rerum rerum porro eius.
          volume: Labore voluptas perferendis ea iusto adipisci.
        - cdrom: true
          path: Sint rerum rerum porro eius.
          volume: Labore voluptas perferendis ea iusto adipisci.
        memory: 14163983666917793471
        name: Et laudantium natus sed et qui minima.
      required:
      - name
      - cpus
      - memory
      - images
    VMCreateRequestBody:
      type: object
      properties:
        cpus:
          type: integer
          description: CPU count
          example: 17071114923744362188
        memory:
          type: integer
          description: Memory (in megabytes)
          example: 1790785067899035058
        name:
          type: string
          description: Name of VM; does not need to be unique
          example: Quidem dicta vero dolores veniam.
        storage:
          type: array
          items:
            $ref: '#/components/schemas/Storage'
          description: Storage references
          example:
          - cdrom: true
            image: Esse reprehenderit qui molestias eum voluptatem.
            image_size: 11533824901793082147
            volume: Occaecati deserunt qui praesentium.
          - cdrom: true
            image: Esse reprehenderit qui molestias eum voluptatem.
            image_size: 11533824901793082147
            volume: Occaecati deserunt qui praesentium.
          - cdrom: true
            image: Esse reprehenderit qui molestias eum voluptatem.
            image_size: 11533824901793082147
            volume: Occaecati deserunt qui praesentium.
      example:
        cpus: 10201408861359388813
        memory: 8934361692444837416
        name: Voluptas repellat quisquam atque.
        storage:
        - cdrom: true
          image: Esse reprehenderit qui molestias eum voluptatem.
          image_size: 11533824901793082147
          volume: Occaecati deserunt qui praesentium.
        - cdrom: true
          image: Esse reprehenderit qui molestias eum voluptatem.
          image_size: 11533824901793082147
          volume: Occaecati deserunt qui praesentium.
        - cdrom: true
          image: Esse reprehenderit qui molestias eum voluptatem.
          image_size: 11533824901793082147
          volume: Occaecati deserunt qui praesentium.
        - cdrom: true
          image: Esse reprehenderit qui molestias eum voluptatem.
          image_size: 11533824901793082147
          volume: Occaecati deserunt qui praesentium.
      required:
      - name
      - cpus
      - memory
      - storage
    VMUpdateRequestBody:
      type: object
      properties:
        vm:
          $ref: '#/components/schemas/UpdatedVM'
      example:
        vm:
          cpus: 3472743333644681302
          images:
          - cdrom: true
            path: Dignissimos qui error modi.
            volume: Corrupti et voluptatibus et et occaecati.
          - cdrom: true
            path: Dignissimos qui error modi.
            volume: Corrupti et voluptatibus et et occaecati.
          - cdrom: true
            path: Dignissimos qui error modi.
            volume: Corrupti et voluptatibus et et occaecati.
          memory: 639108202290023137
          name: Quo dolore soluta consectetur.
      required:
      - vm
