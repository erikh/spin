openapi: 3.0.3
info:
  title: Spin API service
  description: HTTP service for controlling the spin service
  version: "1.0"
servers:
- url: http://localhost:8080
paths:
  /add/{id}:
    post:
      tags:
      - spin-broker
      summary: add spin-broker
      description: Add a command to the package
      operationId: spin-broker#add
      parameters:
      - name: id
        in: path
        description: Package ID
        required: true
        schema:
          type: string
          description: Package ID
          example: Deserunt blanditiis consequatur consequuntur praesentium consequatur.
        example: Sunt iusto harum.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddRequestBody'
            example:
              action: Consequatur provident dignissimos.
              parameters:
                Velit quod sit aut.: Natus temporibus fugit occaecati ipsum qui.
              resource: Officiis porro fugiat.
      responses:
        "200":
          description: OK response.
          content:
            application/json:
              schema:
                type: string
                example: Blanditiis repudiandae.
              example: Accusantium labore.
  /complete:
    post:
      tags:
      - spin-broker
      summary: complete spin-broker
      description: Mark a command as completed with a result status
      operationId: spin-broker#complete
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CompleteRequestBody'
            example:
              id: Aut vero amet quia quis.
              status: true
              status_reason: Est et dicta id.
      responses:
        "200":
          description: OK response.
  /enqueue/{id}:
    post:
      tags:
      - spin-broker
      summary: enqueue spin-broker
      description: Enqueue the package into the various resource queues
      operationId: spin-broker#enqueue
      parameters:
      - name: id
        in: path
        description: Package ID
        required: true
        schema:
          type: string
          description: Package ID
          example: Corporis ab nulla quis.
        example: Voluptatem vel dicta.
      responses:
        "200":
          description: OK response.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
                  example: Accusantium consequuntur.
                example:
                - Inventore sed.
                - Deserunt dicta eaque reiciendis autem.
                - Accusamus esse blanditiis.
              example:
              - Dolorem quibusdam minus expedita.
              - Et iusto fugit.
              - Similique aliquid corrupti amet numquam sed totam.
              - Minima omnis.
  /new:
    post:
      tags:
      - spin-broker
      summary: new spin-broker
      description: Create a new package; a collection of items to join into the queue
        simultaneously
      operationId: spin-broker#new
      responses:
        "200":
          description: OK response.
          content:
            application/json:
              schema:
                type: string
                example: Et aperiam impedit autem optio ut.
              example: Tempore iste voluptatem est.
  /next/{resource}:
    get:
      tags:
      - spin-broker
      summary: next spin-broker
      description: Get the next command for a given resource
      operationId: spin-broker#next
      parameters:
      - name: resource
        in: path
        description: resource type
        required: true
        schema:
          type: string
          description: resource type
          example: Totam quia sit.
        example: Adipisci tempora.
      responses:
        "200":
          description: OK response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NextResponseBody'
              example:
                action: Corporis sit non sit recusandae eum repellat.
                parameters:
                  Sint eveniet hic minus facere.: Quas tempora nisi aperiam occaecati
                    deserunt qui.
                  Temporibus esse reprehenderit qui molestias.: Voluptatem qui nihil
                    officia.
                  Vel vel illum voluptatem voluptatibus.: Minima cum delectus occaecati
                    enim.
                resource: Unde inventore cupiditate soluta.
                uuid: Iure aut voluptas qui.
  /status/{id}:
    get:
      tags:
      - spin-broker
      summary: status spin-broker
      description: Get the status for a package
      operationId: spin-broker#status
      parameters:
      - name: id
        in: path
        description: Package ID
        required: true
        schema:
          type: string
          description: Package ID
          example: Culpa ut quidem aut et qui porro.
        example: Labore accusantium ut itaque odio explicabo perferendis.
      responses:
        "200":
          description: OK response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusResponseBody'
              example:
                reason: Repellendus eaque nesciunt quia.
                status: false
  /storage/volume/add:
    post:
      tags:
      - spin-apiserver
      summary: add_volume spin-apiserver
      description: Add a volume for image allocation with backing storage, and name
        it
      operationId: spin-apiserver#add_volume
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddVolumeRequestBody'
            example:
              path: Autem neque adipisci.
              volume: Quia soluta veniam adipisci quia.
      responses:
        "200":
          description: OK response.
  /storage/volume/image/create:
    post:
      tags:
      - spin-apiserver
      summary: create_image_on_volume spin-apiserver
      description: Create an image on a volume
      operationId: spin-apiserver#create_image_on_volume
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateImageOnVolumeRequestBody'
            example:
              image_name: Et et rerum ut voluptatem at fugit.
              image_size: 15419653682127034888
              volume: Dolor veritatis quo non quae rerum officia.
      responses:
        "200":
          description: OK response.
  /storage/volume/image/delete:
    post:
      tags:
      - spin-apiserver
      summary: delete_image_on_volume spin-apiserver
      description: Delete an image on a volume
      operationId: spin-apiserver#delete_image_on_volume
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteImageOnVolumeRequestBody'
            example:
              image_name: Minima et labore qui nobis.
              volume: Omnis dolor assumenda voluptatem dignissimos ut.
      responses:
        "200":
          description: OK response.
  /storage/volume/image/info/{volume}/{image_name}:
    get:
      tags:
      - spin-apiserver
      summary: info_image_on_volume spin-apiserver
      description: Obtain information on an image
      operationId: spin-apiserver#info_image_on_volume
      parameters:
      - name: volume
        in: path
        description: volume identifier
        required: true
        schema:
          type: string
          description: volume identifier
          example: Natus consectetur.
        example: Sint et nesciunt et molestiae soluta ut.
      - name: image_name
        in: path
        description: image name
        required: true
        schema:
          type: string
          description: image name
          example: Dolorem totam omnis molestiae.
        example: Rerum libero quas.
      responses:
        "200":
          description: OK response.
  /storage/volume/image/move:
    post:
      tags:
      - spin-apiserver
      summary: move_image spin-apiserver
      description: Move an image from one volume to another
      operationId: spin-apiserver#move_image
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MoveImageRequestBody'
            example:
              image_name: Ullam odio tenetur aliquid consequatur.
              target_volume: Id et autem ut debitis.
              volume: Quam neque.
      responses:
        "200":
          description: OK response.
  /storage/volume/image/resize:
    post:
      tags:
      - spin-apiserver
      summary: resize_image_on_volume spin-apiserver
      description: Resize an image on a volume
      operationId: spin-apiserver#resize_image_on_volume
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateImageOnVolumeRequestBody'
            example:
              image_name: Harum et tempora rem qui quia.
              image_size: 7533879699541094989
              volume: Non dicta quisquam rem qui.
      responses:
        "200":
          description: OK response.
  /storage/volume/info/{volume}:
    get:
      tags:
      - spin-apiserver
      summary: info_volume spin-apiserver
      description: Get information on a volume
      operationId: spin-apiserver#info_volume
      parameters:
      - name: volume
        in: path
        description: volume identifier
        required: true
        schema:
          type: string
          description: volume identifier
          example: Asperiores tempora.
        example: Inventore inventore qui nihil.
      responses:
        "200":
          description: OK response.
  /storage/volume/label/{volume}/{label}:
    post:
      tags:
      - spin-apiserver
      summary: label_volume spin-apiserver
      description: Apply a label to a volume.
      operationId: spin-apiserver#label_volume
      parameters:
      - name: volume
        in: path
        description: volume identifier
        required: true
        schema:
          type: string
          description: volume identifier
          example: Ratione occaecati.
        example: Vel in modi rerum.
      - name: label
        in: path
        description: label identifier to apply to volume
        required: true
        schema:
          type: string
          description: label identifier to apply to volume
          example: Ut veritatis aut.
        example: Deleniti incidunt.
      responses:
        "200":
          description: OK response.
  /storage/volume/remove/{volume}:
    post:
      tags:
      - spin-apiserver
      summary: remove_volume spin-apiserver
      description: Remove a volume. Requires all images to be removed.
      operationId: spin-apiserver#remove_volume
      parameters:
      - name: volume
        in: path
        description: volume identifier
        required: true
        schema:
          type: string
          description: volume identifier
          example: Quisquam harum ad ipsum.
        example: Quasi quia vel ut suscipit cupiditate.
      responses:
        "200":
          description: OK response.
components:
  schemas:
    AddRequestBody:
      type: object
      properties:
        action:
          type: string
          description: Action name
          example: Consectetur commodi.
        parameters:
          type: object
          description: Action parameters
          example:
            Explicabo quaerat officiis voluptatum deleniti maxime.: Vero omnis sed
              qui sint delectus quis.
            Quos reiciendis et quisquam ex.: Voluptas voluptate et in animi quos voluptatem.
          additionalProperties: true
        resource:
          type: string
          description: Resource name
          example: Numquam provident occaecati animi.
      example:
        action: Molestiae nihil tempora.
        parameters:
          Sit quis itaque.: Qui recusandae.
        resource: Recusandae nobis.
      required:
      - resource
      - action
    AddVolumeRequestBody:
      type: object
      properties:
        path:
          type: string
          description: path to backing storage
          example: Incidunt quae est velit eaque mollitia.
        volume:
          type: string
          description: volume identifier
          example: Itaque omnis fuga.
      example:
        path: Nemo omnis quia deleniti voluptate.
        volume: Odio similique qui qui architecto.
      required:
      - volume
      - path
    CompleteRequestBody:
      type: object
      properties:
        id:
          type: string
          description: Command ID
          example: Sapiente sequi molestiae inventore aut.
        status:
          type: boolean
          description: status of work
          example: false
        status_reason:
          type: string
          description: reason of success/failure
          example: Perspiciatis inventore dolore.
      example:
        id: Voluptas veniam soluta eum laudantium tempora pariatur.
        status: false
        status_reason: Eveniet qui ad aut.
      required:
      - id
      - status
    CreateImageOnVolumeRequestBody:
      type: object
      properties:
        image_name:
          type: string
          description: image name
          example: Ea qui omnis qui.
        image_size:
          type: integer
          description: image size in GB
          example: 10396896588555547173
        volume:
          type: string
          description: volume identifier
          example: Vel vel enim ut voluptas.
      example:
        image_name: Quas aliquam sit quaerat.
        image_size: 13139907858509298089
        volume: Dolor cupiditate perspiciatis.
      required:
      - image_name
      - image_size
      - volume
    DeleteImageOnVolumeRequestBody:
      type: object
      properties:
        image_name:
          type: string
          description: image name
          example: Quia voluptatem adipisci et provident.
        volume:
          type: string
          description: volume identifier
          example: Ea iusto modi aspernatur.
      example:
        image_name: Qui sit nihil.
        volume: Libero commodi placeat.
      required:
      - image_name
      - volume
    MoveImageRequestBody:
      type: object
      properties:
        image_name:
          type: string
          description: image name
          example: Nostrum est totam.
        target_volume:
          type: string
          description: volume identifier to move to
          example: Sequi voluptatem culpa unde ut.
        volume:
          type: string
          description: volume identifier
          example: Eligendi quod voluptas sed.
      example:
        image_name: Aut ut illum.
        target_volume: Quibusdam error dolorem.
        volume: Repudiandae eos.
      required:
      - image_name
      - volume
      - target_volume
    NextResponseBody:
      type: object
      properties:
        action:
          type: string
          description: action name
          example: Earum hic sequi.
        parameters:
          type: object
          description: parameters for action
          example:
            Fugiat excepturi sed nisi aut tempore aliquam.: Illum molestiae voluptates
              natus.
            Qui iusto ex.: Doloremque saepe in.
            Reiciendis eveniet repudiandae reiciendis perferendis impedit reiciendis.: Reprehenderit
              quo ab iure nihil.
          additionalProperties: true
        resource:
          type: string
          description: resource type
          example: Quae at sed necessitatibus et.
        uuid:
          type: string
          description: Command ID
          example: Sit facilis deleniti cum repudiandae veniam vel.
      example:
        action: Nulla sit.
        parameters:
          Rerum odit.: Cupiditate amet.
          Voluptas dolorem.: Corporis quo.
        resource: Est quisquam inventore quae.
        uuid: Non officiis molestiae nostrum quia quisquam.
      required:
      - uuid
      - resource
      - action
    StatusResponseBody:
      type: object
      properties:
        reason:
          type: string
          description: Failure reason (if any)
          example: Voluptate voluptas perspiciatis in inventore.
        status:
          type: boolean
          description: Pass/Fail status
          example: true
      example:
        reason: Temporibus repudiandae inventore cupiditate commodi aut asperiores.
        status: true
      required:
      - status
