openapi: 3.0.3
info:
  title: Spin API service
  description: HTTP service for controlling the spin service
  version: "1.0"
servers:
- url: http://localhost:8080
paths:
  /add/{id}:
    post:
      tags:
      - spin-broker
      summary: add spin-broker
      description: Add a command to the package
      operationId: spin-broker#add
      parameters:
      - name: id
        in: path
        description: Package ID
        required: true
        schema:
          type: string
          description: Package ID
          example: Cupiditate neque eos aperiam.
        example: Sunt doloremque.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddRequestBody'
            example:
              action: Mollitia natus temporibus fugit occaecati ipsum qui.
              parameters:
                Aut molestiae deleniti ad dolorem.: Rerum quam adipisci est incidunt sequi.
              resource: Possimus velit quod sit.
      responses:
        "200":
          description: OK response.
          content:
            application/json:
              schema:
                type: string
                example: Sapiente sequi molestiae inventore aut.
              example: Sint ut perspiciatis.
  /complete:
    post:
      tags:
      - spin-broker
      summary: complete spin-broker
      description: Mark a command as completed with a result status
      operationId: spin-broker#complete
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CompleteRequestBody'
            example:
              id: Quas tempora nisi aperiam occaecati deserunt qui.
              status: false
              status_reason: Esse reprehenderit qui molestias eum voluptatem.
      responses:
        "200":
          description: OK response.
  /create:
    post:
      tags:
      - spin-registry
      summary: create spin-registry
      description: Create a VM
      operationId: spin-registry#create
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateRequestBody'
            example:
              cpus: 9896149697376370528
              memory: 12073838662949931649
              name: Nihil officia aspernatur.
              storage:
              - cdrom: true
                image: In aut vero amet.
                image_size: 4230286153146778503
                volume: Voluptatibus est minima cum delectus occaecati.
              - cdrom: true
                image: In aut vero amet.
                image_size: 4230286153146778503
                volume: Voluptatibus est minima cum delectus occaecati.
              - cdrom: true
                image: In aut vero amet.
                image_size: 4230286153146778503
                volume: Voluptatibus est minima cum delectus occaecati.
              - cdrom: true
                image: In aut vero amet.
                image_size: 4230286153146778503
                volume: Voluptatibus est minima cum delectus occaecati.
      responses:
        "200":
          description: OK response.
          content:
            application/json:
              schema:
                type: integer
                example: 14618798313825648874
              example: 7475481607211065162
  /delete/{id}:
    post:
      tags:
      - spin-registry
      summary: delete spin-registry
      description: Delete a VM by ID
      operationId: spin-registry#delete
      parameters:
      - name: id
        in: path
        description: ID of VM to remove
        required: true
        schema:
          type: integer
          description: ID of VM to remove
          example: 16557086895169525114
        example: 14923587859589268907
      responses:
        "200":
          description: OK response.
  /enqueue/{id}:
    post:
      tags:
      - spin-broker
      summary: enqueue spin-broker
      description: Enqueue the package into the various resource queues
      operationId: spin-broker#enqueue
      parameters:
      - name: id
        in: path
        description: Package ID
        required: true
        schema:
          type: string
          description: Package ID
          example: Quos maxime ut error facilis modi autem.
        example: Corporis nam.
      responses:
        "200":
          description: OK response.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
                  example: Officiis perspiciatis.
                example:
                - Voluptate voluptas veniam.
                - Eum laudantium tempora pariatur possimus autem.
                - Qui ad aut possimus quisquam harum.
              example:
              - Modi qui voluptatem placeat rem.
              - Dolore ea at ut veritatis expedita voluptatem.
  /get/{id}:
    get:
      tags:
      - spin-registry
      summary: get spin-registry
      description: Retrieve a VM by ID
      operationId: spin-registry#get
      parameters:
      - name: id
        in: path
        description: ID of VM to remove
        required: true
        schema:
          type: integer
          description: ID of VM to remove
          example: 6478489609357119053
        example: 12886258942075434404
      responses:
        "200":
          description: OK response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateRequestBody'
              example:
                cpus: 18117003792351848781
                memory: 11558656387660500473
                name: Fugit quis.
                storage:
                - cdrom: false
                  image: Non aut minima.
                  image_size: 11766528356471425167
                  volume: Adipisci sapiente.
                - cdrom: false
                  image: Non aut minima.
                  image_size: 11766528356471425167
                  volume: Adipisci sapiente.
                - cdrom: false
                  image: Non aut minima.
                  image_size: 11766528356471425167
                  volume: Adipisci sapiente.
  /list:
    get:
      tags:
      - spin-registry
      summary: list spin-registry
      description: Retrieve all VM IDs
      operationId: spin-registry#list
      responses:
        "200":
          description: OK response.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: integer
                  example: 993885735012684194
                example:
                - 15556878159407303933
                - 6521501625636069185
                - 8803024106508117673
                - 3469599600667156941
              example:
              - 10559257291347331479
              - 10639272094763521843
              - 4443863834301358860
              - 6001672524861556042
  /new:
    post:
      tags:
      - spin-broker
      summary: new spin-broker
      description: Create a new package; a collection of items to join into the queue simultaneously
      operationId: spin-broker#new
      responses:
        "200":
          description: OK response.
          content:
            application/json:
              schema:
                type: string
                example: At sed necessitatibus et asperiores earum hic.
              example: Qui quibusdam odio est nulla eum.
  /next/{resource}:
    get:
      tags:
      - spin-broker
      summary: next spin-broker
      description: Get the next command for a given resource
      operationId: spin-broker#next
      parameters:
      - name: resource
        in: path
        description: resource type
        required: true
        schema:
          type: string
          description: resource type
          example: Et magnam sed iusto quam non.
        example: Fugiat distinctio eveniet assumenda temporibus.
      responses:
        "200":
          description: OK response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NextResponseBody'
              example:
                action: Unde inventore cupiditate soluta.
                parameters:
                  Sit non sit recusandae eum.: Earum provident sint eveniet hic minus facere.
                resource: Iure aut voluptas qui.
                uuid: Consequatur quo exercitationem occaecati magnam molestiae qui.
        "400":
          description: No records were found
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                id: 3F1FKVRR
                message: Value of ID must be an integer
                name: bad_request
  /status/{id}:
    get:
      tags:
      - spin-broker
      summary: status spin-broker
      description: Get the status for a package
      operationId: spin-broker#status
      parameters:
      - name: id
        in: path
        description: Package ID
        required: true
        schema:
          type: string
          description: Package ID
          example: Voluptatem dicta.
        example: Tenetur qui.
      responses:
        "200":
          description: OK response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusResponseBody'
              example:
                reason: Illum omnis suscipit illum repellendus.
                status: false
        "400":
          description: No records were found
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                id: 3F1FKVRR
                message: Value of ID must be an integer
                name: bad_request
  /storage/volume/add:
    post:
      tags:
      - spin-apiserver
      summary: add_volume spin-apiserver
      description: Add a volume for image allocation with backing storage, and name it
      operationId: spin-apiserver#add_volume
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddVolumeRequestBody'
            example:
              path: Et consequatur sunt.
              volume: At distinctio magni quibusdam reiciendis ipsum commodi.
      responses:
        "200":
          description: OK response.
  /storage/volume/image/create:
    post:
      tags:
      - spin-apiserver
      summary: create_image_on_volume spin-apiserver
      description: Create an image on a volume
      operationId: spin-apiserver#create_image_on_volume
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateImageOnVolumeRequestBody'
            example:
              image_name: Rem qui quia voluptas.
              image_size: 2016887882939484835
              volume: Dicta quisquam.
      responses:
        "200":
          description: OK response.
  /storage/volume/image/delete:
    post:
      tags:
      - spin-apiserver
      summary: delete_image_on_volume spin-apiserver
      description: Delete an image on a volume
      operationId: spin-apiserver#delete_image_on_volume
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteImageOnVolumeRequestBody'
            example:
              image_name: Qui ut.
              volume: Est reprehenderit.
      responses:
        "200":
          description: OK response.
  /storage/volume/image/info/{volume}/{image_name}:
    get:
      tags:
      - spin-apiserver
      summary: info_image_on_volume spin-apiserver
      description: Obtain information on an image
      operationId: spin-apiserver#info_image_on_volume
      parameters:
      - name: volume
        in: path
        description: volume identifier
        required: true
        schema:
          type: string
          description: volume identifier
          example: Nihil error.
        example: Minima fugit.
      - name: image_name
        in: path
        description: image name
        required: true
        schema:
          type: string
          description: image name
          example: Recusandae in voluptas laborum corrupti.
        example: Quis sed voluptas omnis.
      responses:
        "200":
          description: OK response.
  /storage/volume/image/move:
    post:
      tags:
      - spin-apiserver
      summary: move_image spin-apiserver
      description: Move an image from one volume to another
      operationId: spin-apiserver#move_image
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MoveImageRequestBody'
            example:
              image_name: Id et autem ut debitis.
              target_volume: Quaerat itaque aut.
              volume: Saepe occaecati impedit quas laborum.
      responses:
        "200":
          description: OK response.
  /storage/volume/image/resize:
    post:
      tags:
      - spin-apiserver
      summary: resize_image_on_volume spin-apiserver
      description: Resize an image on a volume
      operationId: spin-apiserver#resize_image_on_volume
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateImageOnVolumeRequestBody'
            example:
              image_name: Nesciunt omnis voluptatem ullam.
              image_size: 7948336710745379137
              volume: Sint ad ut nulla.
      responses:
        "200":
          description: OK response.
  /storage/volume/info/{volume}:
    get:
      tags:
      - spin-apiserver
      summary: info_volume spin-apiserver
      description: Get information on a volume
      operationId: spin-apiserver#info_volume
      parameters:
      - name: volume
        in: path
        description: volume identifier
        required: true
        schema:
          type: string
          description: volume identifier
          example: Sint voluptatem.
        example: Recusandae unde sed.
      responses:
        "200":
          description: OK response.
  /storage/volume/label/{volume}/{label}:
    post:
      tags:
      - spin-apiserver
      summary: label_volume spin-apiserver
      description: Apply a label to a volume.
      operationId: spin-apiserver#label_volume
      parameters:
      - name: volume
        in: path
        description: volume identifier
        required: true
        schema:
          type: string
          description: volume identifier
          example: Sed fugiat autem ut modi.
        example: Quo cum fugit facere ea voluptas libero.
      - name: label
        in: path
        description: label identifier to apply to volume
        required: true
        schema:
          type: string
          description: label identifier to apply to volume
          example: Repudiandae illum ut.
        example: Optio nemo dolor doloremque similique eligendi veniam.
      responses:
        "200":
          description: OK response.
  /storage/volume/remove/{volume}:
    post:
      tags:
      - spin-apiserver
      summary: remove_volume spin-apiserver
      description: Remove a volume. Requires all images to be removed.
      operationId: spin-apiserver#remove_volume
      parameters:
      - name: volume
        in: path
        description: volume identifier
        required: true
        schema:
          type: string
          description: volume identifier
          example: Libero nisi.
        example: Quasi consequatur.
      responses:
        "200":
          description: OK response.
  /update/{id}:
    post:
      tags:
      - spin-registry
      summary: update spin-registry
      description: Update a VM
      operationId: spin-registry#update
      parameters:
      - name: id
        in: path
        description: ID of VM to update
        required: true
        schema:
          type: integer
          description: ID of VM to update
          example: 10962833320592094436
        example: 8598373107254708028
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateRequestBody'
            example:
              vm:
                cpus: 11228093715167016376
                memory: 17276208712818042774
                name: Dicta id sint rerum rerum.
                storage:
                - cdrom: true
                  image: In aut vero amet.
                  image_size: 4230286153146778503
                  volume: Voluptatibus est minima cum delectus occaecati.
                - cdrom: true
                  image: In aut vero amet.
                  image_size: 4230286153146778503
                  volume: Voluptatibus est minima cum delectus occaecati.
      responses:
        "200":
          description: OK response.
components:
  schemas:
    AddRequestBody:
      type: object
      properties:
        action:
          type: string
          description: Action name
          example: Aliquam quae illum molestiae.
        parameters:
          type: object
          description: Action parameters
          example:
            Dolores reprehenderit quo ab iure.: Voluptas non officiis.
            Eveniet repudiandae.: Perferendis impedit.
            Neque qui iusto ex et doloremque.: In repudiandae.
          additionalProperties: true
        resource:
          type: string
          description: Resource name
          example: Officia animi fugiat excepturi sed nisi aut.
      example:
        action: Quae incidunt nulla sit.
        parameters:
          Rerum odit.: Cupiditate amet.
          Voluptas dolorem.: Corporis quo.
        resource: Nostrum quia quisquam hic est quisquam.
      required:
      - resource
      - action
    AddVolumeRequestBody:
      type: object
      properties:
        path:
          type: string
          description: path to backing storage
          example: Occaecati animi saepe consectetur commodi.
        volume:
          type: string
          description: volume identifier
          example: Optio ut quidem numquam.
      example:
        path: Officia voluptas voluptate.
        volume: Veritatis quos reiciendis et quisquam.
      required:
      - volume
      - path
    CompleteRequestBody:
      type: object
      properties:
        id:
          type: string
          description: Command ID
          example: Labore labore accusantium ut itaque odio.
        status:
          type: boolean
          description: status of work
          example: false
        status_reason:
          type: string
          description: reason of success/failure
          example: Quaerat totam quia sit cum.
      example:
        id: Tempora qui.
        status: false
        status_reason: Rerum hic.
      required:
      - id
      - status
    CreateImageOnVolumeRequestBody:
      type: object
      properties:
        image_name:
          type: string
          description: image name
          example: In animi quos voluptatem qui explicabo.
        image_size:
          type: integer
          description: image size in GB
          example: 13124002196048537213
        volume:
          type: string
          description: volume identifier
          example: Voluptatum deleniti maxime possimus vero omnis.
      example:
        image_name: Qui sint delectus quis.
        image_size: 2802966637285714696
        volume: Nobis nisi molestiae.
      required:
      - image_name
      - image_size
      - volume
    CreateRequestBody:
      type: object
      properties:
        cpus:
          type: integer
          description: CPU count
          example: 11690391126467062567
        memory:
          type: integer
          description: Memory (in megabytes)
          example: 4645972946162694718
        name:
          type: string
          description: Name of VM; does not need to be unique
          example: In qui eaque omnis odio quia.
        storage:
          type: array
          items:
            $ref: '#/components/schemas/Storage'
          description: Storage references
          example:
          - cdrom: true
            image: In aut vero amet.
            image_size: 4230286153146778503
            volume: Voluptatibus est minima cum delectus occaecati.
          - cdrom: true
            image: In aut vero amet.
            image_size: 4230286153146778503
            volume: Voluptatibus est minima cum delectus occaecati.
      example:
        cpus: 8701067751308364928
        memory: 798591105205778312
        name: Ut est quia nemo suscipit.
        storage:
        - cdrom: true
          image: In aut vero amet.
          image_size: 4230286153146778503
          volume: Voluptatibus est minima cum delectus occaecati.
        - cdrom: true
          image: In aut vero amet.
          image_size: 4230286153146778503
          volume: Voluptatibus est minima cum delectus occaecati.
        - cdrom: true
          image: In aut vero amet.
          image_size: 4230286153146778503
          volume: Voluptatibus est minima cum delectus occaecati.
        - cdrom: true
          image: In aut vero amet.
          image_size: 4230286153146778503
          volume: Voluptatibus est minima cum delectus occaecati.
      required:
      - name
      - cpus
      - memory
      - storage
    DeleteImageOnVolumeRequestBody:
      type: object
      properties:
        image_name:
          type: string
          description: image name
          example: Tempora eum officiis sit quis.
        volume:
          type: string
          description: volume identifier
          example: Ducimus qui recusandae aliquid blanditiis repudiandae adipisci.
      example:
        image_name: Consequuntur voluptas et inventore sed.
        volume: Deserunt dicta eaque reiciendis autem.
      required:
      - image_name
      - volume
    Error:
      type: object
      properties:
        fault:
          type: boolean
          description: Is the error a server-side fault?
          example: false
        id:
          type: string
          description: ID is a unique identifier for this particular occurrence of the problem.
          example: 123abc
        message:
          type: string
          description: Message is a human-readable explanation specific to this occurrence of the problem.
          example: parameter 'p' must be an integer
        name:
          type: string
          description: Name is the name of this class of errors.
          example: bad_request
        temporary:
          type: boolean
          description: Is the error temporary?
          example: true
        timeout:
          type: boolean
          description: Is the error a timeout?
          example: false
      example:
        id: 3F1FKVRR
        message: Value of ID must be an integer
        name: bad_request
      required:
      - name
      - id
      - message
      - temporary
      - timeout
      - fault
    MoveImageRequestBody:
      type: object
      properties:
        image_name:
          type: string
          description: image name
          example: Accusamus esse blanditiis.
        target_volume:
          type: string
          description: volume identifier to move to
          example: In inventore.
        volume:
          type: string
          description: volume identifier
          example: Repellendus voluptate voluptas.
      example:
        image_name: Sequi temporibus.
        target_volume: Deleniti cum repudiandae veniam vel provident.
        volume: Inventore cupiditate commodi aut asperiores quidem sit.
      required:
      - image_name
      - volume
      - target_volume
    NextResponseBody:
      type: object
      properties:
        action:
          type: string
          description: action name
          example: Tempora quisquam inventore inventore qui nihil.
        parameters:
          type: object
          description: parameters for action
          example:
            Consectetur optio sint.: Nesciunt et molestiae soluta ut animi.
            Tempore iste voluptatem est.: Deserunt blanditiis consequatur consequuntur praesentium consequatur.
            Totam omnis molestiae.: Rerum libero quas.
          additionalProperties: true
        resource:
          type: string
          description: resource type
          example: Aut architecto deleniti incidunt alias.
        uuid:
          type: string
          description: Command ID
          example: Rerum eos ut.
      example:
        action: Corporis ab nulla quis.
        parameters:
          Aut similique aliquid.: Amet numquam sed totam accusantium minima.
          Quia culpa.: Quidem aut et qui.
          Vel dicta consequuntur tempora dolorem quibusdam minus.: Doloremque et iusto.
        resource: Accusantium labore.
        uuid: Sunt iusto harum.
      required:
      - uuid
      - resource
      - action
    StatusResponseBody:
      type: object
      properties:
        reason:
          type: string
          description: Failure reason (if any)
          example: Natus quasi quia vel ut.
        status:
          type: boolean
          description: Pass/Fail status
          example: true
      example:
        reason: Cumque ratione occaecati.
        status: false
      required:
      - status
    Storage:
      type: object
      properties:
        cdrom:
          type: boolean
          description: Is this image a cdrom?
          example: true
        image:
          type: string
          description: Image filename, must not include `/`
          example: Voluptas quae autem illum enim sequi soluta.
        image_size:
          type: integer
          description: Image size (in gigabytes)
          example: 8837125510370274380
        volume:
          type: string
          description: Volume name, must not include `/`
          example: Omnis dignissimos nihil soluta.
      example:
        cdrom: false
        image: Sit earum harum aliquam nobis dicta.
        image_size: 7727547545569181831
        volume: Ex tempora fugit adipisci aliquid aliquam vel.
      required:
      - volume
      - image
      - image_size
    UpdateRequestBody:
      type: object
      properties:
        vm:
          $ref: '#/components/schemas/CreateRequestBody'
      example:
        vm:
          cpus: 11228093715167016376
          memory: 17276208712818042774
          name: Dicta id sint rerum rerum.
          storage:
          - cdrom: true
            image: In aut vero amet.
            image_size: 4230286153146778503
            volume: Voluptatibus est minima cum delectus occaecati.
          - cdrom: true
            image: In aut vero amet.
            image_size: 4230286153146778503
            volume: Voluptatibus est minima cum delectus occaecati.
      required:
      - vm
