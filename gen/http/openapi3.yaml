openapi: 3.0.3
info:
  title: Spin API service
  description: HTTP service for controlling the spin service
  version: "1.0"
servers:
- url: http://localhost:8080
paths:
  /add/{id}:
    post:
      tags:
      - spin-broker
      summary: add spin-broker
      description: Add a command to the package
      operationId: spin-broker#add
      parameters:
      - name: id
        in: path
        description: Package ID
        required: true
        schema:
          type: string
          description: Package ID
          example: Dignissimos ullam sint fugit rem totam est.
        example: Earum nisi sed.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddRequestBody'
            example:
              action: Id et autem ut debitis.
              dependencies:
              - Aut molestiae deleniti ad dolorem.
              - Rerum quam adipisci est incidunt sequi.
              parameters:
                Occaecati impedit quas laborum consequatur.: Itaque aut dolorem.
                Possimus velit quod sit.: Mollitia natus temporibus fugit occaecati ipsum qui.
                Quibusdam dolor sit.: Porro fugiat ex consequatur provident dignissimos.
              resource: Quam neque.
      responses:
        "200":
          description: OK response.
          content:
            application/json:
              schema:
                type: string
                example: Sint ut perspiciatis.
              example: Quibusdam non neque magnam.
  /complete:
    post:
      tags:
      - spin-broker
      summary: complete spin-broker
      description: Mark a command as completed with a result status
      operationId: spin-broker#complete
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CompleteRequestBody'
            example:
              id: Aut vero amet quia quis.
              status: true
              status_reason: Est et dicta id.
      responses:
        "200":
          description: OK response.
  /control/shutdown/{id}:
    post:
      tags:
      - spin-apiserver
      summary: control_shutdown spin-apiserver
      operationId: spin-apiserver#control_shutdown
      parameters:
      - name: id
        in: path
        description: ID of VM to shutdown
        required: true
        schema:
          type: integer
          description: ID of VM to shutdown
          example: 8269822299929738958
        example: 12628878072929394706
      responses:
        "200":
          description: OK response.
  /control/start/{id}:
    post:
      tags:
      - spin-apiserver
      summary: control_start spin-apiserver
      operationId: spin-apiserver#control_start
      parameters:
      - name: id
        in: path
        description: ID of VM to start
        required: true
        schema:
          type: integer
          description: ID of VM to start
          example: 690719096842054834
        example: 5816977068149458459
      responses:
        "200":
          description: OK response.
  /control/stop/{id}:
    post:
      tags:
      - spin-apiserver
      summary: control_stop spin-apiserver
      operationId: spin-apiserver#control_stop
      parameters:
      - name: id
        in: path
        description: ID of VM to stop
        required: true
        schema:
          type: integer
          description: ID of VM to stop
          example: 2103949561816007462
        example: 17970882761446779996
      responses:
        "200":
          description: OK response.
  /enqueue/{id}:
    post:
      tags:
      - spin-broker
      summary: enqueue spin-broker
      description: Enqueue the package into the various resource queues
      operationId: spin-broker#enqueue
      parameters:
      - name: id
        in: path
        description: Package ID
        required: true
        schema:
          type: string
          description: Package ID
          example: Est ea.
        example: Veniam ut voluptatibus modi quo est.
      responses:
        "200":
          description: OK response.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
                  example: Quos maxime ut error facilis modi autem.
                example:
                - Nam aut deserunt modi qui.
                - Placeat rem ullam.
                - Ea at ut.
                - Expedita voluptatem reiciendis voluptatem dicta.
              example:
              - Vitae a non illum modi.
              - Est quia temporibus nam ex incidunt.
  /new:
    post:
      tags:
      - spin-broker
      summary: new spin-broker
      description: Create a new package; a collection of items to join into the queue simultaneously
      operationId: spin-broker#new
      responses:
        "200":
          description: OK response.
          content:
            application/json:
              schema:
                type: string
                example: Soluta necessitatibus voluptas quae autem.
              example: Dicta modi.
  /next/{resource}:
    get:
      tags:
      - spin-broker
      summary: next spin-broker
      description: Get the next command for a given resource
      operationId: spin-broker#next
      parameters:
      - name: resource
        in: path
        description: resource type
        required: true
        schema:
          type: string
          description: resource type
          example: Cumque ab officiis veniam et.
        example: Sit dolores sunt repudiandae quas assumenda voluptatem.
      responses:
        "200":
          description: OK response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NextResponseBody'
              example:
                action: Corporis sit non sit recusandae eum repellat.
                parameters:
                  Sint eveniet hic minus facere.: Quas tempora nisi aperiam occaecati deserunt qui.
                  Temporibus esse reprehenderit qui molestias.: Voluptatem qui nihil officia.
                  Vel vel illum voluptatem voluptatibus.: Minima cum delectus occaecati enim.
                resource: Unde inventore cupiditate soluta.
                uuid: Iure aut voluptas qui.
        "400":
          description: No records were found
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                id: 3F1FKVRR
                message: Value of ID must be an integer
                name: bad_request
  /status/{id}:
    get:
      tags:
      - spin-broker
      summary: status spin-broker
      description: Get the status for a package
      operationId: spin-broker#status
      parameters:
      - name: id
        in: path
        description: Package ID
        required: true
        schema:
          type: string
          description: Package ID
          example: Est omnis perferendis quia veritatis.
        example: Est illo.
      responses:
        "200":
          description: OK response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusResponseBody'
              example:
                causer: Nesciunt quia.
                reason: Illum omnis suscipit illum repellendus.
                status: false
        "400":
          description: No records were found
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                id: 3F1FKVRR
                message: Value of ID must be an integer
                name: bad_request
  /storage/images/create:
    post:
      tags:
      - spin-registry
      summary: storage_images_create spin-registry
      description: add an image definition to the registry
      operationId: spin-registry#storage_images_create
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Storage'
            example:
              cdrom: true
              image: Nostrum qui perferendis rerum molestias.
              image_size: 11387401285549308839
              volume: Iure qui voluptas.
      responses:
        "200":
          description: OK response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Image'
              example:
                cdrom: true
                path: Quia qui provident esse.
                volume: Ut sint officia quod tempora consequatur ut.
  /storage/images/delete:
    post:
      tags:
      - spin-registry
      summary: storage_images_delete spin-registry
      description: remove an image definition from the registry
      operationId: spin-registry#storage_images_delete
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StorageImagesDeleteRequestBody'
            example:
              image_name: Ipsam dicta accusantium.
              volume_name: Impedit laboriosam et dolorum tempora inventore officia.
      responses:
        "200":
          description: OK response.
  /storage/images/get:
    get:
      tags:
      - spin-registry
      summary: storage_images_get spin-registry
      description: retrieves an image definition from the registry
      operationId: spin-registry#storage_images_get
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StorageImagesDeleteRequestBody'
            example:
              image_name: Laudantium consectetur assumenda soluta.
              volume_name: In ea natus tempore.
      responses:
        "200":
          description: OK response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Image'
              example:
                cdrom: false
                path: Eaque neque.
                volume: Beatae nihil.
  /storage/images/list:
    get:
      tags:
      - spin-registry
      summary: storage_images_list spin-registry
      description: list all images by volume
      operationId: spin-registry#storage_images_list
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StorageImagesListRequestBody'
            example:
              volume_name: Sunt nesciunt natus dolorem.
      responses:
        "200":
          description: OK response.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
                  example: Voluptatem minima eos.
                example:
                - Vitae facere ducimus esse quaerat aut repellendus.
                - Nostrum quam.
                - Fuga mollitia id.
                - Officiis similique nostrum.
              example:
              - Numquam ut consequatur distinctio rerum aut.
              - Accusamus impedit.
  /storage/volumes/create:
    post:
      tags:
      - spin-registry
      summary: storage_volumes_create spin-registry
      description: create a new volume
      operationId: spin-registry#storage_volumes_create
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StorageVolumesCreateRequestBody'
            example:
              name: Ut ea excepturi.
              path: Facilis ad quod.
      responses:
        "200":
          description: OK response.
  /storage/volumes/delete:
    post:
      tags:
      - spin-registry
      summary: storage_volumes_delete spin-registry
      description: delete an existing volume
      operationId: spin-registry#storage_volumes_delete
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StorageVolumesDeleteRequestBody'
            example:
              name: Quia facere.
      responses:
        "200":
          description: OK response.
  /storage/volumes/list:
    get:
      tags:
      - spin-registry
      summary: storage_volumes_list spin-registry
      description: list all volumes
      operationId: spin-registry#storage_volumes_list
      responses:
        "200":
          description: OK response.
          content:
            application/json:
              schema:
                type: object
                example:
                  Aut culpa labore dicta error dolores reprehenderit.: Aliquam illo dolor sint et asperiores.
                  Tempore commodi deserunt et nemo expedita libero.: Id dolor similique.
                additionalProperties: true
              example:
                A sit nihil voluptas ea ea.: Eum aliquam fuga tempore aut.
                Rerum animi eligendi dolor non.: Autem mollitia facilis distinctio.
  /vm/create:
    post:
      tags:
      - spin-registry
      summary: vm_create spin-registry
      description: Create a VM
      operationId: spin-registry#vm_create
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VMCreateRequestBody2'
            example:
              cpus: 11176502060165847513
              images:
              - cdrom: false
                path: Qui quo.
                volume: Consectetur adipisci quia.
              - cdrom: false
                path: Qui quo.
                volume: Consectetur adipisci quia.
              - cdrom: false
                path: Qui quo.
                volume: Consectetur adipisci quia.
              memory: 15107782813490131477
              name: Nihil vitae nesciunt.
      responses:
        "200":
          description: OK response.
          content:
            application/json:
              schema:
                type: integer
                example: 5030323474742448459
              example: 9462182494075856820
  /vm/delete/{id}:
    post:
      tags:
      - spin-registry
      summary: vm_delete spin-registry
      description: Delete a VM by ID
      operationId: spin-registry#vm_delete
      parameters:
      - name: id
        in: path
        description: ID of VM to remove
        required: true
        schema:
          type: integer
          description: ID of VM to remove
          example: 9989459902408922925
        example: 15696056500231921993
      responses:
        "200":
          description: OK response.
  /vm/get/{id}:
    get:
      tags:
      - spin-registry
      summary: vm_get spin-registry
      description: Retrieve a VM by ID
      operationId: spin-registry#vm_get
      parameters:
      - name: id
        in: path
        description: ID of VM to remove
        required: true
        schema:
          type: integer
          description: ID of VM to remove
          example: 5435267161612186444
        example: 12227169246022071912
      responses:
        "200":
          description: OK response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VMCreateRequestBody2'
              example:
                cpus: 89266342018300151
                images:
                - cdrom: true
                  path: Vel qui vel qui dolores nihil.
                  volume: Soluta quisquam vero sit ratione molestiae.
                - cdrom: true
                  path: Vel qui vel qui dolores nihil.
                  volume: Soluta quisquam vero sit ratione molestiae.
                - cdrom: true
                  path: Vel qui vel qui dolores nihil.
                  volume: Soluta quisquam vero sit ratione molestiae.
                memory: 17754834975004199501
                name: Temporibus explicabo sit ab quo et quis.
  /vm/list:
    get:
      tags:
      - spin-registry
      summary: vm_list spin-registry
      description: Retrieve all VM IDs
      operationId: spin-registry#vm_list
      responses:
        "200":
          description: OK response.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: integer
                  example: 10201408861359388813
                example:
                - 10246474114867751402
                - 3223206614813158083
                - 16532479125458586046
                - 13635831619747663269
              example:
              - 15076802870552011670
              - 490764483522926250
              - 13146628272409874491
    post:
      tags:
      - spin-apiserver
      summary: vm_list spin-apiserver
      operationId: spin-apiserver#vm_list
      responses:
        "200":
          description: OK response.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: integer
                  example: 10749520403771631985
                example:
                - 2325974655675546200
                - 1575598517893245258
                - 10813764079942026063
                - 4082317100578603508
              example:
              - 79236725603308266
              - 3954204645673116440
              - 2184803700749897776
              - 7980892859187054070
  /vm/update/{id}:
    post:
      tags:
      - spin-registry
      summary: vm_update spin-registry
      description: Update a VM
      operationId: spin-registry#vm_update
      parameters:
      - name: id
        in: path
        description: ID of VM to update
        required: true
        schema:
          type: integer
          description: ID of VM to update
          example: 7602565543342206846
        example: 13821929301539534014
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VMUpdateRequestBody'
            example:
              vm:
                cpus: 13026661461146096768
                images:
                - cdrom: false
                  path: Qui quo.
                  volume: Consectetur adipisci quia.
                - cdrom: false
                  path: Qui quo.
                  volume: Consectetur adipisci quia.
                memory: 9696665001313275905
                name: Neque excepturi.
      responses:
        "200":
          description: OK response.
components:
  schemas:
    AddRequestBody:
      type: object
      properties:
        action:
          type: string
          description: Action name
          example: Autem ex tempora fugit adipisci aliquid aliquam.
        dependencies:
          type: array
          items:
            type: string
            example: Mollitia est aliquam.
          description: Dependency UUIDs
          example:
          - Placeat quasi consequatur.
          - Sed fugiat autem ut modi.
          - Quo cum fugit facere ea voluptas libero.
        parameters:
          type: object
          description: Action parameters
          example:
            Quia nemo.: Alias vero non ut id aut dolores.
            Sit earum harum aliquam nobis dicta.: Optio quisquam dolores ut.
          additionalProperties: true
        resource:
          type: string
          description: Resource name
          example: Enim sequi soluta omnis.
      example:
        action: Optio nemo dolor doloremque similique eligendi veniam.
        dependencies:
        - Est nulla eum.
        - Cupiditate neque eos aperiam.
        - Sunt doloremque.
        parameters:
          In voluptas laborum corrupti magnam quis.: Voluptas omnis asperiores qui.
          Voluptatem voluptatem recusandae unde sed commodi nihil.: Ipsum minima fugit vero.
        resource: Repudiandae illum ut.
      required:
      - resource
      - action
    CompleteRequestBody:
      type: object
      properties:
        id:
          type: string
          description: Command ID
          example: Blanditiis eum.
        status:
          type: boolean
          description: status of work
          example: false
        status_reason:
          type: string
          description: reason of success/failure
          example: Optio voluptatem.
      example:
        id: Fugit in molestiae repellat cupiditate odit.
        status: false
        status_reason: Corrupti reiciendis consequatur eos aut laborum.
      required:
      - id
      - status
    Error:
      type: object
      properties:
        fault:
          type: boolean
          description: Is the error a server-side fault?
          example: true
        id:
          type: string
          description: ID is a unique identifier for this particular occurrence of the problem.
          example: 123abc
        message:
          type: string
          description: Message is a human-readable explanation specific to this occurrence of the problem.
          example: parameter 'p' must be an integer
        name:
          type: string
          description: Name is the name of this class of errors.
          example: bad_request
        temporary:
          type: boolean
          description: Is the error temporary?
          example: false
        timeout:
          type: boolean
          description: Is the error a timeout?
          example: false
      example:
        id: 3F1FKVRR
        message: Value of ID must be an integer
        name: bad_request
      required:
      - name
      - id
      - message
      - temporary
      - timeout
      - fault
    Image:
      type: object
      properties:
        cdrom:
          type: boolean
          description: Is this a cdrom image?
          example: false
        path:
          type: string
          description: Image path
          example: Ex est suscipit.
        volume:
          type: string
          description: Volume name
          example: Deleniti distinctio rerum doloremque architecto quia corrupti.
      example:
        cdrom: false
        path: Optio minus repellendus quibusdam.
        volume: Tempora et.
      required:
      - path
      - cdrom
    NextResponseBody:
      type: object
      properties:
        action:
          type: string
          description: action name
          example: Odio ea.
        parameters:
          type: object
          description: Action parameters
          example:
            Cum quae voluptas et omnis.: Et aut omnis reprehenderit dolorum non.
            Voluptate tempora fugit qui doloremque accusantium.: Corporis occaecati aut adipisci officia.
          additionalProperties: true
        resource:
          type: string
          description: resource type
          example: In temporibus.
        uuid:
          type: string
          description: Command ID
          example: Rerum facilis.
      example:
        action: Magnam officia quaerat ex vel ipsum.
        parameters:
          Et placeat.: Officiis velit hic unde assumenda praesentium.
        resource: Tempora est delectus et quia.
        uuid: Reprehenderit consequuntur inventore.
      required:
      - uuid
      - resource
      - action
    StatusResponseBody:
      type: object
      properties:
        causer:
          type: string
          description: Failure causer as UUID (if any)
          example: Quam non.
        reason:
          type: string
          description: Failure reason (if any)
          example: Qui ipsa et magnam sed.
        status:
          type: boolean
          description: Pass/Fail status
          example: false
      example:
        causer: Illo eos repudiandae et vel corporis.
        reason: Distinctio eveniet assumenda temporibus a.
        status: true
      required:
      - status
    Storage:
      type: object
      properties:
        cdrom:
          type: boolean
          description: Is this image a cdrom?
          example: false
        image:
          type: string
          description: Image filename, no `/` characters
          example: Perferendis et.
        image_size:
          type: integer
          description: Image size (in gigabytes); required if image is not a cdrom
          example: 12720084377217601191
        volume:
          type: string
          description: Volume name; required if image is not a cdrom
          example: Molestias molestiae voluptatem quos inventore aut ratione.
      example:
        cdrom: true
        image: Deserunt et dolorem quis dolores laborum ut.
        image_size: 2637620970621584333
        volume: Sed ducimus ratione doloremque molestias enim architecto.
      required:
      - image
      - cdrom
    StorageImagesDeleteRequestBody:
      type: object
      properties:
        image_name:
          type: string
          description: name of image
          example: Molestiae quia eos.
        volume_name:
          type: string
          description: name of volume
          example: Pariatur cumque iusto sapiente.
      example:
        image_name: Officiis quia cum tenetur non occaecati.
        volume_name: Perferendis mollitia.
      required:
      - volume_name
      - image_name
    StorageImagesListRequestBody:
      type: object
      properties:
        volume_name:
          type: string
          description: name of volume to list images for
          example: Adipisci in quia cum autem.
      example:
        volume_name: Voluptatem est molestiae accusamus aperiam.
      required:
      - volume_name
    StorageVolumesCreateRequestBody:
      type: object
      properties:
        name:
          type: string
          description: name of volume
          example: Maxime dolorum voluptatibus minus neque.
        path:
          type: string
          description: path to volume
          example: Omnis corporis.
      example:
        name: Animi sunt suscipit.
        path: Laudantium natus.
      required:
      - name
      - path
    StorageVolumesDeleteRequestBody:
      type: object
      properties:
        name:
          type: string
          description: name of volume
          example: Et qui minima quo.
      example:
        name: Et tenetur autem.
      required:
      - name
    VMCreateRequestBody:
      type: object
      properties:
        cpus:
          type: integer
          description: CPU count
          example: 5362336180170212837
        memory:
          type: integer
          description: Memory (in megabytes)
          example: 487098314026947866
        name:
          type: string
          description: Name of VM; does not need to be unique
          example: Illo eligendi.
        storage:
          type: array
          items:
            $ref: '#/components/schemas/Storage'
          description: Storage references
          example:
          - cdrom: false
            image: Esse labore voluptas.
            image_size: 4373530742914524004
            volume: Rerum porro eius.
          - cdrom: false
            image: Esse labore voluptas.
            image_size: 4373530742914524004
            volume: Rerum porro eius.
          - cdrom: false
            image: Esse labore voluptas.
            image_size: 4373530742914524004
            volume: Rerum porro eius.
      example:
        cpus: 15733691521736250176
        memory: 3877737295592061159
        name: Ipsam qui omnis cum.
        storage:
        - cdrom: false
          image: Esse labore voluptas.
          image_size: 4373530742914524004
          volume: Rerum porro eius.
        - cdrom: false
          image: Esse labore voluptas.
          image_size: 4373530742914524004
          volume: Rerum porro eius.
        - cdrom: false
          image: Esse labore voluptas.
          image_size: 4373530742914524004
          volume: Rerum porro eius.
      required:
      - name
      - cpus
      - memory
      - storage
    VMCreateRequestBody2:
      type: object
      properties:
        cpus:
          type: integer
          description: CPU count
          example: 1919979314251366638
        images:
          type: array
          items:
            $ref: '#/components/schemas/Image'
          description: Image references
          example:
          - cdrom: false
            path: Qui quo.
            volume: Consectetur adipisci quia.
          - cdrom: false
            path: Qui quo.
            volume: Consectetur adipisci quia.
        memory:
          type: integer
          description: Memory (in megabytes)
          example: 17071114923744362188
        name:
          type: string
          description: Name of VM; does not need to be unique
          example: Vero dolores.
      example:
        cpus: 2937949108987365914
        images:
        - cdrom: false
          path: Qui quo.
          volume: Consectetur adipisci quia.
        - cdrom: false
          path: Qui quo.
          volume: Consectetur adipisci quia.
        - cdrom: false
          path: Qui quo.
          volume: Consectetur adipisci quia.
        memory: 4387007597452552916
        name: Impedit voluptas.
      required:
      - name
      - cpus
      - memory
      - images
    VMUpdateRequestBody:
      type: object
      properties:
        vm:
          $ref: '#/components/schemas/VMCreateRequestBody2'
      example:
        vm:
          cpus: 13026661461146096768
          images:
          - cdrom: false
            path: Qui quo.
            volume: Consectetur adipisci quia.
          - cdrom: false
            path: Qui quo.
            volume: Consectetur adipisci quia.
          memory: 9696665001313275905
          name: Neque excepturi.
      required:
      - vm
