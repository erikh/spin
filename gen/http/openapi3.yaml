openapi: 3.0.3
info:
  title: Spin API service
  description: HTTP service for controlling the spin service
  version: "1.0"
servers:
- url: http://localhost:8080
paths:
  /add/{id}:
    post:
      tags:
      - spin-broker
      summary: add spin-broker
      description: Add a command to the package
      operationId: spin-broker#add
      parameters:
      - name: id
        in: path
        description: Package ID
        required: true
        schema:
          type: string
          description: Package ID
          example: Voluptas omnis.
        example: Voluptatem velit quaerat dolorem ut earum vel.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddRequestBody'
            example:
              action: Voluptatem quibusdam dolor.
              dependencies:
              - Adipisci est incidunt sequi.
              - Maxime aut non.
              parameters:
                Mollitia natus temporibus fugit occaecati ipsum qui.: Non aut molestiae deleniti ad dolorem eos.
                Porro fugiat ex consequatur provident dignissimos.: Possimus velit quod sit.
              resource: Quaerat itaque aut.
      responses:
        "200":
          description: OK response.
          content:
            application/json:
              schema:
                type: string
                example: Et voluptatem.
              example: Ullam veniam et.
  /complete:
    post:
      tags:
      - spin-broker
      summary: complete spin-broker
      description: Mark a command as completed with a result status
      operationId: spin-broker#complete
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CompleteRequestBody'
            example:
              id: Occaecati enim in aut vero.
              status: true
              status_reason: Quis omnis suscipit est et dicta id.
      responses:
        "200":
          description: OK response.
  /control/shutdown/{id}:
    post:
      tags:
      - spin-apiserver
      summary: control_shutdown spin-apiserver
      operationId: spin-apiserver#control_shutdown
      parameters:
      - name: id
        in: path
        description: ID of VM to shutdown
        required: true
        schema:
          type: integer
          description: ID of VM to shutdown
          example: 13514308615995210853
        example: 4825121518222422172
      responses:
        "200":
          description: OK response.
  /control/start/{id}:
    post:
      tags:
      - spin-apiserver
      summary: control_start spin-apiserver
      operationId: spin-apiserver#control_start
      parameters:
      - name: id
        in: path
        description: ID of VM to start
        required: true
        schema:
          type: integer
          description: ID of VM to start
          example: 8871657074695646104
        example: 2923467907681747902
      responses:
        "200":
          description: OK response.
  /control/stop/{id}:
    post:
      tags:
      - spin-apiserver
      summary: control_stop spin-apiserver
      operationId: spin-apiserver#control_stop
      parameters:
      - name: id
        in: path
        description: ID of VM to stop
        required: true
        schema:
          type: integer
          description: ID of VM to stop
          example: 18000789287873795430
        example: 3128303368014196772
      responses:
        "200":
          description: OK response.
  /enqueue/{id}:
    post:
      tags:
      - spin-broker
      summary: enqueue spin-broker
      description: Enqueue the package into the various resource queues
      operationId: spin-broker#enqueue
      parameters:
      - name: id
        in: path
        description: Package ID
        required: true
        schema:
          type: string
          description: Package ID
          example: Ad consequatur labore tenetur non corrupti nemo.
        example: Et libero omnis.
      responses:
        "200":
          description: OK response.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
                  example: Molestiae accusamus aperiam ipsa voluptatem.
                example:
                - Porro quia vitae facere ducimus esse.
                - Aut repellendus et.
              example:
              - Voluptatibus dolor tempora et et.
              - Qui error.
  /new:
    post:
      tags:
      - spin-broker
      summary: new spin-broker
      description: Create a new package; a collection of items to join into the queue simultaneously
      operationId: spin-broker#new
      responses:
        "200":
          description: OK response.
          content:
            application/json:
              schema:
                type: string
                example: Eaque perferendis et quisquam odio.
              example: Nesciunt repudiandae.
  /next/{resource}:
    get:
      tags:
      - spin-broker
      summary: next spin-broker
      description: Get the next command for a given resource
      operationId: spin-broker#next
      parameters:
      - name: resource
        in: path
        description: resource type
        required: true
        schema:
          type: string
          description: resource type
          example: Numquam culpa non impedit voluptatum eum deserunt.
        example: Est quia aut fugit dolores ducimus sit.
      responses:
        "200":
          description: OK response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NextResponseBody'
              example:
                action: Voluptatem qui nihil officia.
                parameters:
                  Vel illum voluptatem.: Est minima cum.
                resource: Temporibus esse reprehenderit qui molestias.
                uuid: Quas tempora nisi aperiam occaecati deserunt qui.
        "400":
          description: No records were found
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                id: 3F1FKVRR
                message: Value of ID must be an integer
                name: bad_request
  /status/{id}:
    get:
      tags:
      - spin-broker
      summary: status spin-broker
      description: Get the status for a package
      operationId: spin-broker#status
      parameters:
      - name: id
        in: path
        description: Package ID
        required: true
        schema:
          type: string
          description: Package ID
          example: Consequatur alias veritatis perspiciatis dignissimos ut.
        example: Rerum dolorem.
      responses:
        "200":
          description: OK response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusResponseBody'
              example:
                causer: Cupiditate soluta ut corporis.
                reason: Aut voluptas qui fuga unde.
                status: true
        "400":
          description: No records were found
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                id: 3F1FKVRR
                message: Value of ID must be an integer
                name: bad_request
  /storage/images/create:
    post:
      tags:
      - spin-registry
      summary: storage_images_create spin-registry
      description: add an image definition to the registry
      operationId: spin-registry#storage_images_create
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Storage'
            example:
              cdrom: true
              image: Excepturi ut quo ipsum ea.
              image_size: 11424779710864672078
              volume: Aut dolores.
      responses:
        "200":
          description: OK response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Image'
              example:
                cdrom: true
                path: Autem doloribus sunt ut quos odio ut.
                volume: Quod distinctio voluptatibus sint.
  /storage/images/delete:
    post:
      tags:
      - spin-registry
      summary: storage_images_delete spin-registry
      description: remove an image definition from the registry
      operationId: spin-registry#storage_images_delete
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StorageImagesDeleteRequestBody'
            example:
              image_name: Laboriosam sunt minima saepe architecto.
              volume_name: Non quis quae nihil.
      responses:
        "200":
          description: OK response.
  /storage/images/get:
    get:
      tags:
      - spin-registry
      summary: storage_images_get spin-registry
      description: retrieves an image definition from the registry
      operationId: spin-registry#storage_images_get
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StorageImagesDeleteRequestBody'
            example:
              image_name: Laboriosam fugit.
              volume_name: Enim quos numquam recusandae ut.
      responses:
        "200":
          description: OK response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Image'
              example:
                cdrom: false
                path: Excepturi non voluptate.
                volume: Consectetur nihil omnis.
  /storage/images/list:
    get:
      tags:
      - spin-registry
      summary: storage_images_list spin-registry
      description: list all images by volume
      operationId: spin-registry#storage_images_list
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StorageImagesListRequestBody'
            example:
              volume_name: Nihil eius molestiae.
      responses:
        "200":
          description: OK response.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
                  example: Et quos dolorum perspiciatis aut officiis.
                example:
                - Quo illo dolor quisquam et vitae est.
                - Aut est eum tempore et aut.
                - Vitae amet deserunt ex voluptas.
              example:
              - Cupiditate magnam et odit.
              - Mollitia minus sit.
              - Et repellendus.
  /storage/volumes/create:
    post:
      tags:
      - spin-registry
      summary: storage_volumes_create spin-registry
      description: create a new volume
      operationId: spin-registry#storage_volumes_create
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StorageVolumesCreateRequestBody'
            example:
              name: Inventore officia voluptatem ipsam dicta accusantium magnam.
              path: Ea natus tempore distinctio laudantium.
      responses:
        "200":
          description: OK response.
  /storage/volumes/delete:
    post:
      tags:
      - spin-registry
      summary: storage_volumes_delete spin-registry
      description: delete an existing volume
      operationId: spin-registry#storage_volumes_delete
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StorageVolumesDeleteRequestBody'
            example:
              name: Assumenda soluta repellendus eaque neque vel accusamus.
      responses:
        "200":
          description: OK response.
  /storage/volumes/list:
    get:
      tags:
      - spin-registry
      summary: storage_volumes_list spin-registry
      description: list all volumes
      operationId: spin-registry#storage_volumes_list
      responses:
        "200":
          description: OK response.
          content:
            application/json:
              schema:
                type: object
                example:
                  Assumenda et eos ducimus.: At voluptatibus qui.
                  Eligendi autem rerum earum quod.: Quas nesciunt sit.
                  Molestiae aut nemo nisi impedit.: Eos dolorum assumenda.
                additionalProperties: true
              example:
                Qui asperiores ab labore praesentium.: Eum reiciendis et aspernatur quia.
  /vm/create:
    post:
      tags:
      - spin-registry
      summary: vm_create spin-registry
      description: Create a VM
      operationId: spin-registry#vm_create
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatedVM'
            example:
              cpus: 3494718681231017913
              images:
              - cdrom: true
                path: Explicabo sit ab.
                volume: Quis quidem nulla.
              - cdrom: true
                path: Explicabo sit ab.
                volume: Quis quidem nulla.
              memory: 6880761490829133714
              name: Et alias vel ratione vitae.
              ports:
                3864378703353671460: Et ipsa.
                15873164629935296188: Aliquam sit necessitatibus pariatur quam.
                16634640335248646168: Ut ea excepturi.
      responses:
        "200":
          description: OK response.
          content:
            application/json:
              schema:
                type: integer
                example: 13220153247905846809
              example: 97932829334449104
  /vm/delete/{id}:
    post:
      tags:
      - spin-registry
      summary: vm_delete spin-registry
      description: Delete a VM by ID
      operationId: spin-registry#vm_delete
      parameters:
      - name: id
        in: path
        description: ID of VM to remove
        required: true
        schema:
          type: integer
          description: ID of VM to remove
          example: 14087076174259405430
        example: 12037399230617772821
      responses:
        "200":
          description: OK response.
  /vm/get/{id}:
    get:
      tags:
      - spin-registry
      summary: vm_get spin-registry
      description: Retrieve a VM by ID
      operationId: spin-registry#vm_get
      parameters:
      - name: id
        in: path
        description: ID of VM to remove
        required: true
        schema:
          type: integer
          description: ID of VM to remove
          example: 10815374149414019247
        example: 3684000738643459833
      responses:
        "200":
          description: OK response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdatedVM'
              example:
                cpus: 6793360970585482452
                images:
                - cdrom: false
                  path: Assumenda pariatur.
                  volume: Nobis quia.
                - cdrom: false
                  path: Assumenda pariatur.
                  volume: Nobis quia.
                memory: 17587025896877711169
                name: Natus dolorem.
                ports:
                  12074463466689632421: Quis aut quis vel.
  /vm/list:
    get:
      tags:
      - spin-registry
      summary: vm_list spin-registry
      description: Retrieve all VM IDs
      operationId: spin-registry#vm_list
      responses:
        "200":
          description: OK response.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: integer
                  example: 8962178999691199343
                example:
                - 13915981687512532257
                - 5560254594027953364
              example:
              - 16761692981876870393
              - 17863615888723945999
              - 16191850245597757930
              - 1693998016204135272
    post:
      tags:
      - spin-apiserver
      summary: vm_list spin-apiserver
      operationId: spin-apiserver#vm_list
      responses:
        "200":
          description: OK response.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: integer
                  example: 8231224685283266409
                example:
                - 7875268023821760568
                - 781589962268051319
              example:
              - 11755569188599440157
              - 12822318561383257034
              - 4956381059942455969
              - 3031422679961079051
  /vm/update/{id}:
    post:
      tags:
      - spin-registry
      summary: vm_update spin-registry
      description: Update a VM
      operationId: spin-registry#vm_update
      parameters:
      - name: id
        in: path
        description: ID of VM to update
        required: true
        schema:
          type: integer
          description: ID of VM to update
          example: 9914667978882663996
        example: 17379606145343286346
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VMUpdateRequestBody'
            example:
              vm:
                cpus: 1235757894805898603
                images:
                - cdrom: true
                  path: Explicabo sit ab.
                  volume: Quis quidem nulla.
                - cdrom: true
                  path: Explicabo sit ab.
                  volume: Quis quidem nulla.
                - cdrom: true
                  path: Explicabo sit ab.
                  volume: Quis quidem nulla.
                - cdrom: true
                  path: Explicabo sit ab.
                  volume: Quis quidem nulla.
                memory: 11516433357545643392
                name: Rerum asperiores corporis aut.
                ports:
                  8213131886962674554: Maxime est voluptatem quia.
      responses:
        "200":
          description: OK response.
components:
  schemas:
    AddRequestBody:
      type: object
      properties:
        action:
          type: string
          description: Action name
          example: Deserunt et dolorem quis dolores laborum ut.
        dependencies:
          type: array
          items:
            type: string
            example: Architecto quia corrupti non optio minus.
          description: Dependency UUIDs
          example:
          - Quo est.
          - Et quidem dicta vero.
        parameters:
          type: object
          description: Action parameters
          example:
            Ex est suscipit.: Voluptatem deleniti distinctio rerum.
            Expedita aspernatur illo eligendi.: Cupiditate voluptas sapiente ipsam qui omnis.
            Id asperiores.: Id a iusto id deleniti delectus.
          additionalProperties: true
        resource:
          type: string
          description: Resource name
          example: Sed ducimus ratione doloremque molestias enim architecto.
      example:
        action: Repellat quisquam atque debitis quos quisquam nobis.
        dependencies:
        - Corporis sunt animi sunt suscipit et laudantium.
        - Sed et qui.
        - Quo enim.
        - Tenetur autem accusantium adipisci in quia cum.
        parameters:
          Libero rerum id dolor similique reiciendis.: Dolorum voluptatibus minus neque.
          Sint et asperiores sequi.: Commodi deserunt et nemo.
          Sit ullam aut culpa.: Dicta error dolores reprehenderit voluptatibus aliquam illo.
        resource: Veniam rerum unde et impedit.
      required:
      - resource
      - action
    CompleteRequestBody:
      type: object
      properties:
        id:
          type: string
          description: Command ID
          example: Quam hic veniam fuga.
        status:
          type: boolean
          description: status of work
          example: true
        status_reason:
          type: string
          description: reason of success/failure
          example: Dolor in fuga veritatis debitis dolores rerum.
      example:
        id: Eligendi dolor non vitae.
        status: false
        status_reason: Facilis distinctio soluta.
      required:
      - id
      - status
    Error:
      type: object
      properties:
        fault:
          type: boolean
          description: Is the error a server-side fault?
          example: true
        id:
          type: string
          description: ID is a unique identifier for this particular occurrence of the problem.
          example: 123abc
        message:
          type: string
          description: Message is a human-readable explanation specific to this occurrence of the problem.
          example: parameter 'p' must be an integer
        name:
          type: string
          description: Name is the name of this class of errors.
          example: bad_request
        temporary:
          type: boolean
          description: Is the error temporary?
          example: false
        timeout:
          type: boolean
          description: Is the error a timeout?
          example: false
      example:
        id: 3F1FKVRR
        message: Value of ID must be an integer
        name: bad_request
      required:
      - name
      - id
      - message
      - temporary
      - timeout
      - fault
    Image:
      type: object
      properties:
        cdrom:
          type: boolean
          description: Is this a cdrom image?
          example: true
        path:
          type: string
          description: Image path
          example: Recusandae ad.
        volume:
          type: string
          description: Volume name
          example: Sed voluptatem qui placeat.
      example:
        cdrom: false
        path: Dolor dolore harum aut omnis dolores veniam.
        volume: Dicta animi et.
      required:
      - path
      - cdrom
    NextResponseBody:
      type: object
      properties:
        action:
          type: string
          description: action name
          example: Sed voluptate quibusdam.
        parameters:
          type: object
          description: Action parameters
          example:
            A non illum modi amet est quia.: Nam ex incidunt eius est omnis.
            Magnam praesentium est ea laudantium veniam.: Voluptatibus modi quo est ex ut.
          additionalProperties: true
        resource:
          type: string
          description: resource type
          example: Sint fugit rem totam est est earum.
        uuid:
          type: string
          description: Command ID
          example: Laboriosam dicta modi aperiam dignissimos.
      example:
        action: Cumque ab officiis veniam et.
        parameters:
          Dolores sunt repudiandae.: Assumenda voluptatem incidunt et.
          Quod ipsam assumenda quisquam incidunt.: Perferendis voluptatem aspernatur voluptate aspernatur.
        resource: Est illo.
        uuid: Quia veritatis.
      required:
      - uuid
      - resource
      - action
    StatusResponseBody:
      type: object
      properties:
        causer:
          type: string
          description: Failure causer as UUID (if any)
          example: Officiis similique nostrum.
        reason:
          type: string
          description: Failure reason (if any)
          example: A fuga mollitia id.
        status:
          type: boolean
          description: Pass/Fail status
          example: false
      example:
        causer: Eaque perferendis mollitia officiis officiis quia.
        reason: Cumque iusto sapiente reprehenderit molestiae quia.
        status: false
      required:
      - status
    Storage:
      type: object
      properties:
        cdrom:
          type: boolean
          description: Is this image a cdrom?
          example: false
        image:
          type: string
          description: Image filename, no `/` characters
          example: Ea iste eum.
        image_size:
          type: integer
          description: Image size (in gigabytes); required if image is not a cdrom
          example: 9744574723449508564
        volume:
          type: string
          description: Volume name; required if image is not a cdrom
          example: Sit nihil voluptas.
      example:
        cdrom: false
        image: Aut culpa.
        image_size: 11959713165367391462
        volume: Aut ducimus dolorum numquam ut consequatur distinctio.
      required:
      - image
      - cdrom
    StorageImagesDeleteRequestBody:
      type: object
      properties:
        image_name:
          type: string
          description: name of image
          example: Dignissimos dicta incidunt molestias quam et officiis.
        volume_name:
          type: string
          description: name of volume
          example: Velit amet hic provident maxime non molestiae.
      example:
        image_name: Dignissimos culpa.
        volume_name: Dolores aut sint rerum est iusto.
      required:
      - volume_name
      - image_name
    StorageImagesListRequestBody:
      type: object
      properties:
        volume_name:
          type: string
          description: name of volume to list images for
          example: Qui qui sit natus deleniti.
      example:
        volume_name: Dolor facere ut sit.
      required:
      - volume_name
    StorageVolumesCreateRequestBody:
      type: object
      properties:
        name:
          type: string
          description: name of volume
          example: Id maiores molestias non eveniet dolor.
        path:
          type: string
          description: path to volume
          example: Itaque exercitationem et dolor quam at vel.
      example:
        name: Sit est nihil.
        path: Vel totam id sed eos.
      required:
      - name
      - path
    StorageVolumesDeleteRequestBody:
      type: object
      properties:
        name:
          type: string
          description: name of volume
          example: Sit error rerum.
      example:
        name: Deleniti ut occaecati.
      required:
      - name
    UpdatedVM:
      type: object
      properties:
        cpus:
          type: integer
          description: CPU count
          example: 5854498315240199031
        images:
          type: array
          items:
            $ref: '#/components/schemas/Image'
          description: Image references
          example:
          - cdrom: false
            path: Assumenda pariatur.
            volume: Nobis quia.
          - cdrom: false
            path: Assumenda pariatur.
            volume: Nobis quia.
        memory:
          type: integer
          description: Memory (in megabytes)
          example: 5958987546181294486
        name:
          type: string
          description: Name of VM; does not need to be unique
          example: Voluptatibus ea consectetur vel est.
        ports:
          type: object
          description: 'Ports to map to this vm: guest -> host addr:port'
          example:
            7579092437800866503: Soluta quis officiis optio ut officiis ut.
            13594912764782808897: Eos id corrupti labore recusandae.
          additionalProperties: true
      example:
        cpus: 6654514555936472138
        images:
        - cdrom: false
          path: Assumenda pariatur.
          volume: Nobis quia.
        - cdrom: false
          path: Assumenda pariatur.
          volume: Nobis quia.
        memory: 5541140479786195328
        name: Deleniti ad inventore et.
        ports:
          1275373272503732482: Sunt doloremque aspernatur aperiam et consequatur itaque.
          5830252623860967594: Explicabo libero esse vero.
      required:
      - name
      - cpus
      - memory
      - images
    VMCreateRequestBody:
      type: object
      properties:
        cpus:
          type: integer
          description: CPU count
          example: 12338536359429078288
        memory:
          type: integer
          description: Memory (in megabytes)
          example: 12572702711460281784
        name:
          type: string
          description: Name of VM; does not need to be unique
          example: Odit voluptas occaecati pariatur fugit.
        ports:
          type: object
          description: 'Ports to map to this vm: guest -> host addr:port'
          example:
            10512743238251449057: Voluptas asperiores mollitia autem.
            17018826349502984835: Velit labore quo adipisci et modi.
          additionalProperties: true
        storage:
          type: array
          items:
            $ref: '#/components/schemas/Storage'
          description: Storage references
          example:
          - cdrom: false
            image: Esse labore voluptas.
            image_size: 4373530742914524004
            volume: Rerum porro eius.
          - cdrom: false
            image: Esse labore voluptas.
            image_size: 4373530742914524004
            volume: Rerum porro eius.
          - cdrom: false
            image: Esse labore voluptas.
            image_size: 4373530742914524004
            volume: Rerum porro eius.
          - cdrom: false
            image: Esse labore voluptas.
            image_size: 4373530742914524004
            volume: Rerum porro eius.
      example:
        cpus: 14771951023174206041
        memory: 10890909484864851594
        name: Et enim doloremque.
        ports:
          4389508915153734996: Rerum alias quia earum saepe error.
          10490275064069672976: Dolor corrupti magnam animi pariatur.
          15927170269863465287: Maxime distinctio odit et.
        storage:
        - cdrom: false
          image: Esse labore voluptas.
          image_size: 4373530742914524004
          volume: Rerum porro eius.
        - cdrom: false
          image: Esse labore voluptas.
          image_size: 4373530742914524004
          volume: Rerum porro eius.
        - cdrom: false
          image: Esse labore voluptas.
          image_size: 4373530742914524004
          volume: Rerum porro eius.
        - cdrom: false
          image: Esse labore voluptas.
          image_size: 4373530742914524004
          volume: Rerum porro eius.
      required:
      - name
      - cpus
      - memory
      - storage
    VMUpdateRequestBody:
      type: object
      properties:
        vm:
          $ref: '#/components/schemas/UpdatedVM'
      example:
        vm:
          cpus: 1235757894805898603
          images:
          - cdrom: true
            path: Explicabo sit ab.
            volume: Quis quidem nulla.
          - cdrom: true
            path: Explicabo sit ab.
            volume: Quis quidem nulla.
          - cdrom: true
            path: Explicabo sit ab.
            volume: Quis quidem nulla.
          - cdrom: true
            path: Explicabo sit ab.
            volume: Quis quidem nulla.
          memory: 11516433357545643392
          name: Rerum asperiores corporis aut.
          ports:
            8213131886962674554: Maxime est voluptatem quia.
      required:
      - vm
