openapi: 3.0.3
info:
  title: Spin API service
  description: HTTP service for controlling the spin service
  version: "1.0"
servers:
- url: http://localhost:8080
paths:
  /add/{id}:
    post:
      tags:
      - spin-broker
      summary: add spin-broker
      description: Add a command to the package
      operationId: spin-broker#add
      parameters:
      - name: id
        in: path
        description: Package ID
        required: true
        schema:
          type: string
          description: Package ID
          example: Odit tenetur cupiditate amet fugiat.
        example: Sequi molestiae inventore aut consequatur officiis perspiciatis.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddRequestBody'
            example:
              action: Officiis porro fugiat.
              parameters:
              - Provident dignissimos eum possimus velit quod.
              - Aut mollitia natus temporibus fugit occaecati.
              - Qui dolorem non aut molestiae.
              - Ad dolorem eos rerum quam adipisci est.
              resource: Voluptatem quibusdam dolor.
      responses:
        "200":
          description: OK response.
          content:
            application/json:
              schema:
                type: string
                example: Qui sit nihil.
              example: Dolore voluptate voluptas veniam.
  /complete:
    post:
      tags:
      - spin-broker
      summary: complete spin-broker
      description: Mark a command as completed with a result status
      operationId: spin-broker#complete
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CompleteRequestBody'
            example:
              id: Quas tempora nisi aperiam occaecati deserunt qui.
              status: false
              status_reason: Esse reprehenderit qui molestias eum voluptatem.
      responses:
        "200":
          description: OK response.
  /enqueue/{id}:
    post:
      tags:
      - spin-broker
      summary: enqueue spin-broker
      description: Enqueue the package into the various resource queues
      operationId: spin-broker#enqueue
      parameters:
      - name: id
        in: path
        description: Package ID
        required: true
        schema:
          type: string
          description: Package ID
          example: Eum laudantium tempora pariatur possimus autem.
        example: Qui ad aut possimus quisquam harum.
      responses:
        "200":
          description: OK response.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
                  example: Libero commodi placeat.
                example:
                - Est totam quasi eligendi quod.
                - Sed cum.
                - Voluptatem culpa unde ut.
                - Aut ut illum.
              example:
              - Natus quasi quia vel ut.
              - Cupiditate cumque ratione occaecati quos vel in.
              - Rerum eos ut.
  /new:
    post:
      tags:
      - spin-broker
      summary: new spin-broker
      description: Create a new package; a collection of items to join into the queue
        simultaneously
      operationId: spin-broker#new
      responses:
        "200":
          description: OK response.
          content:
            application/json:
              schema:
                type: string
                example: Itaque omnis fuga.
              example: Minima voluptas dolorem et corporis quo dolores.
  /next/{resource}:
    get:
      tags:
      - spin-broker
      summary: next spin-broker
      description: Get the next command for a given resource
      operationId: spin-broker#next
      parameters:
      - name: resource
        in: path
        description: resource type
        required: true
        schema:
          type: string
          description: resource type
          example: Natus consectetur.
        example: Sint et nesciunt et molestiae soluta ut.
      responses:
        "200":
          description: OK response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NextResponseBody'
              example:
                action: Unde inventore cupiditate soluta.
                parameters:
                - Sit non sit recusandae eum.
                - Earum provident sint eveniet hic minus facere.
                resource: Iure aut voluptas qui.
                uuid: Consequatur quo exercitationem occaecati magnam molestiae qui.
  /status/{id}:
    get:
      tags:
      - spin-broker
      summary: status spin-broker
      description: Get the status for a package
      operationId: spin-broker#status
      parameters:
      - name: id
        in: path
        description: Package ID
        required: true
        schema:
          type: string
          description: Package ID
          example: Aut architecto deleniti incidunt alias.
        example: Tempora quisquam inventore inventore qui nihil.
      responses:
        "200":
          description: OK response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusResponseBody'
              example:
                reason: Illum omnis suscipit illum repellendus.
                status: false
  /storage/volume/add:
    post:
      tags:
      - spin-apiserver
      summary: add_volume spin-apiserver
      description: Add a volume for image allocation with backing storage, and name
        it
      operationId: spin-apiserver#add_volume
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddVolumeRequestBody'
            example:
              path: Eum officiis eligendi.
              volume: Non deleniti consequuntur qui doloremque.
      responses:
        "200":
          description: OK response.
  /storage/volume/image/create:
    post:
      tags:
      - spin-apiserver
      summary: create_image_on_volume spin-apiserver
      description: Create an image on a volume
      operationId: spin-apiserver#create_image_on_volume
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateImageOnVolumeRequestBody'
            example:
              image_name: Iusto minima et labore.
              image_size: 8231368540121560477
              volume: Consequatur omnis dolor assumenda.
      responses:
        "200":
          description: OK response.
  /storage/volume/image/delete:
    post:
      tags:
      - spin-apiserver
      summary: delete_image_on_volume spin-apiserver
      description: Delete an image on a volume
      operationId: spin-apiserver#delete_image_on_volume
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteImageOnVolumeRequestBody'
            example:
              image_name: Dignissimos ut doloremque.
              volume: Et tempora rem.
      responses:
        "200":
          description: OK response.
  /storage/volume/image/info/{volume}/{image_name}:
    get:
      tags:
      - spin-apiserver
      summary: info_image_on_volume spin-apiserver
      description: Obtain information on an image
      operationId: spin-apiserver#info_image_on_volume
      parameters:
      - name: volume
        in: path
        description: volume identifier
        required: true
        schema:
          type: string
          description: volume identifier
          example: Reprehenderit quo ab iure nihil.
        example: Non officiis molestiae nostrum quia quisquam.
      - name: image_name
        in: path
        description: image name
        required: true
        schema:
          type: string
          description: image name
          example: Est quisquam inventore quae.
        example: Nulla sit.
      responses:
        "200":
          description: OK response.
  /storage/volume/image/move:
    post:
      tags:
      - spin-apiserver
      summary: move_image spin-apiserver
      description: Move an image from one volume to another
      operationId: spin-apiserver#move_image
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MoveImageRequestBody'
            example:
              image_name: Illum sint.
              target_volume: Quam neque.
              volume: Ullam odio tenetur aliquid consequatur.
      responses:
        "200":
          description: OK response.
  /storage/volume/image/resize:
    post:
      tags:
      - spin-apiserver
      summary: resize_image_on_volume spin-apiserver
      description: Resize an image on a volume
      operationId: spin-apiserver#resize_image_on_volume
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateImageOnVolumeRequestBody'
            example:
              image_name: Quia voluptas aut.
              image_size: 4442355973768769894
              volume: Quisquam rem.
      responses:
        "200":
          description: OK response.
  /storage/volume/info/{volume}:
    get:
      tags:
      - spin-apiserver
      summary: info_volume spin-apiserver
      description: Get information on a volume
      operationId: spin-apiserver#info_volume
      parameters:
      - name: volume
        in: path
        description: volume identifier
        required: true
        schema:
          type: string
          description: volume identifier
          example: Doloremque saepe in.
        example: Reiciendis eveniet repudiandae reiciendis perferendis impedit reiciendis.
      responses:
        "200":
          description: OK response.
  /storage/volume/label/{volume}/{label}:
    post:
      tags:
      - spin-apiserver
      summary: label_volume spin-apiserver
      description: Apply a label to a volume.
      operationId: spin-apiserver#label_volume
      parameters:
      - name: volume
        in: path
        description: volume identifier
        required: true
        schema:
          type: string
          description: volume identifier
          example: Animi fugiat excepturi sed.
        example: Aut tempore aliquam.
      - name: label
        in: path
        description: label identifier to apply to volume
        required: true
        schema:
          type: string
          description: label identifier to apply to volume
          example: Illum molestiae voluptates natus.
        example: Qui iusto ex.
      responses:
        "200":
          description: OK response.
  /storage/volume/remove/{volume}:
    post:
      tags:
      - spin-apiserver
      summary: remove_volume spin-apiserver
      description: Remove a volume. Requires all images to be removed.
      operationId: spin-apiserver#remove_volume
      parameters:
      - name: volume
        in: path
        description: volume identifier
        required: true
        schema:
          type: string
          description: volume identifier
          example: Quae at sed necessitatibus et.
        example: Earum hic sequi.
      responses:
        "200":
          description: OK response.
components:
  schemas:
    AddRequestBody:
      type: object
      properties:
        action:
          type: string
          description: Action name
          example: Odio similique qui qui architecto.
        parameters:
          type: array
          items:
            type: string
            example: Nemo omnis quia deleniti voluptate.
          description: Action parameters
          example:
          - Qui omnis qui sit et vel.
          - Enim ut voluptas ullam quas aliquam.
        resource:
          type: string
          description: Resource name
          example: Incidunt quae est velit eaque mollitia.
      example:
        action: Cupiditate perspiciatis voluptas quia.
        parameters:
        - Et provident.
        - Ea iusto modi aspernatur.
        resource: Quaerat illo molestiae.
      required:
      - resource
      - action
    AddVolumeRequestBody:
      type: object
      properties:
        path:
          type: string
          description: path to backing storage
          example: Natus dicta aliquid.
        volume:
          type: string
          description: volume identifier
          example: Ab delectus amet magnam.
      example:
        path: Quo quaerat iusto non.
        volume: Provident sint ut facilis.
      required:
      - volume
      - path
    CompleteRequestBody:
      type: object
      properties:
        id:
          type: string
          description: Command ID
          example: Perspiciatis in.
        status:
          type: boolean
          description: status of work
          example: false
        status_reason:
          type: string
          description: reason of success/failure
          example: Sequi temporibus.
      example:
        id: Inventore cupiditate commodi aut asperiores quidem sit.
        status: true
        status_reason: Cum repudiandae veniam vel.
      required:
      - id
      - status
    CreateImageOnVolumeRequestBody:
      type: object
      properties:
        image_name:
          type: string
          description: image name
          example: Et aut sit a quas velit adipisci.
        image_size:
          type: integer
          description: image size in GB
          example: 6027849388767421274
        volume:
          type: string
          description: volume identifier
          example: Ratione totam quia.
      example:
        image_name: Deleniti illum quod est enim aperiam laborum.
        image_size: 18427148167345111597
        volume: Dolores atque excepturi ut.
      required:
      - image_name
      - image_size
      - volume
    DeleteImageOnVolumeRequestBody:
      type: object
      properties:
        image_name:
          type: string
          description: image name
          example: Ipsum ea deleniti.
        volume:
          type: string
          description: volume identifier
          example: Enim autem doloribus sunt ut quos.
      example:
        image_name: Ut ex molestiae quod distinctio voluptatibus.
        volume: Itaque non quis quae.
      required:
      - image_name
      - volume
    MoveImageRequestBody:
      type: object
      properties:
        image_name:
          type: string
          description: image name
          example: Accusantium laboriosam sunt minima saepe architecto.
        target_volume:
          type: string
          description: volume identifier to move to
          example: Laboriosam fugit.
        volume:
          type: string
          description: volume identifier
          example: Enim quos numquam recusandae ut.
      example:
        image_name: Excepturi non voluptate.
        target_volume: Ut laboriosam.
        volume: Qui consectetur nihil omnis voluptas.
      required:
      - image_name
      - volume
      - target_volume
    NextResponseBody:
      type: object
      properties:
        action:
          type: string
          description: action name
          example: Et quisquam.
        parameters:
          type: array
          items:
            type: string
            example: Officia voluptas voluptate.
          description: parameters for action
          example:
          - Animi quos.
          - Qui explicabo quaerat officiis.
          - Deleniti maxime possimus vero omnis sed.
          - Sint delectus quis et recusandae nobis.
        resource:
          type: string
          description: resource type
          example: Commodi accusamus veritatis quos.
        uuid:
          type: string
          description: Command ID
          example: Provident occaecati animi saepe.
      example:
        action: Qui recusandae.
        parameters:
        - Repudiandae adipisci accusantium consequuntur.
        - Et inventore.
        - Molestias deserunt dicta eaque reiciendis autem exercitationem.
        - Esse blanditiis qui repellendus voluptate.
        resource: Officiis sit quis itaque.
        uuid: Molestiae nihil tempora.
      required:
      - uuid
      - resource
      - action
    StatusResponseBody:
      type: object
      properties:
        reason:
          type: string
          description: Failure reason (if any)
          example: Eos eos quibusdam error dolorem ut et.
        status:
          type: boolean
          description: Pass/Fail status
          example: true
      example:
        reason: Autem optio ut quidem.
        status: false
      required:
      - status
