openapi: 3.0.3
info:
  title: Spin API service
  description: HTTP service for controlling the spin service
  version: "1.0"
servers:
- url: http://localhost:8080
paths:
  /add/{id}:
    post:
      tags:
      - spin-broker
      summary: add spin-broker
      description: Add a command to the package
      operationId: spin-broker#add
      parameters:
      - name: id
        in: path
        description: Package ID
        required: true
        schema:
          type: string
          description: Package ID
          example: Ullam dolore ea at ut.
        example: Expedita voluptatem reiciendis voluptatem dicta.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddRequestBody'
            example:
              action: Iusto minima et labore.
              parameters:
                Consequatur omnis dolor assumenda.: Dignissimos ut doloremque.
                Et tempora rem.: Quia voluptas aut.
              resource: Impedit dolor veritatis quo non quae rerum.
      responses:
        "200":
          description: OK response.
          content:
            application/json:
              schema:
                type: string
                example: Sapiente sequi molestiae inventore aut.
              example: Tenetur qui.
  /complete:
    post:
      tags:
      - spin-broker
      summary: complete spin-broker
      description: Mark a command as completed with a result status
      operationId: spin-broker#complete
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CompleteRequestBody'
            example:
              id: Vero alias doloribus impedit impedit qui dolor.
              status: false
              status_reason: Non ut hic.
      responses:
        "200":
          description: OK response.
  /enqueue/{id}:
    post:
      tags:
      - spin-broker
      summary: enqueue spin-broker
      description: Enqueue the package into the various resource queues
      operationId: spin-broker#enqueue
      parameters:
      - name: id
        in: path
        description: Package ID
        required: true
        schema:
          type: string
          description: Package ID
          example: Et magnam sed iusto quam non.
        example: Fugiat distinctio eveniet assumenda temporibus.
      responses:
        "200":
          description: OK response.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
                  example: Officiis perspiciatis.
                example:
                - Voluptate voluptas veniam.
                - Eum laudantium tempora pariatur possimus autem.
                - Qui ad aut possimus quisquam harum.
              example:
              - Illo eos repudiandae et vel corporis.
              - Molestias officiis accusamus rerum facilis.
              - In temporibus.
  /new:
    post:
      tags:
      - spin-broker
      summary: new spin-broker
      description: Create a new package; a collection of items to join into the queue simultaneously
      operationId: spin-broker#new
      responses:
        "200":
          description: OK response.
          content:
            application/json:
              schema:
                type: string
                example: At sed necessitatibus et asperiores earum hic.
              example: Deserunt modi qui voluptatem placeat.
  /next/{resource}:
    get:
      tags:
      - spin-broker
      summary: next spin-broker
      description: Get the next command for a given resource
      operationId: spin-broker#next
      parameters:
      - name: resource
        in: path
        description: resource type
        required: true
        schema:
          type: string
          description: resource type
          example: Enim et aut.
        example: Reprehenderit dolorum non qui.
      responses:
        "200":
          description: OK response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NextResponseBody'
              example:
                action: Maxime aut non.
                parameters:
                  Et maiores ut voluptatem sed.: Consectetur et.
                  Nostrum commodi error omnis quis quia.: Ratione et ex tempore ipsum in.
                resource: Quam adipisci est incidunt sequi.
                uuid: Non aut molestiae deleniti ad dolorem eos.
        "400":
          description: No records were found
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                id: 3F1FKVRR
                message: Value of ID must be an integer
                name: bad_request
  /status/{id}:
    get:
      tags:
      - spin-broker
      summary: status spin-broker
      description: Get the status for a package
      operationId: spin-broker#status
      parameters:
      - name: id
        in: path
        description: Package ID
        required: true
        schema:
          type: string
          description: Package ID
          example: Odio ea.
        example: Minima cum quae voluptas et.
      responses:
        "200":
          description: OK response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusResponseBody'
              example:
                causer: Dignissimos eum.
                reason: Fugiat ex consequatur.
                status: true
        "400":
          description: No records were found
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                id: 3F1FKVRR
                message: Value of ID must be an integer
                name: bad_request
  /storage/images/create:
    post:
      tags:
      - spin-registry
      summary: storage/images/create spin-registry
      description: add an image definition to the registry
      operationId: spin-registry#storage/images/create
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Storage'
            example:
              cdrom: true
              image: Assumenda pariatur.
              image_size: 9112671615115988735
              volume: Quia non nihil vitae nesciunt.
      responses:
        "200":
          description: OK response.
  /storage/images/delete:
    post:
      tags:
      - spin-registry
      summary: storage/images/delete spin-registry
      description: remove an image definition from the registry
      operationId: spin-registry#storage/images/delete
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StorageImagesDeleteRequestBody'
            example:
              image_name: Corrupti ab.
              volume_name: Quia neque excepturi iste expedita a aut.
      responses:
        "200":
          description: OK response.
  /storage/images/get:
    get:
      tags:
      - spin-registry
      summary: storage/images/get spin-registry
      description: retrieves an image definition from the registry
      operationId: spin-registry#storage/images/get
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StorageImagesDeleteRequestBody'
            example:
              image_name: Dolorem soluta quisquam vero sit.
              volume_name: Vel qui vel qui dolores nihil.
      responses:
        "200":
          description: OK response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Storage'
              example:
                cdrom: false
                image: Temporibus explicabo sit ab quo et quis.
                image_size: 89266342018300151
                volume: Molestiae asperiores.
  /storage/images/list:
    get:
      tags:
      - spin-registry
      summary: storage/images/list spin-registry
      description: list all images by volume
      operationId: spin-registry#storage/images/list
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StorageImagesListRequestBody'
            example:
              volume_name: Esse labore voluptas.
      responses:
        "200":
          description: OK response.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
                  example: Commodi nihil error ipsum minima fugit vero.
                example:
                - Voluptas laborum.
                - Magnam quis sed voluptas omnis asperiores.
                - Quibusdam odio est nulla.
              example:
              - Vel ipsum autem et et placeat.
              - Officiis velit hic unde assumenda praesentium.
              - Blanditiis eum.
  /storage/volumes/create:
    post:
      tags:
      - spin-registry
      summary: storage/volumes/create spin-registry
      description: create a new volume
      operationId: spin-registry#storage/volumes/create
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StorageVolumesCreateRequestBody'
            example:
              name: Quis omnis suscipit est et dicta id.
      responses:
        "200":
          description: OK response.
  /storage/volumes/delete:
    post:
      tags:
      - spin-registry
      summary: storage/volumes/delete spin-registry
      description: delete an existing volume
      operationId: spin-registry#storage/volumes/delete
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StorageVolumesCreateRequestBody'
            example:
              name: Rerum rerum porro eius.
      responses:
        "200":
          description: OK response.
  /storage/volumes/list:
    get:
      tags:
      - spin-registry
      summary: storage/volumes/list spin-registry
      description: list all volumes
      operationId: spin-registry#storage/volumes/list
      responses:
        "200":
          description: OK response.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
                  example: Ut id aut dolores.
                example:
                - Est aliquam libero nisi placeat quasi.
                - Ut sed fugiat.
                - Ut modi sint quo.
                - Fugit facere.
              example:
              - Facere reprehenderit consequuntur inventore reiciendis tempora est.
              - Et quia consequatur magnam officia.
  /vm/create:
    post:
      tags:
      - spin-registry
      summary: vm/create spin-registry
      description: Create a VM
      operationId: spin-registry#vm/create
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VMCreateRequestBody'
            example:
              cpus: 18313246431292266891
              memory: 2325691666866593353
              name: Assumenda ullam qui et.
              storage:
              - cdrom: false
                image: Soluta voluptatem minima natus.
                image_size: 8595411673148470411
                volume: Itaque tenetur labore quia distinctio aperiam.
              - cdrom: false
                image: Soluta voluptatem minima natus.
                image_size: 8595411673148470411
                volume: Itaque tenetur labore quia distinctio aperiam.
              - cdrom: false
                image: Soluta voluptatem minima natus.
                image_size: 8595411673148470411
                volume: Itaque tenetur labore quia distinctio aperiam.
              - cdrom: false
                image: Soluta voluptatem minima natus.
                image_size: 8595411673148470411
                volume: Itaque tenetur labore quia distinctio aperiam.
      responses:
        "200":
          description: OK response.
          content:
            application/json:
              schema:
                type: integer
                example: 12809506230020816033
              example: 2101778994805017979
  /vm/delete/{id}:
    post:
      tags:
      - spin-registry
      summary: vm/delete spin-registry
      description: Delete a VM by ID
      operationId: spin-registry#vm/delete
      parameters:
      - name: id
        in: path
        description: ID of VM to remove
        required: true
        schema:
          type: integer
          description: ID of VM to remove
          example: 16304984053560359411
        example: 13261664358729853505
      responses:
        "200":
          description: OK response.
  /vm/get/{id}:
    get:
      tags:
      - spin-registry
      summary: vm/get spin-registry
      description: Retrieve a VM by ID
      operationId: spin-registry#vm/get
      parameters:
      - name: id
        in: path
        description: ID of VM to remove
        required: true
        schema:
          type: integer
          description: ID of VM to remove
          example: 14472560530926823574
        example: 9331932892395071606
      responses:
        "200":
          description: OK response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VMCreateRequestBody'
              example:
                cpus: 10674876707307386477
                memory: 5324573265082932992
                name: Aut voluptas qui fuga unde.
                storage:
                - cdrom: true
                  image: Magnam molestiae.
                  image_size: 14995889596905782688
                  volume: Quo exercitationem.
                - cdrom: true
                  image: Magnam molestiae.
                  image_size: 14995889596905782688
                  volume: Quo exercitationem.
  /vm/list:
    get:
      tags:
      - spin-registry
      summary: vm/list spin-registry
      description: Retrieve all VM IDs
      operationId: spin-registry#vm/list
      responses:
        "200":
          description: OK response.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: integer
                  example: 6537776878665164718
                example:
                - 9537992964910883971
                - 8701067751308364928
                - 798591105205778312
              example:
              - 12897251935180287128
              - 1720248166474077285
  /vm/update/{id}:
    post:
      tags:
      - spin-registry
      summary: vm/update spin-registry
      description: Update a VM
      operationId: spin-registry#vm/update
      parameters:
      - name: id
        in: path
        description: ID of VM to update
        required: true
        schema:
          type: integer
          description: ID of VM to update
          example: 3780779355340207942
        example: 6057636939285055639
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VMUpdateRequestBody'
            example:
              vm:
                cpus: 4401059399380998654
                memory: 17258654746333052904
                name: Illum omnis suscipit illum repellendus.
                storage:
                - cdrom: false
                  image: Soluta voluptatem minima natus.
                  image_size: 8595411673148470411
                  volume: Itaque tenetur labore quia distinctio aperiam.
                - cdrom: false
                  image: Soluta voluptatem minima natus.
                  image_size: 8595411673148470411
                  volume: Itaque tenetur labore quia distinctio aperiam.
      responses:
        "200":
          description: OK response.
components:
  schemas:
    AddRequestBody:
      type: object
      properties:
        action:
          type: string
          description: Action name
          example: Aliquam quae illum molestiae.
        parameters:
          type: object
          description: Action parameters
          example:
            Dolores reprehenderit quo ab iure.: Voluptas non officiis.
            Eveniet repudiandae.: Perferendis impedit.
            Neque qui iusto ex et doloremque.: In repudiandae.
          additionalProperties: true
        resource:
          type: string
          description: Resource name
          example: Officia animi fugiat excepturi sed nisi aut.
      example:
        action: Quae incidunt nulla sit.
        parameters:
          Rerum odit.: Cupiditate amet.
          Voluptas dolorem.: Corporis quo.
        resource: Nostrum quia quisquam hic est quisquam.
      required:
      - resource
      - action
    CompleteRequestBody:
      type: object
      properties:
        id:
          type: string
          description: Command ID
          example: Labore accusantium ut itaque odio explicabo perferendis.
        status:
          type: boolean
          description: status of work
          example: false
        status_reason:
          type: string
          description: reason of success/failure
          example: Quia sit cum adipisci tempora qui eligendi.
      example:
        id: Rerum hic.
        status: false
        status_reason: Qui eaque omnis odio.
      required:
      - id
      - status
    Error:
      type: object
      properties:
        fault:
          type: boolean
          description: Is the error a server-side fault?
          example: true
        id:
          type: string
          description: ID is a unique identifier for this particular occurrence of the problem.
          example: 123abc
        message:
          type: string
          description: Message is a human-readable explanation specific to this occurrence of the problem.
          example: parameter 'p' must be an integer
        name:
          type: string
          description: Name is the name of this class of errors.
          example: bad_request
        temporary:
          type: boolean
          description: Is the error temporary?
          example: true
        timeout:
          type: boolean
          description: Is the error a timeout?
          example: false
      example:
        id: 3F1FKVRR
        message: Value of ID must be an integer
        name: bad_request
      required:
      - name
      - id
      - message
      - temporary
      - timeout
      - fault
    NextResponseBody:
      type: object
      properties:
        action:
          type: string
          description: action name
          example: Nesciunt et molestiae soluta ut animi.
        parameters:
          type: object
          description: Action parameters
          example:
            Omnis molestiae voluptatum rerum libero quas itaque.: Iste voluptatem est est.
          additionalProperties: true
        resource:
          type: string
          description: resource type
          example: Consectetur optio sint.
        uuid:
          type: string
          description: Command ID
          example: Inventore qui nihil nam.
      example:
        action: Accusantium labore.
        parameters:
          Ab nulla quis exercitationem voluptatem.: Dicta consequuntur tempora.
          Minima omnis.: Culpa ut quidem aut et qui porro.
          Quibusdam minus expedita doloremque et iusto fugit.: Similique aliquid corrupti amet numquam sed totam.
        resource: Sunt iusto harum.
        uuid: Blanditiis consequatur consequuntur praesentium consequatur.
      required:
      - uuid
      - resource
      - action
    StatusResponseBody:
      type: object
      properties:
        causer:
          type: string
          description: Failure causer as UUID (if any)
          example: Cupiditate cumque ratione occaecati quos vel in.
        reason:
          type: string
          description: Failure reason (if any)
          example: Natus quasi quia vel ut.
        status:
          type: boolean
          description: Pass/Fail status
          example: true
      example:
        causer: Aut architecto deleniti incidunt alias.
        reason: Eos ut.
        status: false
      required:
      - status
    Storage:
      type: object
      properties:
        cdrom:
          type: boolean
          description: Is this image a cdrom?
          example: false
        image:
          type: string
          description: Image filename, must not include `/`
          example: Sequi soluta omnis deleniti.
        image_size:
          type: integer
          description: Image size (in gigabytes)
          example: 9743017112137403537
        volume:
          type: string
          description: Volume name, must not include `/`
          example: Quae autem illum.
      example:
        cdrom: true
        image: Sit sit earum.
        image_size: 5204886235093605221
        volume: Fugit adipisci aliquid aliquam.
      required:
      - volume
      - image
    StorageImagesDeleteRequestBody:
      type: object
      properties:
        image_name:
          type: string
          description: name of image
          example: Nihil sunt doloremque amet sint ut perspiciatis.
        volume_name:
          type: string
          description: name of volume
          example: Molestiae cupiditate neque eos.
      example:
        image_name: Corporis nam.
        volume_name: Quos maxime ut error facilis modi autem.
      required:
      - volume_name
      - image_name
    StorageImagesListRequestBody:
      type: object
      properties:
        volume_name:
          type: string
          description: name of volume to list images for
          example: Veniam iusto sint.
      example:
        volume_name: Voluptatem recusandae unde.
      required:
      - volume_name
    StorageVolumesCreateRequestBody:
      type: object
      properties:
        name:
          type: string
          description: name of volume
          example: Voluptas libero ea repudiandae.
      example:
        name: Ut ut optio nemo dolor doloremque similique.
      required:
      - name
    VMCreateRequestBody:
      type: object
      properties:
        cpus:
          type: integer
          description: CPU count
          example: 16478362280593841561
        memory:
          type: integer
          description: Memory (in megabytes)
          example: 7343571683787719420
        name:
          type: string
          description: Name of VM; does not need to be unique
          example: Voluptas deserunt fuga omnis dignissimos nihil.
        storage:
          type: array
          items:
            $ref: '#/components/schemas/Storage'
          description: Storage references
          example:
          - cdrom: false
            image: Soluta voluptatem minima natus.
            image_size: 8595411673148470411
            volume: Itaque tenetur labore quia distinctio aperiam.
          - cdrom: false
            image: Soluta voluptatem minima natus.
            image_size: 8595411673148470411
            volume: Itaque tenetur labore quia distinctio aperiam.
          - cdrom: false
            image: Soluta voluptatem minima natus.
            image_size: 8595411673148470411
            volume: Itaque tenetur labore quia distinctio aperiam.
      example:
        cpus: 14727820056378920960
        memory: 4047906078158329845
        name: Dignissimos optio.
        storage:
        - cdrom: false
          image: Soluta voluptatem minima natus.
          image_size: 8595411673148470411
          volume: Itaque tenetur labore quia distinctio aperiam.
        - cdrom: false
          image: Soluta voluptatem minima natus.
          image_size: 8595411673148470411
          volume: Itaque tenetur labore quia distinctio aperiam.
      required:
      - name
      - cpus
      - memory
      - storage
    VMUpdateRequestBody:
      type: object
      properties:
        vm:
          $ref: '#/components/schemas/VMCreateRequestBody'
      example:
        vm:
          cpus: 4401059399380998654
          memory: 17258654746333052904
          name: Illum omnis suscipit illum repellendus.
          storage:
          - cdrom: false
            image: Soluta voluptatem minima natus.
            image_size: 8595411673148470411
            volume: Itaque tenetur labore quia distinctio aperiam.
          - cdrom: false
            image: Soluta voluptatem minima natus.
            image_size: 8595411673148470411
            volume: Itaque tenetur labore quia distinctio aperiam.
      required:
      - vm
