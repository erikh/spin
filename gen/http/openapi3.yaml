openapi: 3.0.3
info:
  title: Spin API service
  description: HTTP service for controlling the spin service
  version: "1.0"
servers:
- url: http://localhost:8080
paths:
  /add/{id}:
    post:
      tags:
      - spin-broker
      summary: add spin-broker
      description: Add a command to the package
      operationId: spin-broker#add
      parameters:
      - name: id
        in: path
        description: Package ID
        required: true
        schema:
          type: string
          description: Package ID
          example: Error molestiae accusantium dolor corrupti.
        example: Animi pariatur soluta numquam ut quis porro.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddRequestBody'
            example:
              action: Consequatur non ut hic assumenda assumenda.
              parameters:
                Et quidem qui voluptate sunt itaque tenetur.: Quia distinctio aperiam nobis.
                Repellendus eaque nesciunt quia.: Neque reiciendis ipsum.
                Voluptatem minima natus non consequatur voluptatem.: Eos iste illum omnis suscipit.
              resource: Vero alias doloribus impedit impedit qui dolor.
      responses:
        "200":
          description: OK response.
          content:
            application/json:
              schema:
                type: string
                example: Consequatur eos aut laborum at.
              example: Recusandae ad.
  /complete:
    post:
      tags:
      - spin-broker
      summary: complete spin-broker
      description: Mark a command as completed with a result status
      operationId: spin-broker#complete
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CompleteRequestBody'
            example:
              id: Expedita a.
              status: true
              status_reason: Corrupti ab.
      responses:
        "200":
          description: OK response.
  /enqueue/{id}:
    post:
      tags:
      - spin-broker
      summary: enqueue spin-broker
      description: Enqueue the package into the various resource queues
      operationId: spin-broker#enqueue
      parameters:
      - name: id
        in: path
        description: Package ID
        required: true
        schema:
          type: string
          description: Package ID
          example: Voluptate sed.
        example: Qui placeat necessitatibus.
      responses:
        "200":
          description: OK response.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
                  example: Molestiae voluptatem quos inventore aut.
                example:
                - Perferendis et.
                - Odio eum sed ducimus.
                - Doloremque molestias enim architecto error.
                - Et dolorem quis dolores laborum.
              example:
              - Harum aut omnis.
              - Veniam tenetur.
  /new:
    post:
      tags:
      - spin-broker
      summary: new spin-broker
      description: Create a new package; a collection of items to join into the queue simultaneously
      operationId: spin-broker#new
      responses:
        "200":
          description: OK response.
          content:
            application/json:
              schema:
                type: string
                example: Odio ea.
              example: Et laborum rerum rerum alias quia earum.
  /next/{resource}:
    get:
      tags:
      - spin-broker
      summary: next spin-broker
      description: Get the next command for a given resource
      operationId: spin-broker#next
      parameters:
      - name: resource
        in: path
        description: resource type
        required: true
        schema:
          type: string
          description: resource type
          example: Consectetur vel est quod minus dolorem.
        example: Necessitatibus soluta.
      responses:
        "200":
          description: OK response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NextResponseBody'
              example:
                action: Corrupti et voluptatibus et et occaecati.
                parameters:
                  Assumenda pariatur.: Et nobis quia neque excepturi.
                  Dolore soluta consectetur adipisci quia.: Nihil vitae nesciunt.
                resource: Qui error modi magni.
                uuid: Fugit quis.
        "400":
          description: No records were found
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                id: 3F1FKVRR
                message: Value of ID must be an integer
                name: bad_request
  /status/{id}:
    get:
      tags:
      - spin-broker
      summary: status spin-broker
      description: Get the status for a package
      operationId: spin-broker#status
      parameters:
      - name: id
        in: path
        description: Package ID
        required: true
        schema:
          type: string
          description: Package ID
          example: Dicta animi et.
        example: Id voluptatibus.
      responses:
        "200":
          description: OK response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusResponseBody'
              example:
                causer: Esse labore voluptas.
                reason: Rerum rerum porro eius.
                status: true
        "400":
          description: No records were found
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                id: 3F1FKVRR
                message: Value of ID must be an integer
                name: bad_request
  /storage/images/create:
    post:
      tags:
      - spin-registry
      summary: storage/images/create spin-registry
      description: add an image definition to the registry
      operationId: spin-registry#storage/images/create
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Storage'
            example:
              cdrom: true
              image: Laudantium consectetur assumenda soluta.
              image_size: 5516136073613301354
              volume: In ea natus tempore.
      responses:
        "200":
          description: OK response.
  /storage/images/delete:
    post:
      tags:
      - spin-registry
      summary: storage/images/delete spin-registry
      description: remove an image definition from the registry
      operationId: spin-registry#storage/images/delete
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StorageImagesDeleteRequestBody'
            example:
              image_name: Consequatur nemo autem ab delectus amet.
              volume_name: Vel accusamus beatae nihil eius molestiae.
      responses:
        "200":
          description: OK response.
  /storage/images/get:
    get:
      tags:
      - spin-registry
      summary: storage/images/get spin-registry
      description: retrieves an image definition from the registry
      operationId: spin-registry#storage/images/get
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StorageImagesDeleteRequestBody'
            example:
              image_name: Facilis nobis quo quaerat iusto non quae.
              volume_name: Ex natus dicta aliquid sint provident sint.
      responses:
        "200":
          description: OK response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Storage'
              example:
                cdrom: true
                image: Rerum illo ratione totam quia.
                image_size: 17994047180681893093
                volume: Aut sit a quas velit.
  /storage/images/list:
    get:
      tags:
      - spin-registry
      summary: storage/images/list spin-registry
      description: list all images by volume
      operationId: spin-registry#storage/images/list
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StorageImagesListRequestBody'
            example:
              volume_name: Ut nulla et cum consequatur in.
      responses:
        "200":
          description: OK response.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
                  example: Et dolores.
                example:
                - Assumenda quisquam incidunt placeat perferendis.
                - Aspernatur voluptate aspernatur dolor.
                - Hic veniam fuga enim.
                - Dolor in fuga veritatis debitis dolores rerum.
              example:
              - Consequatur itaque dolores.
              - Explicabo libero esse vero.
              - Nihil autem voluptas autem culpa.
  /storage/volume/add:
    post:
      tags:
      - spin-apiserver
      summary: add_volume spin-apiserver
      description: Add a volume for image allocation with backing storage, and name it
      operationId: spin-apiserver#add_volume
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddVolumeRequestBody'
            example:
              path: Est reprehenderit.
              volume: Aut non dicta quisquam rem qui ut.
      responses:
        "200":
          description: OK response.
  /storage/volume/image/create:
    post:
      tags:
      - spin-apiserver
      summary: create_image_on_volume spin-apiserver
      description: Create an image on a volume
      operationId: spin-apiserver#create_image_on_volume
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateImageOnVolumeRequestBody'
            example:
              image_name: Quam neque.
              image_size: 930220378755301578
              volume: Et autem ut debitis dolores.
      responses:
        "200":
          description: OK response.
  /storage/volume/image/delete:
    post:
      tags:
      - spin-apiserver
      summary: delete_image_on_volume spin-apiserver
      description: Delete an image on a volume
      operationId: spin-apiserver#delete_image_on_volume
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteImageOnVolumeRequestBody'
            example:
              image_name: Occaecati impedit quas laborum consequatur.
              volume: Itaque aut dolorem.
      responses:
        "200":
          description: OK response.
  /storage/volume/image/info/{volume}/{image_name}:
    get:
      tags:
      - spin-apiserver
      summary: info_image_on_volume spin-apiserver
      description: Obtain information on an image
      operationId: spin-apiserver#info_image_on_volume
      parameters:
      - name: volume
        in: path
        description: volume identifier
        required: true
        schema:
          type: string
          description: volume identifier
          example: Consequatur velit labore quo adipisci et modi.
        example: Magni voluptas asperiores mollitia autem tempora.
      - name: image_name
        in: path
        description: image name
        required: true
        schema:
          type: string
          description: image name
          example: Et enim doloremque.
        example: Minima placeat occaecati aut maxime distinctio.
      responses:
        "200":
          description: OK response.
  /storage/volume/image/move:
    post:
      tags:
      - spin-apiserver
      summary: move_image spin-apiserver
      description: Move an image from one volume to another
      operationId: spin-apiserver#move_image
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MoveImageRequestBody'
            example:
              image_name: Quam adipisci est incidunt sequi.
              target_volume: Voluptatibus nostrum commodi error omnis quis quia.
              volume: Maxime aut non.
      responses:
        "200":
          description: OK response.
  /storage/volume/image/resize:
    post:
      tags:
      - spin-apiserver
      summary: resize_image_on_volume spin-apiserver
      description: Resize an image on a volume
      operationId: spin-apiserver#resize_image_on_volume
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateImageOnVolumeRequestBody'
            example:
              image_name: Quibusdam dolor sit.
              image_size: 14867559492333049524
              volume: Fugiat ex consequatur.
      responses:
        "200":
          description: OK response.
  /storage/volume/info/{volume}:
    get:
      tags:
      - spin-apiserver
      summary: info_volume spin-apiserver
      description: Get information on a volume
      operationId: spin-apiserver#info_volume
      parameters:
      - name: volume
        in: path
        description: volume identifier
        required: true
        schema:
          type: string
          description: volume identifier
          example: Laboriosam odit voluptas.
        example: Pariatur fugit ex id eum.
      responses:
        "200":
          description: OK response.
  /storage/volume/remove/{volume}:
    post:
      tags:
      - spin-apiserver
      summary: remove_volume spin-apiserver
      description: Remove a volume. Requires all images to be removed.
      operationId: spin-apiserver#remove_volume
      parameters:
      - name: volume
        in: path
        description: volume identifier
        required: true
        schema:
          type: string
          description: volume identifier
          example: Dolorum numquam.
        example: Consequatur distinctio rerum aut culpa accusamus impedit.
      responses:
        "200":
          description: OK response.
  /storage/volumes/create:
    post:
      tags:
      - spin-registry
      summary: storage/volumes/create spin-registry
      description: create a new volume
      operationId: spin-registry#storage/volumes/create
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StorageVolumesCreateRequestBody'
            example:
              name: Tempore voluptate voluptas.
      responses:
        "200":
          description: OK response.
  /storage/volumes/delete:
    post:
      tags:
      - spin-registry
      summary: storage/volumes/delete spin-registry
      description: delete an existing volume
      operationId: spin-registry#storage/volumes/delete
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StorageVolumesCreateRequestBody'
            example:
              name: Mollitia eius hic.
      responses:
        "200":
          description: OK response.
  /storage/volumes/list:
    get:
      tags:
      - spin-registry
      summary: storage/volumes/list spin-registry
      description: list all volumes
      operationId: spin-registry#storage/volumes/list
      responses:
        "200":
          description: OK response.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
                  example: Praesentium est ea laudantium veniam ut voluptatibus.
                example:
                - Est ex ut.
                - A non illum modi amet est quia.
                - Nam ex incidunt eius est omnis.
              example:
              - Itaque deleniti ad inventore et amet voluptatum.
              - Dolores quasi sunt doloremque aspernatur.
  /vm/create:
    post:
      tags:
      - spin-registry
      summary: vm/create spin-registry
      description: Create a VM
      operationId: spin-registry#vm/create
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VMCreateRequestBody'
            example:
              cpus: 13225308882234053238
              memory: 13801504870798650692
              name: Vel qui vel qui dolores nihil.
              storage:
              - cdrom: false
                image: Sit ab quo et quis quidem nulla.
                image_size: 213869279976950464
                volume: Vero sit ratione molestiae asperiores ut temporibus.
              - cdrom: false
                image: Sit ab quo et quis quidem nulla.
                image_size: 213869279976950464
                volume: Vero sit ratione molestiae asperiores ut temporibus.
              - cdrom: false
                image: Sit ab quo et quis quidem nulla.
                image_size: 213869279976950464
                volume: Vero sit ratione molestiae asperiores ut temporibus.
      responses:
        "200":
          description: OK response.
          content:
            application/json:
              schema:
                type: integer
                example: 3351388927233998815
              example: 12749912923910592026
  /vm/delete/{id}:
    post:
      tags:
      - spin-registry
      summary: vm/delete spin-registry
      description: Delete a VM by ID
      operationId: spin-registry#vm/delete
      parameters:
      - name: id
        in: path
        description: ID of VM to remove
        required: true
        schema:
          type: integer
          description: ID of VM to remove
          example: 17180114370647222068
        example: 9304267000713113542
      responses:
        "200":
          description: OK response.
  /vm/get/{id}:
    get:
      tags:
      - spin-registry
      summary: vm/get spin-registry
      description: Retrieve a VM by ID
      operationId: spin-registry#vm/get
      parameters:
      - name: id
        in: path
        description: ID of VM to remove
        required: true
        schema:
          type: integer
          description: ID of VM to remove
          example: 14134751368123328684
        example: 13594912764782808897
      responses:
        "200":
          description: OK response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VMCreateRequestBody'
              example:
                cpus: 1249890367225207032
                memory: 3184934537399891355
                name: At quia aliquam.
                storage:
                - cdrom: true
                  image: Cupiditate veniam atque accusamus.
                  image_size: 6462753351380853695
                  volume: Et id et alias vel ratione.
                - cdrom: true
                  image: Cupiditate veniam atque accusamus.
                  image_size: 6462753351380853695
                  volume: Et id et alias vel ratione.
                - cdrom: true
                  image: Cupiditate veniam atque accusamus.
                  image_size: 6462753351380853695
                  volume: Et id et alias vel ratione.
                - cdrom: true
                  image: Cupiditate veniam atque accusamus.
                  image_size: 6462753351380853695
                  volume: Et id et alias vel ratione.
  /vm/list:
    get:
      tags:
      - spin-registry
      summary: vm/list spin-registry
      description: Retrieve all VM IDs
      operationId: spin-registry#vm/list
      responses:
        "200":
          description: OK response.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: integer
                  example: 5647895798487521717
                example:
                - 6983461801226444284
                - 15744399279591256459
              example:
              - 3993622711150519731
              - 8595614521719554412
              - 13178615884163544474
              - 10811110527192064096
  /vm/update/{id}:
    post:
      tags:
      - spin-registry
      summary: vm/update spin-registry
      description: Update a VM
      operationId: spin-registry#vm/update
      parameters:
      - name: id
        in: path
        description: ID of VM to update
        required: true
        schema:
          type: integer
          description: ID of VM to update
          example: 2509657968086084551
        example: 2676983435104963196
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VMUpdateRequestBody'
            example:
              vm:
                cpus: 2037161670898670278
                memory: 9673633980422219739
                name: In ipsa enim non maxime est.
                storage:
                - cdrom: false
                  image: Sit ab quo et quis quidem nulla.
                  image_size: 213869279976950464
                  volume: Vero sit ratione molestiae asperiores ut temporibus.
                - cdrom: false
                  image: Sit ab quo et quis quidem nulla.
                  image_size: 213869279976950464
                  volume: Vero sit ratione molestiae asperiores ut temporibus.
      responses:
        "200":
          description: OK response.
components:
  schemas:
    AddRequestBody:
      type: object
      properties:
        action:
          type: string
          description: Action name
          example: Enim et aut.
        parameters:
          type: object
          description: Action parameters
          example:
            Dolorum non qui.: Tempora fugit qui doloremque.
            Eius corporis occaecati aut adipisci.: Facere reprehenderit consequuntur inventore reiciendis tempora est.
            Et quia consequatur magnam officia.: Ex vel ipsum autem et et.
          additionalProperties: true
        resource:
          type: string
          description: Resource name
          example: Minima cum quae voluptas et.
      example:
        action: Hic unde assumenda praesentium similique.
        parameters:
          Nihil dicta optio voluptatem veniam fugit in.: Repellat cupiditate odit commodi veniam corrupti.
        resource: Officiis officiis.
      required:
      - resource
      - action
    AddVolumeRequestBody:
      type: object
      properties:
        path:
          type: string
          description: path to backing storage
          example: Commodi nihil error ipsum minima fugit vero.
        volume:
          type: string
          description: volume identifier
          example: Voluptatem recusandae unde.
      example:
        path: Voluptas omnis asperiores qui.
        volume: In voluptas laborum corrupti magnam quis.
      required:
      - volume
      - path
    CompleteRequestBody:
      type: object
      properties:
        id:
          type: string
          description: Command ID
          example: Adipisci in quia cum autem.
        status:
          type: boolean
          description: status of work
          example: false
        status_reason:
          type: string
          description: reason of success/failure
          example: Est molestiae accusamus aperiam ipsa voluptatem minima.
      example:
        id: Porro quia vitae facere ducimus esse.
        status: true
        status_reason: Repellendus et nostrum.
      required:
      - id
      - status
    CreateImageOnVolumeRequestBody:
      type: object
      properties:
        image_name:
          type: string
          description: image name
          example: Odio est.
        image_size:
          type: integer
          description: image size in GB
          example: 11387331280811484724
        volume:
          type: string
          description: volume identifier
          example: Molestiae cupiditate neque eos.
      example:
        image_name: Nihil sunt doloremque amet sint ut perspiciatis.
        image_size: 12252592779173529271
        volume: Maxime ut error facilis modi autem adipisci.
      required:
      - image_name
      - image_size
      - volume
    DeleteImageOnVolumeRequestBody:
      type: object
      properties:
        image_name:
          type: string
          description: image name
          example: Nam aut deserunt modi qui.
        volume:
          type: string
          description: volume identifier
          example: Placeat rem ullam.
      example:
        image_name: Ea at ut.
        volume: Expedita voluptatem reiciendis voluptatem dicta.
      required:
      - image_name
      - volume
    Error:
      type: object
      properties:
        fault:
          type: boolean
          description: Is the error a server-side fault?
          example: true
        id:
          type: string
          description: ID is a unique identifier for this particular occurrence of the problem.
          example: 123abc
        message:
          type: string
          description: Message is a human-readable explanation specific to this occurrence of the problem.
          example: parameter 'p' must be an integer
        name:
          type: string
          description: Name is the name of this class of errors.
          example: bad_request
        temporary:
          type: boolean
          description: Is the error temporary?
          example: true
        timeout:
          type: boolean
          description: Is the error a timeout?
          example: false
      example:
        id: 3F1FKVRR
        message: Value of ID must be an integer
        name: bad_request
      required:
      - name
      - id
      - message
      - temporary
      - timeout
      - fault
    MoveImageRequestBody:
      type: object
      properties:
        image_name:
          type: string
          description: image name
          example: Tenetur qui.
        target_volume:
          type: string
          description: volume identifier to move to
          example: Fugiat distinctio eveniet assumenda temporibus.
        volume:
          type: string
          description: volume identifier
          example: Et magnam sed iusto quam non.
      example:
        image_name: Qui illo eos repudiandae et vel.
        target_volume: Architecto in temporibus.
        volume: Rerum molestias officiis accusamus rerum.
      required:
      - image_name
      - volume
      - target_volume
    NextResponseBody:
      type: object
      properties:
        action:
          type: string
          description: action name
          example: Quo est.
        parameters:
          type: object
          description: Action parameters
          example:
            Atque debitis quos quisquam.: Voluptas molestiae sit ullam.
            Quidem dicta vero dolores veniam.: Unde et impedit voluptas repellat.
          additionalProperties: true
        resource:
          type: string
          description: resource type
          example: Corrupti non optio minus repellendus.
        uuid:
          type: string
          description: Command ID
          example: Distinctio rerum doloremque architecto.
      example:
        action: Tempore commodi deserunt et nemo expedita libero.
        parameters:
          Dolor similique reiciendis maxime dolorum.: Minus neque corporis omnis corporis sunt.
          Sunt suscipit et laudantium natus sed et.: Minima quo enim et tenetur autem.
        resource: Illo dolor sint et asperiores.
        uuid: Culpa labore dicta error dolores reprehenderit voluptatibus.
      required:
      - uuid
      - resource
      - action
    StatusResponseBody:
      type: object
      properties:
        causer:
          type: string
          description: Failure causer as UUID (if any)
          example: Voluptas sapiente ipsam.
        reason:
          type: string
          description: Failure reason (if any)
          example: Sed expedita aspernatur illo eligendi modi.
        status:
          type: boolean
          description: Pass/Fail status
          example: false
      example:
        causer: Deleniti delectus aut ex est.
        reason: Cum id asperiores ex id a iusto.
        status: true
      required:
      - status
    Storage:
      type: object
      properties:
        cdrom:
          type: boolean
          description: Is this image a cdrom?
          example: false
        image:
          type: string
          description: Image filename, must not include `/`
          example: Cumque iusto sapiente reprehenderit molestiae quia.
        image_size:
          type: integer
          description: Image size (in gigabytes)
          example: 12676023612373316402
        volume:
          type: string
          description: Volume name, must not include `/`
          example: Nostrum magnam.
      example:
        cdrom: true
        image: Non occaecati laboriosam dicta modi.
        image_size: 17397412137895444138
        volume: Mollitia officiis officiis quia cum.
      required:
      - volume
      - image
    StorageImagesDeleteRequestBody:
      type: object
      properties:
        image_name:
          type: string
          description: name of image
          example: Mollitia facilis.
        volume_name:
          type: string
          description: name of volume
          example: Eligendi dolor non vitae.
      example:
        image_name: Eum aliquam fuga tempore aut.
        volume_name: Soluta a sit nihil voluptas ea ea.
      required:
      - volume_name
      - image_name
    StorageImagesListRequestBody:
      type: object
      properties:
        volume_name:
          type: string
          description: name of volume to list images for
          example: Cumque ab officiis veniam et.
      example:
        volume_name: Sit dolores sunt repudiandae quas assumenda voluptatem.
      required:
      - volume_name
    StorageVolumesCreateRequestBody:
      type: object
      properties:
        name:
          type: string
          description: name of volume
          example: Quia veritatis.
      example:
        name: Est illo.
      required:
      - name
    VMCreateRequestBody:
      type: object
      properties:
        cpus:
          type: integer
          description: CPU count
          example: 6302653680500976691
        memory:
          type: integer
          description: Memory (in megabytes)
          example: 7165138736918405863
        name:
          type: string
          description: Name of VM; does not need to be unique
          example: A fuga mollitia id.
        storage:
          type: array
          items:
            $ref: '#/components/schemas/Storage'
          description: Storage references
          example:
          - cdrom: false
            image: Sit ab quo et quis quidem nulla.
            image_size: 213869279976950464
            volume: Vero sit ratione molestiae asperiores ut temporibus.
          - cdrom: false
            image: Sit ab quo et quis quidem nulla.
            image_size: 213869279976950464
            volume: Vero sit ratione molestiae asperiores ut temporibus.
          - cdrom: false
            image: Sit ab quo et quis quidem nulla.
            image_size: 213869279976950464
            volume: Vero sit ratione molestiae asperiores ut temporibus.
          - cdrom: false
            image: Sit ab quo et quis quidem nulla.
            image_size: 213869279976950464
            volume: Vero sit ratione molestiae asperiores ut temporibus.
      example:
        cpus: 11476827686349596131
        memory: 12094975811480319732
        name: Fugit rem totam est.
        storage:
        - cdrom: false
          image: Sit ab quo et quis quidem nulla.
          image_size: 213869279976950464
          volume: Vero sit ratione molestiae asperiores ut temporibus.
        - cdrom: false
          image: Sit ab quo et quis quidem nulla.
          image_size: 213869279976950464
          volume: Vero sit ratione molestiae asperiores ut temporibus.
        - cdrom: false
          image: Sit ab quo et quis quidem nulla.
          image_size: 213869279976950464
          volume: Vero sit ratione molestiae asperiores ut temporibus.
      required:
      - name
      - cpus
      - memory
      - storage
    VMUpdateRequestBody:
      type: object
      properties:
        vm:
          $ref: '#/components/schemas/VMCreateRequestBody'
      example:
        vm:
          cpus: 2037161670898670278
          memory: 9673633980422219739
          name: In ipsa enim non maxime est.
          storage:
          - cdrom: false
            image: Sit ab quo et quis quidem nulla.
            image_size: 213869279976950464
            volume: Vero sit ratione molestiae asperiores ut temporibus.
          - cdrom: false
            image: Sit ab quo et quis quidem nulla.
            image_size: 213869279976950464
            volume: Vero sit ratione molestiae asperiores ut temporibus.
      required:
      - vm
