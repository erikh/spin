swagger: "2.0"
info:
  title: Spin API service
  description: HTTP service for controlling the spin service
  version: ""
host: localhost:8080
consumes:
- application/json
- application/xml
- application/gob
produces:
- application/json
- application/xml
- application/gob
paths:
  /add/{id}:
    post:
      tags:
      - spin-broker
      summary: add spin-broker
      operationId: spin-broker#add
      parameters:
      - name: id
        in: path
        description: Package ID
        required: true
        type: string
      - name: AddRequestBody
        in: body
        required: true
        schema:
          $ref: '#/definitions/SpinBrokerAddRequestBody'
          required:
          - resource
          - action
      responses:
        "200":
          description: OK response.
          schema:
            type: string
      schemes:
      - http
  /complete:
    post:
      tags:
      - spin-broker
      summary: complete spin-broker
      operationId: spin-broker#complete
      parameters:
      - name: CompleteRequestBody
        in: body
        required: true
        schema:
          $ref: '#/definitions/SpinBrokerCompleteRequestBody'
          required:
          - id
          - status
      responses:
        "200":
          description: OK response.
      schemes:
      - http
  /enqueue/{id}:
    post:
      tags:
      - spin-broker
      summary: enqueue spin-broker
      operationId: spin-broker#enqueue
      parameters:
      - name: id
        in: path
        description: Package ID
        required: true
        type: string
      responses:
        "200":
          description: OK response.
          schema:
            type: array
            items:
              type: string
              example: Quia facere.
      schemes:
      - http
  /new:
    post:
      tags:
      - spin-broker
      summary: new spin-broker
      operationId: spin-broker#new
      responses:
        "200":
          description: OK response.
          schema:
            type: string
      schemes:
      - http
  /next/{resource}:
    get:
      tags:
      - spin-broker
      summary: next spin-broker
      operationId: spin-broker#next
      parameters:
      - name: resource
        in: path
        description: resource type
        required: true
        type: string
      responses:
        "200":
          description: OK response.
          schema:
            $ref: '#/definitions/SpinBrokerNextResponseBody'
            required:
            - uuid
            - resource
            - action
      schemes:
      - http
  /status/{id}:
    get:
      tags:
      - spin-broker
      summary: status spin-broker
      operationId: spin-broker#status
      parameters:
      - name: id
        in: path
        description: Package ID
        required: true
        type: string
      responses:
        "200":
          description: OK response.
          schema:
            $ref: '#/definitions/SpinBrokerStatusResponseBody'
            required:
            - status
      schemes:
      - http
  /storage/volume/add:
    post:
      tags:
      - spin-apiserver
      summary: add_volume spin-apiserver
      description: Add a volume for image allocation with backing storage, and name
        it
      operationId: spin-apiserver#add_volume
      parameters:
      - name: add_volume_request_body
        in: body
        required: true
        schema:
          $ref: '#/definitions/SpinApiserverAddVolumeRequestBody'
          required:
          - volume
          - path
      responses:
        "200":
          description: OK response.
      schemes:
      - http
  /storage/volume/image/create:
    post:
      tags:
      - spin-apiserver
      summary: create_image_on_volume spin-apiserver
      description: Create an image on a volume
      operationId: spin-apiserver#create_image_on_volume
      parameters:
      - name: create_image_on_volume_request_body
        in: body
        required: true
        schema:
          $ref: '#/definitions/SpinApiserverCreateImageOnVolumeRequestBody'
          required:
          - image_name
          - image_size
          - volume
      responses:
        "200":
          description: OK response.
      schemes:
      - http
  /storage/volume/image/delete:
    post:
      tags:
      - spin-apiserver
      summary: delete_image_on_volume spin-apiserver
      description: Delete an image on a volume
      operationId: spin-apiserver#delete_image_on_volume
      parameters:
      - name: delete_image_on_volume_request_body
        in: body
        required: true
        schema:
          $ref: '#/definitions/SpinApiserverDeleteImageOnVolumeRequestBody'
          required:
          - image_name
          - volume
      responses:
        "200":
          description: OK response.
      schemes:
      - http
  /storage/volume/image/info/{volume}/{image_name}:
    get:
      tags:
      - spin-apiserver
      summary: info_image_on_volume spin-apiserver
      description: Obtain information on an image
      operationId: spin-apiserver#info_image_on_volume
      parameters:
      - name: volume
        in: path
        description: volume identifier
        required: true
        type: string
      - name: image_name
        in: path
        description: image name
        required: true
        type: string
      responses:
        "200":
          description: OK response.
      schemes:
      - http
  /storage/volume/image/move:
    post:
      tags:
      - spin-apiserver
      summary: move_image spin-apiserver
      description: Move an image from one volume to another
      operationId: spin-apiserver#move_image
      parameters:
      - name: move_image_request_body
        in: body
        required: true
        schema:
          $ref: '#/definitions/SpinApiserverMoveImageRequestBody'
          required:
          - image_name
          - volume
          - target_volume
      responses:
        "200":
          description: OK response.
      schemes:
      - http
  /storage/volume/image/resize:
    post:
      tags:
      - spin-apiserver
      summary: resize_image_on_volume spin-apiserver
      description: Resize an image on a volume
      operationId: spin-apiserver#resize_image_on_volume
      parameters:
      - name: resize_image_on_volume_request_body
        in: body
        required: true
        schema:
          $ref: '#/definitions/SpinApiserverResizeImageOnVolumeRequestBody'
          required:
          - image_name
          - image_size
          - volume
      responses:
        "200":
          description: OK response.
      schemes:
      - http
  /storage/volume/info/{volume}:
    get:
      tags:
      - spin-apiserver
      summary: info_volume spin-apiserver
      description: Get information on a volume
      operationId: spin-apiserver#info_volume
      parameters:
      - name: volume
        in: path
        description: volume identifier
        required: true
        type: string
      responses:
        "200":
          description: OK response.
      schemes:
      - http
  /storage/volume/label/{volume}/{label}:
    post:
      tags:
      - spin-apiserver
      summary: label_volume spin-apiserver
      description: Apply a label to a volume.
      operationId: spin-apiserver#label_volume
      parameters:
      - name: volume
        in: path
        description: volume identifier
        required: true
        type: string
      - name: label
        in: path
        description: label identifier to apply to volume
        required: true
        type: string
      responses:
        "200":
          description: OK response.
      schemes:
      - http
  /storage/volume/remove/{volume}:
    post:
      tags:
      - spin-apiserver
      summary: remove_volume spin-apiserver
      description: Remove a volume. Requires all images to be removed.
      operationId: spin-apiserver#remove_volume
      parameters:
      - name: volume
        in: path
        description: volume identifier
        required: true
        type: string
      responses:
        "200":
          description: OK response.
      schemes:
      - http
definitions:
  SpinApiserverAddVolumeRequestBody:
    title: SpinApiserverAddVolumeRequestBody
    type: object
    properties:
      path:
        type: string
        description: path to backing storage
        example: Vel illum voluptatem.
      volume:
        type: string
        description: volume identifier
        example: Nihil officia aspernatur.
    example:
      path: Occaecati enim in aut vero.
      volume: Est minima cum.
    required:
    - volume
    - path
  SpinApiserverCreateImageOnVolumeRequestBody:
    title: SpinApiserverCreateImageOnVolumeRequestBody
    type: object
    properties:
      image_name:
        type: string
        description: image name
        example: Quia quis omnis suscipit est et.
      image_size:
        type: integer
        description: image size in GB
        example: 2453152901843734876
        format: int64
      volume:
        type: string
        description: volume identifier
        example: Sint rerum rerum porro eius.
    example:
      image_name: Esse labore voluptas.
      image_size: 4373530742914524004
      volume: Iusto adipisci sapiente temporibus.
    required:
    - image_name
    - image_size
    - volume
  SpinApiserverDeleteImageOnVolumeRequestBody:
    title: SpinApiserverDeleteImageOnVolumeRequestBody
    type: object
    properties:
      image_name:
        type: string
        description: image name
        example: Aut minima recusandae et.
      volume:
        type: string
        description: volume identifier
        example: Fugit quis.
    example:
      image_name: Qui error modi magni.
      volume: Corrupti et voluptatibus et et occaecati.
    required:
    - image_name
    - volume
  SpinApiserverMoveImageRequestBody:
    title: SpinApiserverMoveImageRequestBody
    type: object
    properties:
      image_name:
        type: string
        description: image name
        example: Excepturi iste expedita a aut similique.
      target_volume:
        type: string
        description: volume identifier to move to
        example: Vel qui dolores nihil autem dolorem.
      volume:
        type: string
        description: volume identifier
        example: Ab soluta vel.
    example:
      image_name: Quisquam vero sit.
      target_volume: Temporibus explicabo sit ab quo et quis.
      volume: Molestiae asperiores.
    required:
    - image_name
    - volume
    - target_volume
  SpinApiserverResizeImageOnVolumeRequestBody:
    title: SpinApiserverResizeImageOnVolumeRequestBody
    type: object
    properties:
      image_name:
        type: string
        description: image name
        example: Quo dolore soluta consectetur.
      image_size:
        type: integer
        description: new image size; must be larger than original size
        example: 3472743333644681302
        format: int64
      volume:
        type: string
        description: volume identifier
        example: Non nihil vitae nesciunt.
    example:
      image_name: Assumenda pariatur.
      image_size: 9112671615115988735
      volume: Nobis quia.
    required:
    - image_name
    - image_size
    - volume
  SpinBrokerAddRequestBody:
    title: SpinBrokerAddRequestBody
    type: object
    properties:
      action:
        type: string
        description: Action name
        example: Ipsa enim non maxime est.
      parameters:
        type: array
        items:
          type: string
          example: Quia reprehenderit vitae.
        description: Action parameters
        example:
        - Adipisci recusandae amet et id et.
        - Vel ratione vitae cupiditate veniam.
      resource:
        type: string
        description: Resource name
        example: Nulla numquam rerum asperiores corporis aut enim.
    example:
      action: Aliquam sit necessitatibus pariatur quam.
      parameters:
      - Ut ea excepturi.
      - Facilis ad quod.
      resource: Accusamus velit et ipsa at.
    required:
    - resource
    - action
  SpinBrokerCompleteRequestBody:
    title: SpinBrokerCompleteRequestBody
    type: object
    properties:
      id:
        type: string
        description: Command ID
        example: In ea natus tempore.
      status:
        type: boolean
        description: status of work
        example: false
      status_reason:
        type: string
        description: reason of success/failure
        example: Consectetur assumenda soluta repellendus eaque neque.
    example:
      id: Accusamus beatae nihil.
      status: true
      status_reason: Quaerat consequatur nemo.
    required:
    - id
    - status
  SpinBrokerNextResponseBody:
    title: SpinBrokerNextResponseBody
    type: object
    properties:
      action:
        type: string
        description: action name
        example: Tempore voluptate voluptas.
      parameters:
        type: array
        items:
          type: string
          example: Mollitia eius hic.
        description: parameters for action
        example:
        - Nulla et cum.
        - In illo iure.
      resource:
        type: string
        description: resource type
        example: Sed quae ea.
      uuid:
        type: string
        description: Command ID
        example: Vel fugit incidunt tempora.
    example:
      action: Qui provident.
      parameters:
      - Sapiente ut.
      - Officia quod tempora consequatur ut.
      - Impedit laboriosam et dolorum tempora inventore officia.
      - Ipsam dicta accusantium.
      resource: Qui laborum.
      uuid: Voluptas minima nostrum qui perferendis rerum molestias.
    required:
    - uuid
    - resource
    - action
  SpinBrokerStatusResponseBody:
    title: SpinBrokerStatusResponseBody
    type: object
    properties:
      reason:
        type: string
        description: Failure reason (if any)
        example: Nesciunt natus dolorem nemo vel tempora.
      status:
        type: boolean
        description: Pass/Fail status
        example: false
    example:
      reason: Quis aut quis vel.
      status: false
    required:
    - status
