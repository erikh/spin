swagger: "2.0"
info:
  title: Spin API service
  description: HTTP service for controlling the spin service
  version: ""
host: localhost:8080
consumes:
- application/json
- application/xml
- application/gob
produces:
- application/json
- application/xml
- application/gob
paths:
  /add/{id}:
    post:
      tags:
      - spin-broker
      summary: add spin-broker
      description: Add a command to the package
      operationId: spin-broker#add
      parameters:
      - name: id
        in: path
        description: Package ID
        required: true
        type: string
      - name: AddRequestBody
        in: body
        required: true
        schema:
          $ref: '#/definitions/SpinBrokerAddRequestBody'
          required:
          - resource
          - action
      responses:
        "200":
          description: OK response.
          schema:
            type: string
      schemes:
      - http
  /complete:
    post:
      tags:
      - spin-broker
      summary: complete spin-broker
      description: Mark a command as completed with a result status
      operationId: spin-broker#complete
      parameters:
      - name: CompleteRequestBody
        in: body
        required: true
        schema:
          $ref: '#/definitions/SpinBrokerCompleteRequestBody'
          required:
          - id
          - status
      responses:
        "200":
          description: OK response.
      schemes:
      - http
  /control/shutdown/{id}:
    post:
      tags:
      - spin-apiserver
      summary: control_shutdown spin-apiserver
      operationId: spin-apiserver#control_shutdown
      parameters:
      - name: id
        in: path
        description: ID of VM to shutdown
        required: true
        type: integer
      responses:
        "200":
          description: OK response.
      schemes:
      - http
  /control/start/{id}:
    post:
      tags:
      - spin-apiserver
      summary: control_start spin-apiserver
      operationId: spin-apiserver#control_start
      parameters:
      - name: id
        in: path
        description: ID of VM to start
        required: true
        type: integer
      responses:
        "200":
          description: OK response.
      schemes:
      - http
  /control/stop/{id}:
    post:
      tags:
      - spin-apiserver
      summary: control_stop spin-apiserver
      operationId: spin-apiserver#control_stop
      parameters:
      - name: id
        in: path
        description: ID of VM to stop
        required: true
        type: integer
      responses:
        "200":
          description: OK response.
      schemes:
      - http
  /enqueue/{id}:
    post:
      tags:
      - spin-broker
      summary: enqueue spin-broker
      description: Enqueue the package into the various resource queues
      operationId: spin-broker#enqueue
      parameters:
      - name: id
        in: path
        description: Package ID
        required: true
        type: string
      responses:
        "200":
          description: OK response.
          schema:
            type: array
            items:
              type: string
              example: Odio similique qui qui architecto.
      schemes:
      - http
  /new:
    post:
      tags:
      - spin-broker
      summary: new spin-broker
      description: Create a new package; a collection of items to join into the queue simultaneously
      operationId: spin-broker#new
      responses:
        "200":
          description: OK response.
          schema:
            type: string
      schemes:
      - http
  /next/{resource}:
    get:
      tags:
      - spin-broker
      summary: next spin-broker
      description: Get the next command for a given resource
      operationId: spin-broker#next
      parameters:
      - name: resource
        in: path
        description: resource type
        required: true
        type: string
      responses:
        "200":
          description: OK response.
          schema:
            $ref: '#/definitions/SpinBrokerNextResponseBody'
            required:
            - uuid
            - resource
            - action
        "400":
          description: No records were found
          schema:
            $ref: '#/definitions/SpinBrokerNextRecordNotFoundResponseBody'
      schemes:
      - http
  /status/{id}:
    get:
      tags:
      - spin-broker
      summary: status spin-broker
      description: Get the status for a package
      operationId: spin-broker#status
      parameters:
      - name: id
        in: path
        description: Package ID
        required: true
        type: string
      responses:
        "200":
          description: OK response.
          schema:
            $ref: '#/definitions/SpinBrokerStatusResponseBody'
            required:
            - status
        "400":
          description: No records were found
          schema:
            $ref: '#/definitions/SpinBrokerStatusRecordNotFoundResponseBody'
      schemes:
      - http
  /storage/images/create:
    post:
      tags:
      - spin-registry
      summary: storage_images_create spin-registry
      description: add an image definition to the registry
      operationId: spin-registry#storage_images_create
      parameters:
      - name: storage_images_create_request_body
        in: body
        required: true
        schema:
          $ref: '#/definitions/SpinRegistryStorageImagesCreateRequestBody'
          required:
          - image
          - volume
      responses:
        "200":
          description: OK response.
          schema:
            $ref: '#/definitions/SpinRegistryStorageImagesCreateResponseBody'
            required:
            - path
            - cdrom
      schemes:
      - http
  /storage/images/delete:
    post:
      tags:
      - spin-registry
      summary: storage_images_delete spin-registry
      description: remove an image definition from the registry
      operationId: spin-registry#storage_images_delete
      parameters:
      - name: storage_images_delete_request_body
        in: body
        required: true
        schema:
          $ref: '#/definitions/SpinRegistryStorageImagesDeleteRequestBody'
          required:
          - volume_name
          - image_name
      responses:
        "200":
          description: OK response.
      schemes:
      - http
  /storage/images/get:
    get:
      tags:
      - spin-registry
      summary: storage_images_get spin-registry
      description: retrieves an image definition from the registry
      operationId: spin-registry#storage_images_get
      parameters:
      - name: storage_images_get_request_body
        in: body
        required: true
        schema:
          $ref: '#/definitions/SpinRegistryStorageImagesGetRequestBody'
          required:
          - volume_name
          - image_name
      responses:
        "200":
          description: OK response.
          schema:
            $ref: '#/definitions/SpinRegistryStorageImagesGetResponseBody'
            required:
            - path
            - cdrom
      schemes:
      - http
  /storage/images/list:
    get:
      tags:
      - spin-registry
      summary: storage_images_list spin-registry
      description: list all images by volume
      operationId: spin-registry#storage_images_list
      parameters:
      - name: storage_images_list_request_body
        in: body
        required: true
        schema:
          $ref: '#/definitions/SpinRegistryStorageImagesListRequestBody'
          required:
          - volume_name
      responses:
        "200":
          description: OK response.
          schema:
            type: array
            items:
              type: string
              example: Vel in modi rerum.
      schemes:
      - http
  /storage/volumes/create:
    post:
      tags:
      - spin-registry
      summary: storage_volumes_create spin-registry
      description: create a new volume
      operationId: spin-registry#storage_volumes_create
      parameters:
      - name: storage_volumes_create_request_body
        in: body
        required: true
        schema:
          $ref: '#/definitions/SpinRegistryStorageVolumesCreateRequestBody'
          required:
          - name
          - path
      responses:
        "200":
          description: OK response.
      schemes:
      - http
  /storage/volumes/delete:
    post:
      tags:
      - spin-registry
      summary: storage_volumes_delete spin-registry
      description: delete an existing volume
      operationId: spin-registry#storage_volumes_delete
      parameters:
      - name: storage_volumes_delete_request_body
        in: body
        required: true
        schema:
          $ref: '#/definitions/SpinRegistryStorageVolumesDeleteRequestBody'
          required:
          - name
      responses:
        "200":
          description: OK response.
      schemes:
      - http
  /storage/volumes/list:
    get:
      tags:
      - spin-registry
      summary: storage_volumes_list spin-registry
      description: list all volumes
      operationId: spin-registry#storage_volumes_list
      responses:
        "200":
          description: OK response.
          schema:
            type: object
            additionalProperties: true
      schemes:
      - http
  /vm/create:
    post:
      tags:
      - spin-registry
      summary: vm_create spin-registry
      description: Create a VM
      operationId: spin-registry#vm_create
      parameters:
      - name: vm_create_request_body
        in: body
        required: true
        schema:
          $ref: '#/definitions/SpinRegistryVMCreateRequestBody'
          required:
          - name
          - cpus
          - memory
          - images
      responses:
        "200":
          description: OK response.
          schema:
            type: integer
            format: int64
      schemes:
      - http
  /vm/delete/{id}:
    post:
      tags:
      - spin-registry
      summary: vm_delete spin-registry
      description: Delete a VM by ID
      operationId: spin-registry#vm_delete
      parameters:
      - name: id
        in: path
        description: ID of VM to remove
        required: true
        type: integer
      responses:
        "200":
          description: OK response.
      schemes:
      - http
  /vm/get/{id}:
    get:
      tags:
      - spin-registry
      summary: vm_get spin-registry
      description: Retrieve a VM by ID
      operationId: spin-registry#vm_get
      parameters:
      - name: id
        in: path
        description: ID of VM to remove
        required: true
        type: integer
      responses:
        "200":
          description: OK response.
          schema:
            $ref: '#/definitions/SpinRegistryVMGetResponseBody'
            required:
            - name
            - cpus
            - memory
            - images
      schemes:
      - http
  /vm/list:
    get:
      tags:
      - spin-registry
      summary: vm_list spin-registry
      description: Retrieve all VM IDs
      operationId: spin-registry#vm_list
      responses:
        "200":
          description: OK response.
          schema:
            type: array
            items:
              type: integer
              example: 16057019975862505419
              format: int64
      schemes:
      - http
  /vm/update/{id}:
    post:
      tags:
      - spin-registry
      summary: vm_update spin-registry
      description: Update a VM
      operationId: spin-registry#vm_update
      parameters:
      - name: id
        in: path
        description: ID of VM to update
        required: true
        type: integer
      - name: vm_update_request_body
        in: body
        required: true
        schema:
          $ref: '#/definitions/SpinRegistryVMUpdateRequestBody'
          required:
          - vm
      responses:
        "200":
          description: OK response.
      schemes:
      - http
definitions:
  ImageRequestBody:
    title: ImageRequestBody
    type: object
    properties:
      cdrom:
        type: boolean
        description: Is this a cdrom image?
        example: false
      path:
        type: string
        description: Image path
        example: Sed necessitatibus et asperiores.
    example:
      cdrom: false
      path: Sequi officia animi fugiat.
    required:
    - path
    - cdrom
  ImageResponseBody:
    title: ImageResponseBody
    type: object
    properties:
      cdrom:
        type: boolean
        description: Is this a cdrom image?
        example: false
      path:
        type: string
        description: Image path
        example: Molestiae nostrum quia quisquam hic est.
    example:
      cdrom: true
      path: Quae incidunt nulla sit.
    required:
    - path
    - cdrom
  SpinApiserverVMCreateRequestBody:
    title: SpinApiserverVMCreateRequestBody
    type: object
    properties:
      cpus:
        type: integer
        description: CPU count
        example: 12582341668664123331
        format: int64
      memory:
        type: integer
        description: Memory (in megabytes)
        example: 2754778727539746279
        format: int64
      name:
        type: string
        description: Name of VM; does not need to be unique
        example: Aut asperiores.
      storage:
        type: array
        items:
          $ref: '#/definitions/StorageRequestBody'
        description: Storage references
        example:
        - cdrom: true
          image: Eius officiis esse labore voluptas perferendis.
          image_size: 3976908564030419353
          volume: Dicta id sint rerum rerum.
        - cdrom: true
          image: Eius officiis esse labore voluptas perferendis.
          image_size: 3976908564030419353
          volume: Dicta id sint rerum rerum.
    example:
      cpus: 3634565976760237186
      memory: 1573532821511721650
      name: Cum repudiandae veniam vel.
      storage:
      - cdrom: true
        image: Eius officiis esse labore voluptas perferendis.
        image_size: 3976908564030419353
        volume: Dicta id sint rerum rerum.
      - cdrom: true
        image: Eius officiis esse labore voluptas perferendis.
        image_size: 3976908564030419353
        volume: Dicta id sint rerum rerum.
      - cdrom: true
        image: Eius officiis esse labore voluptas perferendis.
        image_size: 3976908564030419353
        volume: Dicta id sint rerum rerum.
    required:
    - name
    - cpus
    - memory
    - storage
  SpinBrokerAddRequestBody:
    title: SpinBrokerAddRequestBody
    type: object
    properties:
      action:
        type: string
        description: Action name
        example: Beatae nihil.
      dependencies:
        type: array
        items:
          type: string
          example: Illo ratione totam.
        description: Dependency UUIDs
        example:
        - Deleniti illum quod est enim aperiam laborum.
        - Aut dolores.
        - Excepturi ut quo ipsum ea.
        - Facilis enim autem doloribus sunt ut quos.
      parameters:
        type: object
        description: Action parameters
        example:
          Natus dicta aliquid.: Provident sint ut facilis.
          Quaerat consequatur nemo.: Ab delectus amet magnam.
          Quo quaerat iusto non.: Et aut sit a quas velit adipisci.
        additionalProperties: true
      resource:
        type: string
        description: Resource name
        example: Neque vel.
    example:
      action: Itaque non quis quae.
      dependencies:
      - Consectetur nihil omnis.
      - Quia ut laboriosam beatae itaque omnis.
      - Exercitationem incidunt quae est velit eaque mollitia.
      parameters:
        Laboriosam fugit.: Excepturi non voluptate.
        Laboriosam sunt minima saepe architecto.: Enim quos numquam recusandae ut.
      resource: Ut ex molestiae quod distinctio voluptatibus.
    required:
    - resource
    - action
  SpinBrokerCompleteRequestBody:
    title: SpinBrokerCompleteRequestBody
    type: object
    properties:
      id:
        type: string
        description: Command ID
        example: Eum officiis sit quis itaque ducimus qui.
      status:
        type: boolean
        description: status of work
        example: true
      status_reason:
        type: string
        description: reason of success/failure
        example: Blanditiis repudiandae.
    example:
      id: Accusantium consequuntur.
      status: false
      status_reason: Inventore sed.
    required:
    - id
    - status
  SpinBrokerNextRecordNotFoundResponseBody:
    title: 'Mediatype identifier: application/vnd.goa.error; view=default'
    type: object
    properties:
      fault:
        type: boolean
        description: Is the error a server-side fault?
        example: false
      id:
        type: string
        description: ID is a unique identifier for this particular occurrence of the problem.
        example: 123abc
      message:
        type: string
        description: Message is a human-readable explanation specific to this occurrence of the problem.
        example: parameter 'p' must be an integer
      name:
        type: string
        description: Name is the name of this class of errors.
        example: bad_request
      temporary:
        type: boolean
        description: Is the error temporary?
        example: true
      timeout:
        type: boolean
        description: Is the error a timeout?
        example: true
    description: next_record_not_found_response_body result type (default view)
    example:
      fault: false
      id: 123abc
      message: parameter 'p' must be an integer
      name: bad_request
      temporary: true
      timeout: false
    required:
    - name
    - id
    - message
    - temporary
    - timeout
    - fault
  SpinBrokerNextResponseBody:
    title: SpinBrokerNextResponseBody
    type: object
    properties:
      action:
        type: string
        description: action name
        example: Qui sit nihil.
      parameters:
        type: object
        description: Action parameters
        example:
          Commodi placeat exercitationem nostrum est totam.: Eligendi quod voluptas sed.
          Repudiandae eos.: Quibusdam error dolorem.
          Sequi voluptatem culpa unde ut.: Aut ut illum.
        additionalProperties: true
      resource:
        type: string
        description: resource type
        example: Ea iusto modi aspernatur.
      uuid:
        type: string
        description: Command ID
        example: Et provident.
    example:
      action: Consectetur commodi.
      parameters:
        Explicabo quaerat officiis voluptatum deleniti maxime.: Vero omnis sed qui sint delectus quis.
        Quos reiciendis et quisquam ex.: Voluptas voluptate et in animi quos voluptatem.
      resource: Numquam provident occaecati animi.
      uuid: Et aperiam impedit autem optio ut.
    required:
    - uuid
    - resource
    - action
  SpinBrokerStatusRecordNotFoundResponseBody:
    title: 'Mediatype identifier: application/vnd.goa.error; view=default'
    type: object
    properties:
      fault:
        type: boolean
        description: Is the error a server-side fault?
        example: true
      id:
        type: string
        description: ID is a unique identifier for this particular occurrence of the problem.
        example: 123abc
      message:
        type: string
        description: Message is a human-readable explanation specific to this occurrence of the problem.
        example: parameter 'p' must be an integer
      name:
        type: string
        description: Name is the name of this class of errors.
        example: bad_request
      temporary:
        type: boolean
        description: Is the error temporary?
        example: true
      timeout:
        type: boolean
        description: Is the error a timeout?
        example: false
    description: status_record_not_found_response_body result type (default view)
    example:
      fault: false
      id: 123abc
      message: parameter 'p' must be an integer
      name: bad_request
      temporary: true
      timeout: false
    required:
    - name
    - id
    - message
    - temporary
    - timeout
    - fault
  SpinBrokerStatusResponseBody:
    title: SpinBrokerStatusResponseBody
    type: object
    properties:
      causer:
        type: string
        description: Failure causer as UUID (if any)
        example: Qui ea qui omnis qui sit et.
      reason:
        type: string
        description: Failure reason (if any)
        example: Omnis quia deleniti.
      status:
        type: boolean
        description: Pass/Fail status
        example: false
    example:
      causer: Quaerat illo molestiae.
      reason: Enim ut voluptas ullam quas aliquam.
      status: true
    required:
    - status
  SpinRegistryStorageImagesCreateRequestBody:
    title: SpinRegistryStorageImagesCreateRequestBody
    type: object
    properties:
      cdrom:
        type: boolean
        description: Is this image a cdrom?
        example: true
      image:
        type: string
        description: Image filename, no `/` characters
        example: Animi dolorem totam omnis molestiae voluptatum rerum.
      image_size:
        type: integer
        description: Image size (in gigabytes)
        example: 6630383005671600344
        format: int64
      volume:
        type: string
        description: Volume name
        example: Optio sint et nesciunt et molestiae soluta.
    example:
      cdrom: false
      image: Deserunt blanditiis consequatur consequuntur praesentium consequatur.
      image_size: 710111403244910451
      volume: Tempore iste voluptatem est.
    required:
    - image
    - volume
  SpinRegistryStorageImagesCreateResponseBody:
    title: SpinRegistryStorageImagesCreateResponseBody
    type: object
    properties:
      cdrom:
        type: boolean
        description: Is this a cdrom image?
        example: true
      path:
        type: string
        description: Image path
        example: Asperiores tempora.
    example:
      cdrom: false
      path: Inventore qui nihil nam.
    required:
    - path
    - cdrom
  SpinRegistryStorageImagesDeleteRequestBody:
    title: SpinRegistryStorageImagesDeleteRequestBody
    type: object
    properties:
      image_name:
        type: string
        description: name of image
        example: Labore numquam corporis ab nulla.
      volume_name:
        type: string
        description: name of volume
        example: Harum rerum.
    example:
      image_name: Minus expedita.
      volume_name: Exercitationem voluptatem vel dicta consequuntur tempora dolorem.
    required:
    - volume_name
    - image_name
  SpinRegistryStorageImagesGetRequestBody:
    title: SpinRegistryStorageImagesGetRequestBody
    type: object
    properties:
      image_name:
        type: string
        description: name of image
        example: Culpa ut quidem aut et qui porro.
      volume_name:
        type: string
        description: name of volume
        example: Minima omnis.
    example:
      image_name: Totam quia sit.
      volume_name: Labore accusantium ut itaque odio explicabo perferendis.
    required:
    - volume_name
    - image_name
  SpinRegistryStorageImagesGetResponseBody:
    title: SpinRegistryStorageImagesGetResponseBody
    type: object
    properties:
      cdrom:
        type: boolean
        description: Is this a cdrom image?
        example: true
      path:
        type: string
        description: Image path
        example: Et iusto fugit.
    example:
      cdrom: true
      path: Aliquid corrupti amet numquam sed.
    required:
    - path
    - cdrom
  SpinRegistryStorageImagesListRequestBody:
    title: SpinRegistryStorageImagesListRequestBody
    type: object
    properties:
      volume_name:
        type: string
        description: name of volume to list images for
        example: Ut veritatis aut.
    example:
      volume_name: Deleniti incidunt.
    required:
    - volume_name
  SpinRegistryStorageVolumesCreateRequestBody:
    title: SpinRegistryStorageVolumesCreateRequestBody
    type: object
    properties:
      name:
        type: string
        description: name of volume
        example: Inventore aut consequatur officiis perspiciatis inventore.
      path:
        type: string
        description: path to volume
        example: Voluptate voluptas veniam.
    example:
      name: Eum laudantium tempora pariatur possimus autem.
      path: Qui ad aut possimus quisquam harum.
    required:
    - name
    - path
  SpinRegistryStorageVolumesDeleteRequestBody:
    title: SpinRegistryStorageVolumesDeleteRequestBody
    type: object
    properties:
      name:
        type: string
        description: name of volume
        example: Ipsum natus quasi quia.
    example:
      name: Ut suscipit cupiditate cumque ratione occaecati.
    required:
    - name
  SpinRegistryVMCreateRequestBody:
    title: SpinRegistryVMCreateRequestBody
    type: object
    properties:
      cpus:
        type: integer
        description: CPU count
        example: 743273099863973551
        format: int64
      images:
        type: array
        items:
          $ref: '#/definitions/ImageRequestBody'
        description: Image references
        example:
        - cdrom: false
          path: Corrupti et voluptatibus et et occaecati.
        - cdrom: false
          path: Corrupti et voluptatibus et et occaecati.
      memory:
        type: integer
        description: Memory (in megabytes)
        example: 12485697019927615723
        format: int64
      name:
        type: string
        description: Name of VM; does not need to be unique
        example: Aut tempore aliquam.
    example:
      cpus: 848682044187229832
      images:
      - cdrom: false
        path: Corrupti et voluptatibus et et occaecati.
      - cdrom: false
        path: Corrupti et voluptatibus et et occaecati.
      - cdrom: false
        path: Corrupti et voluptatibus et et occaecati.
      - cdrom: false
        path: Corrupti et voluptatibus et et occaecati.
      memory: 865562045241744601
      name: Natus neque qui iusto ex et.
    required:
    - name
    - cpus
    - memory
    - images
  SpinRegistryVMGetResponseBody:
    title: SpinRegistryVMGetResponseBody
    type: object
    properties:
      cpus:
        type: integer
        description: CPU count
        example: 14431733829690270973
        format: int64
      images:
        type: array
        items:
          $ref: '#/definitions/ImageResponseBody'
        description: Image references
        example:
        - cdrom: true
          path: Corrupti ab.
        - cdrom: true
          path: Corrupti ab.
        - cdrom: true
          path: Corrupti ab.
        - cdrom: true
          path: Corrupti ab.
      memory:
        type: integer
        description: Memory (in megabytes)
        example: 3525686775974082415
        format: int64
      name:
        type: string
        description: Name of VM; does not need to be unique
        example: Dolorem et corporis quo.
    example:
      cpus: 4515823660291740496
      images:
      - cdrom: true
        path: Corrupti ab.
      - cdrom: true
        path: Corrupti ab.
      - cdrom: true
        path: Corrupti ab.
      memory: 1821765247689904756
      name: Cupiditate amet.
    required:
    - name
    - cpus
    - memory
    - images
  SpinRegistryVMUpdateRequestBody:
    title: SpinRegistryVMUpdateRequestBody
    type: object
    properties:
      vm:
        $ref: '#/definitions/UpdatedVMRequestBody'
    example:
      vm:
        cpus: 17043342971635177953
        images:
        - cdrom: false
          path: Corrupti et voluptatibus et et occaecati.
        - cdrom: false
          path: Corrupti et voluptatibus et et occaecati.
        - cdrom: false
          path: Corrupti et voluptatibus et et occaecati.
        - cdrom: false
          path: Corrupti et voluptatibus et et occaecati.
        memory: 2551606264180670795
        name: Rem et nobis.
    required:
    - vm
  StorageRequestBody:
    title: StorageRequestBody
    type: object
    properties:
      cdrom:
        type: boolean
        description: Is this image a cdrom?
        example: true
      image:
        type: string
        description: Image filename, no `/` characters
        example: Accusamus esse blanditiis.
      image_size:
        type: integer
        description: Image size (in gigabytes)
        example: 1966420365276308736
        format: int64
      volume:
        type: string
        description: Volume name
        example: Deserunt dicta eaque reiciendis autem.
    example:
      cdrom: true
      image: Sequi temporibus.
      image_size: 17999925532621315884
      volume: Voluptas perspiciatis in inventore.
    required:
    - image
    - volume
  UpdatedVMRequestBody:
    title: UpdatedVMRequestBody
    type: object
    properties:
      cpus:
        type: integer
        description: CPU count
        example: 12912299026057686733
        format: int64
      images:
        type: array
        items:
          $ref: '#/definitions/ImageRequestBody'
        description: Image references
        example:
        - cdrom: false
          path: Corrupti et voluptatibus et et occaecati.
        - cdrom: false
          path: Corrupti et voluptatibus et et occaecati.
        - cdrom: false
          path: Corrupti et voluptatibus et et occaecati.
      memory:
        type: integer
        description: Memory (in megabytes)
        example: 3217507219102201512
        format: int64
      name:
        type: string
        description: Name of VM; does not need to be unique
        example: Reiciendis eveniet repudiandae reiciendis perferendis impedit reiciendis.
    example:
      cpus: 16407373559890724020
      images:
      - cdrom: false
        path: Corrupti et voluptatibus et et occaecati.
      - cdrom: false
        path: Corrupti et voluptatibus et et occaecati.
      - cdrom: false
        path: Corrupti et voluptatibus et et occaecati.
      memory: 9724042061409375964
      name: Iure nihil.
    required:
    - name
    - cpus
    - memory
    - images
