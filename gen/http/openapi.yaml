swagger: "2.0"
info:
  title: Spin API service
  description: HTTP service for controlling the spin service
  version: ""
host: localhost:8080
consumes:
- application/json
- application/xml
- application/gob
produces:
- application/json
- application/xml
- application/gob
paths:
  /add/{id}:
    post:
      tags:
      - spin-broker
      summary: add spin-broker
      description: Add a command to the package
      operationId: spin-broker#add
      parameters:
      - name: id
        in: path
        description: Package ID
        required: true
        type: string
      - name: AddRequestBody
        in: body
        required: true
        schema:
          $ref: '#/definitions/SpinBrokerAddRequestBody'
          required:
          - resource
          - action
      responses:
        "200":
          description: OK response.
          schema:
            type: string
      schemes:
      - http
  /complete:
    post:
      tags:
      - spin-broker
      summary: complete spin-broker
      description: Mark a command as completed with a result status
      operationId: spin-broker#complete
      parameters:
      - name: CompleteRequestBody
        in: body
        required: true
        schema:
          $ref: '#/definitions/SpinBrokerCompleteRequestBody'
          required:
          - id
          - status
      responses:
        "200":
          description: OK response.
      schemes:
      - http
  /create:
    post:
      tags:
      - spin-registry
      summary: create spin-registry
      description: Create a VM
      operationId: spin-registry#create
      parameters:
      - name: CreateRequestBody
        in: body
        required: true
        schema:
          $ref: '#/definitions/SpinRegistryCreateRequestBody'
          required:
          - name
          - cpus
          - memory
          - storage
      responses:
        "200":
          description: OK response.
          schema:
            type: integer
            format: int64
      schemes:
      - http
  /delete/{id}:
    post:
      tags:
      - spin-registry
      summary: delete spin-registry
      description: Delete a VM by ID
      operationId: spin-registry#delete
      parameters:
      - name: id
        in: path
        description: ID of VM to remove
        required: true
        type: integer
      responses:
        "200":
          description: OK response.
      schemes:
      - http
  /enqueue/{id}:
    post:
      tags:
      - spin-broker
      summary: enqueue spin-broker
      description: Enqueue the package into the various resource queues
      operationId: spin-broker#enqueue
      parameters:
      - name: id
        in: path
        description: Package ID
        required: true
        type: string
      responses:
        "200":
          description: OK response.
          schema:
            type: array
            items:
              type: string
              example: Impedit laboriosam et dolorum tempora inventore officia.
      schemes:
      - http
  /get/{id}:
    get:
      tags:
      - spin-registry
      summary: get spin-registry
      description: Retrieve a VM by ID
      operationId: spin-registry#get
      parameters:
      - name: id
        in: path
        description: ID of VM to remove
        required: true
        type: integer
      responses:
        "200":
          description: OK response.
          schema:
            $ref: '#/definitions/SpinRegistryGetResponseBody'
            required:
            - name
            - cpus
            - memory
            - storage
      schemes:
      - http
  /list:
    get:
      tags:
      - spin-registry
      summary: list spin-registry
      description: Retrieve all VM IDs
      operationId: spin-registry#list
      responses:
        "200":
          description: OK response.
          schema:
            type: array
            items:
              type: integer
              example: 10261283787704931939
              format: int64
      schemes:
      - http
  /new:
    post:
      tags:
      - spin-broker
      summary: new spin-broker
      description: Create a new package; a collection of items to join into the queue simultaneously
      operationId: spin-broker#new
      responses:
        "200":
          description: OK response.
          schema:
            type: string
      schemes:
      - http
  /next/{resource}:
    get:
      tags:
      - spin-broker
      summary: next spin-broker
      description: Get the next command for a given resource
      operationId: spin-broker#next
      parameters:
      - name: resource
        in: path
        description: resource type
        required: true
        type: string
      responses:
        "200":
          description: OK response.
          schema:
            $ref: '#/definitions/SpinBrokerNextResponseBody'
            required:
            - uuid
            - resource
            - action
        "400":
          description: No records were found
          schema:
            $ref: '#/definitions/SpinBrokerNextRecordNotFoundResponseBody'
      schemes:
      - http
  /status/{id}:
    get:
      tags:
      - spin-broker
      summary: status spin-broker
      description: Get the status for a package
      operationId: spin-broker#status
      parameters:
      - name: id
        in: path
        description: Package ID
        required: true
        type: string
      responses:
        "200":
          description: OK response.
          schema:
            $ref: '#/definitions/SpinBrokerStatusResponseBody'
            required:
            - status
        "400":
          description: No records were found
          schema:
            $ref: '#/definitions/SpinBrokerStatusRecordNotFoundResponseBody'
      schemes:
      - http
  /storage/volume/add:
    post:
      tags:
      - spin-apiserver
      summary: add_volume spin-apiserver
      description: Add a volume for image allocation with backing storage, and name it
      operationId: spin-apiserver#add_volume
      parameters:
      - name: add_volume_request_body
        in: body
        required: true
        schema:
          $ref: '#/definitions/SpinApiserverAddVolumeRequestBody'
          required:
          - volume
          - path
      responses:
        "200":
          description: OK response.
      schemes:
      - http
  /storage/volume/image/create:
    post:
      tags:
      - spin-apiserver
      summary: create_image_on_volume spin-apiserver
      description: Create an image on a volume
      operationId: spin-apiserver#create_image_on_volume
      parameters:
      - name: create_image_on_volume_request_body
        in: body
        required: true
        schema:
          $ref: '#/definitions/SpinApiserverCreateImageOnVolumeRequestBody'
          required:
          - image_name
          - image_size
          - volume
      responses:
        "200":
          description: OK response.
      schemes:
      - http
  /storage/volume/image/delete:
    post:
      tags:
      - spin-apiserver
      summary: delete_image_on_volume spin-apiserver
      description: Delete an image on a volume
      operationId: spin-apiserver#delete_image_on_volume
      parameters:
      - name: delete_image_on_volume_request_body
        in: body
        required: true
        schema:
          $ref: '#/definitions/SpinApiserverDeleteImageOnVolumeRequestBody'
          required:
          - image_name
          - volume
      responses:
        "200":
          description: OK response.
      schemes:
      - http
  /storage/volume/image/info/{volume}/{image_name}:
    get:
      tags:
      - spin-apiserver
      summary: info_image_on_volume spin-apiserver
      description: Obtain information on an image
      operationId: spin-apiserver#info_image_on_volume
      parameters:
      - name: volume
        in: path
        description: volume identifier
        required: true
        type: string
      - name: image_name
        in: path
        description: image name
        required: true
        type: string
      responses:
        "200":
          description: OK response.
      schemes:
      - http
  /storage/volume/image/move:
    post:
      tags:
      - spin-apiserver
      summary: move_image spin-apiserver
      description: Move an image from one volume to another
      operationId: spin-apiserver#move_image
      parameters:
      - name: move_image_request_body
        in: body
        required: true
        schema:
          $ref: '#/definitions/SpinApiserverMoveImageRequestBody'
          required:
          - image_name
          - volume
          - target_volume
      responses:
        "200":
          description: OK response.
      schemes:
      - http
  /storage/volume/image/resize:
    post:
      tags:
      - spin-apiserver
      summary: resize_image_on_volume spin-apiserver
      description: Resize an image on a volume
      operationId: spin-apiserver#resize_image_on_volume
      parameters:
      - name: resize_image_on_volume_request_body
        in: body
        required: true
        schema:
          $ref: '#/definitions/SpinApiserverResizeImageOnVolumeRequestBody'
          required:
          - image_name
          - image_size
          - volume
      responses:
        "200":
          description: OK response.
      schemes:
      - http
  /storage/volume/info/{volume}:
    get:
      tags:
      - spin-apiserver
      summary: info_volume spin-apiserver
      description: Get information on a volume
      operationId: spin-apiserver#info_volume
      parameters:
      - name: volume
        in: path
        description: volume identifier
        required: true
        type: string
      responses:
        "200":
          description: OK response.
      schemes:
      - http
  /storage/volume/label/{volume}/{label}:
    post:
      tags:
      - spin-apiserver
      summary: label_volume spin-apiserver
      description: Apply a label to a volume.
      operationId: spin-apiserver#label_volume
      parameters:
      - name: volume
        in: path
        description: volume identifier
        required: true
        type: string
      - name: label
        in: path
        description: label identifier to apply to volume
        required: true
        type: string
      responses:
        "200":
          description: OK response.
      schemes:
      - http
  /storage/volume/remove/{volume}:
    post:
      tags:
      - spin-apiserver
      summary: remove_volume spin-apiserver
      description: Remove a volume. Requires all images to be removed.
      operationId: spin-apiserver#remove_volume
      parameters:
      - name: volume
        in: path
        description: volume identifier
        required: true
        type: string
      responses:
        "200":
          description: OK response.
      schemes:
      - http
  /update/{id}:
    post:
      tags:
      - spin-registry
      summary: update spin-registry
      description: Update a VM
      operationId: spin-registry#update
      parameters:
      - name: id
        in: path
        description: ID of VM to update
        required: true
        type: integer
      - name: UpdateRequestBody
        in: body
        required: true
        schema:
          $ref: '#/definitions/SpinRegistryUpdateRequestBody'
          required:
          - vm
      responses:
        "200":
          description: OK response.
      schemes:
      - http
definitions:
  SpinApiserverAddVolumeRequestBody:
    title: SpinApiserverAddVolumeRequestBody
    type: object
    properties:
      path:
        type: string
        description: path to backing storage
        example: Quo dolore soluta consectetur.
      volume:
        type: string
        description: volume identifier
        example: Et et occaecati.
    example:
      path: Assumenda pariatur.
      volume: Quia non nihil vitae nesciunt.
    required:
    - volume
    - path
  SpinApiserverCreateImageOnVolumeRequestBody:
    title: SpinApiserverCreateImageOnVolumeRequestBody
    type: object
    properties:
      image_name:
        type: string
        description: image name
        example: Et nobis quia neque excepturi.
      image_size:
        type: integer
        description: image size in GB
        example: 13026661461146096768
        format: int64
      volume:
        type: string
        description: volume identifier
        example: A aut similique.
    example:
      image_name: Ab soluta vel.
      image_size: 2014425556641484725
      volume: Qui dolores nihil.
    required:
    - image_name
    - image_size
    - volume
  SpinApiserverDeleteImageOnVolumeRequestBody:
    title: SpinApiserverDeleteImageOnVolumeRequestBody
    type: object
    properties:
      image_name:
        type: string
        description: image name
        example: Dolorem soluta quisquam vero sit.
      volume:
        type: string
        description: volume identifier
        example: Molestiae asperiores.
    example:
      image_name: Temporibus explicabo sit ab quo et quis.
      volume: Nulla numquam rerum asperiores corporis aut enim.
    required:
    - image_name
    - volume
  SpinApiserverMoveImageRequestBody:
    title: SpinApiserverMoveImageRequestBody
    type: object
    properties:
      image_name:
        type: string
        description: image name
        example: Cupiditate veniam atque accusamus.
      target_volume:
        type: string
        description: volume identifier to move to
        example: Quia aliquam sit necessitatibus pariatur quam deleniti.
      volume:
        type: string
        description: volume identifier
        example: Et ipsa.
    example:
      image_name: Ut ea excepturi.
      target_volume: Quia facere.
      volume: Facilis ad quod.
    required:
    - image_name
    - volume
    - target_volume
  SpinApiserverResizeImageOnVolumeRequestBody:
    title: SpinApiserverResizeImageOnVolumeRequestBody
    type: object
    properties:
      image_name:
        type: string
        description: image name
        example: Ipsa enim non maxime est.
      image_size:
        type: integer
        description: new image size; must be larger than original size
        example: 2037161670898670278
        format: int64
      volume:
        type: string
        description: volume identifier
        example: Reprehenderit vitae.
    example:
      image_name: Aut adipisci.
      image_size: 10642461641015261973
      volume: Et id et alias vel ratione.
    required:
    - image_name
    - image_size
    - volume
  SpinBrokerAddRequestBody:
    title: SpinBrokerAddRequestBody
    type: object
    properties:
      action:
        type: string
        description: Action name
        example: Vel tempora est.
      parameters:
        type: object
        description: Action parameters
        example:
          Aut quis vel officia.: Fugit incidunt tempora.
          Mollitia eius hic.: Ut nulla et cum consequatur in.
          Sed quae ea.: Tempore voluptate voluptas.
        additionalProperties: true
      resource:
        type: string
        description: Resource name
        example: Sunt nesciunt natus dolorem.
    example:
      action: Nostrum qui perferendis rerum molestias.
      parameters:
        Laborum quia qui provident esse laboriosam.: Ut sint officia quod tempora consequatur ut.
      resource: Iure qui voluptas.
    required:
    - resource
    - action
  SpinBrokerCompleteRequestBody:
    title: SpinBrokerCompleteRequestBody
    type: object
    properties:
      id:
        type: string
        description: Command ID
        example: Laboriosam fugit.
      status:
        type: boolean
        description: status of work
        example: true
      status_reason:
        type: string
        description: reason of success/failure
        example: Non voluptate est.
    example:
      id: Consectetur nihil omnis.
      status: true
      status_reason: Ut laboriosam.
    required:
    - id
    - status
  SpinBrokerNextRecordNotFoundResponseBody:
    title: 'Mediatype identifier: application/vnd.goa.error; view=default'
    type: object
    properties:
      fault:
        type: boolean
        description: Is the error a server-side fault?
        example: false
      id:
        type: string
        description: ID is a unique identifier for this particular occurrence of the problem.
        example: 123abc
      message:
        type: string
        description: Message is a human-readable explanation specific to this occurrence of the problem.
        example: parameter 'p' must be an integer
      name:
        type: string
        description: Name is the name of this class of errors.
        example: bad_request
      temporary:
        type: boolean
        description: Is the error temporary?
        example: true
      timeout:
        type: boolean
        description: Is the error a timeout?
        example: true
    description: next_record_not_found_response_body result type (default view)
    example:
      fault: false
      id: 123abc
      message: parameter 'p' must be an integer
      name: bad_request
      temporary: false
      timeout: false
    required:
    - name
    - id
    - message
    - temporary
    - timeout
    - fault
  SpinBrokerNextResponseBody:
    title: SpinBrokerNextResponseBody
    type: object
    properties:
      action:
        type: string
        description: action name
        example: Natus dicta aliquid.
      parameters:
        type: object
        description: parameters for action
        example:
          Sint ut facilis nobis quo.: Iusto non quae.
        additionalProperties: true
      resource:
        type: string
        description: resource type
        example: Ab delectus amet magnam.
      uuid:
        type: string
        description: Command ID
        example: Quaerat consequatur nemo.
    example:
      action: Deleniti illum quod est enim aperiam laborum.
      parameters:
        Dolores atque excepturi ut.: Ipsum ea deleniti.
        Enim autem doloribus sunt ut quos.: Ut ex molestiae quod distinctio voluptatibus.
        Itaque non quis quae.: Accusantium laboriosam sunt minima saepe architecto.
      resource: Rerum illo ratione totam quia.
      uuid: Aut sit a quas velit.
    required:
    - uuid
    - resource
    - action
  SpinBrokerStatusRecordNotFoundResponseBody:
    title: 'Mediatype identifier: application/vnd.goa.error; view=default'
    type: object
    properties:
      fault:
        type: boolean
        description: Is the error a server-side fault?
        example: false
      id:
        type: string
        description: ID is a unique identifier for this particular occurrence of the problem.
        example: 123abc
      message:
        type: string
        description: Message is a human-readable explanation specific to this occurrence of the problem.
        example: parameter 'p' must be an integer
      name:
        type: string
        description: Name is the name of this class of errors.
        example: bad_request
      temporary:
        type: boolean
        description: Is the error temporary?
        example: false
      timeout:
        type: boolean
        description: Is the error a timeout?
        example: false
    description: status_record_not_found_response_body result type (default view)
    example:
      fault: true
      id: 123abc
      message: parameter 'p' must be an integer
      name: bad_request
      temporary: false
      timeout: false
    required:
    - name
    - id
    - message
    - temporary
    - timeout
    - fault
  SpinBrokerStatusResponseBody:
    title: SpinBrokerStatusResponseBody
    type: object
    properties:
      reason:
        type: string
        description: Failure reason (if any)
        example: Dicta accusantium magnam in ea.
      status:
        type: boolean
        description: Pass/Fail status
        example: true
    example:
      reason: Distinctio laudantium consectetur assumenda soluta repellendus eaque.
      status: false
    required:
    - status
  SpinRegistryCreateRequestBody:
    title: SpinRegistryCreateRequestBody
    type: object
    properties:
      cpus:
        type: integer
        description: CPU count
        example: 9653205502890624496
        format: int64
      memory:
        type: integer
        description: Memory (in megabytes)
        example: 3586129337210659553
        format: int64
      name:
        type: string
        description: Name of VM; does not need to be unique
        example: Itaque omnis fuga.
      storage:
        type: array
        items:
          $ref: '#/definitions/StorageRequestBody'
        description: Storage references
        example:
        - image: In aut vero amet.
          image_size: 4230286153146778503
          volume: Voluptatibus est minima cum delectus occaecati.
        - image: In aut vero amet.
          image_size: 4230286153146778503
          volume: Voluptatibus est minima cum delectus occaecati.
        - image: In aut vero amet.
          image_size: 4230286153146778503
          volume: Voluptatibus est minima cum delectus occaecati.
        - image: In aut vero amet.
          image_size: 4230286153146778503
          volume: Voluptatibus est minima cum delectus occaecati.
    example:
      cpus: 13139907858509298089
      memory: 5228715432521503348
      name: Ut voluptas ullam quas aliquam sit quaerat.
      storage:
      - image: In aut vero amet.
        image_size: 4230286153146778503
        volume: Voluptatibus est minima cum delectus occaecati.
      - image: In aut vero amet.
        image_size: 4230286153146778503
        volume: Voluptatibus est minima cum delectus occaecati.
      - image: In aut vero amet.
        image_size: 4230286153146778503
        volume: Voluptatibus est minima cum delectus occaecati.
      - image: In aut vero amet.
        image_size: 4230286153146778503
        volume: Voluptatibus est minima cum delectus occaecati.
    required:
    - name
    - cpus
    - memory
    - storage
  SpinRegistryGetResponseBody:
    title: SpinRegistryGetResponseBody
    type: object
    properties:
      cpus:
        type: integer
        description: CPU count
        example: 18411680576569119380
        format: int64
      memory:
        type: integer
        description: Memory (in megabytes)
        example: 6242776563299468417
        format: int64
      name:
        type: string
        description: Name of VM; does not need to be unique
        example: Libero libero commodi.
      storage:
        type: array
        items:
          $ref: '#/definitions/StorageResponseBody'
        description: Storage references
        example:
        - image: Sapiente temporibus.
          image_size: 4310599689986484391
          volume: Voluptas perferendis ea iusto.
        - image: Sapiente temporibus.
          image_size: 4310599689986484391
          volume: Voluptas perferendis ea iusto.
        - image: Sapiente temporibus.
          image_size: 4310599689986484391
          volume: Voluptas perferendis ea iusto.
        - image: Sapiente temporibus.
          image_size: 4310599689986484391
          volume: Voluptas perferendis ea iusto.
    example:
      cpus: 11421274656992002837
      memory: 3157067769597325205
      name: Eos quibusdam error dolorem ut et.
      storage:
      - image: Sapiente temporibus.
        image_size: 4310599689986484391
        volume: Voluptas perferendis ea iusto.
      - image: Sapiente temporibus.
        image_size: 4310599689986484391
        volume: Voluptas perferendis ea iusto.
      - image: Sapiente temporibus.
        image_size: 4310599689986484391
        volume: Voluptas perferendis ea iusto.
    required:
    - name
    - cpus
    - memory
    - storage
  SpinRegistryUpdateRequestBody:
    title: SpinRegistryUpdateRequestBody
    type: object
    properties:
      vm:
        $ref: '#/definitions/VMRequestBody'
    example:
      vm:
        cpus: 6421225864845588134
        memory: 15540618699971399982
        name: Et dicta.
        storage:
        - image: In aut vero amet.
          image_size: 4230286153146778503
          volume: Voluptatibus est minima cum delectus occaecati.
        - image: In aut vero amet.
          image_size: 4230286153146778503
          volume: Voluptatibus est minima cum delectus occaecati.
        - image: In aut vero amet.
          image_size: 4230286153146778503
          volume: Voluptatibus est minima cum delectus occaecati.
        - image: In aut vero amet.
          image_size: 4230286153146778503
          volume: Voluptatibus est minima cum delectus occaecati.
    required:
    - vm
  StorageRequestBody:
    title: StorageRequestBody
    type: object
    properties:
      image:
        type: string
        description: Image filename, must not include `/`
        example: Odio similique qui qui architecto.
      image_size:
        type: integer
        description: Image size (in gigabytes)
        example: 6053967843912387261
        format: int64
      volume:
        type: string
        description: Volume name, must not include `/`
        example: Est velit eaque mollitia.
    example:
      image: Qui ea qui omnis qui sit et.
      image_size: 14375469499918085890
      volume: Omnis quia deleniti.
    required:
    - volume
    - image
    - image_size
  StorageResponseBody:
    title: StorageResponseBody
    type: object
    properties:
      image:
        type: string
        description: Image filename, must not include `/`
        example: Sed cum.
      image_size:
        type: integer
        description: Image size (in gigabytes)
        example: 1925419452315424525
        format: int64
      volume:
        type: string
        description: Volume name, must not include `/`
        example: Est totam quasi eligendi quod.
    example:
      image: Aut ut illum.
      image_size: 12197256539042136090
      volume: Culpa unde ut.
    required:
    - volume
    - image
    - image_size
  VMRequestBody:
    title: VMRequestBody
    type: object
    properties:
      cpus:
        type: integer
        description: CPU count
        example: 11187625645617701008
        format: int64
      memory:
        type: integer
        description: Memory (in megabytes)
        example: 3165228496034042905
        format: int64
      name:
        type: string
        description: Name of VM; does not need to be unique
        example: Perspiciatis voluptas quia voluptatem adipisci et.
      storage:
        type: array
        items:
          $ref: '#/definitions/StorageRequestBody'
        description: Storage references
        example:
        - image: In aut vero amet.
          image_size: 4230286153146778503
          volume: Voluptatibus est minima cum delectus occaecati.
        - image: In aut vero amet.
          image_size: 4230286153146778503
          volume: Voluptatibus est minima cum delectus occaecati.
        - image: In aut vero amet.
          image_size: 4230286153146778503
          volume: Voluptatibus est minima cum delectus occaecati.
        - image: In aut vero amet.
          image_size: 4230286153146778503
          volume: Voluptatibus est minima cum delectus occaecati.
    example:
      cpus: 18230181160547742892
      memory: 11718520038058316817
      name: Modi aspernatur.
      storage:
      - image: In aut vero amet.
        image_size: 4230286153146778503
        volume: Voluptatibus est minima cum delectus occaecati.
      - image: In aut vero amet.
        image_size: 4230286153146778503
        volume: Voluptatibus est minima cum delectus occaecati.
    required:
    - name
    - cpus
    - memory
    - storage
