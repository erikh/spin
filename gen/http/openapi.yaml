swagger: "2.0"
info:
  title: Spin API service
  description: HTTP service for controlling the spin service
  version: ""
host: localhost:8080
consumes:
- application/json
- application/xml
- application/gob
produces:
- application/json
- application/xml
- application/gob
paths:
  /add/{id}:
    post:
      tags:
      - spin-broker
      summary: add spin-broker
      description: Add a command to the package
      operationId: spin-broker#add
      parameters:
      - name: id
        in: path
        description: Package ID
        required: true
        type: string
      - name: AddRequestBody
        in: body
        required: true
        schema:
          $ref: '#/definitions/SpinBrokerAddRequestBody'
          required:
          - resource
          - action
      responses:
        "200":
          description: OK response.
          schema:
            type: string
      schemes:
      - http
  /complete:
    post:
      tags:
      - spin-broker
      summary: complete spin-broker
      description: Mark a command as completed with a result status
      operationId: spin-broker#complete
      parameters:
      - name: CompleteRequestBody
        in: body
        required: true
        schema:
          $ref: '#/definitions/SpinBrokerCompleteRequestBody'
          required:
          - id
          - status
      responses:
        "200":
          description: OK response.
      schemes:
      - http
  /enqueue/{id}:
    post:
      tags:
      - spin-broker
      summary: enqueue spin-broker
      description: Enqueue the package into the various resource queues
      operationId: spin-broker#enqueue
      parameters:
      - name: id
        in: path
        description: Package ID
        required: true
        type: string
      responses:
        "200":
          description: OK response.
          schema:
            type: array
            items:
              type: string
              example: Facilis enim autem doloribus sunt ut quos.
      schemes:
      - http
  /new:
    post:
      tags:
      - spin-broker
      summary: new spin-broker
      description: Create a new package; a collection of items to join into the queue simultaneously
      operationId: spin-broker#new
      responses:
        "200":
          description: OK response.
          schema:
            type: string
      schemes:
      - http
  /next/{resource}:
    get:
      tags:
      - spin-broker
      summary: next spin-broker
      description: Get the next command for a given resource
      operationId: spin-broker#next
      parameters:
      - name: resource
        in: path
        description: resource type
        required: true
        type: string
      responses:
        "200":
          description: OK response.
          schema:
            $ref: '#/definitions/SpinBrokerNextResponseBody'
            required:
            - uuid
            - resource
            - action
        "400":
          description: No records were found
          schema:
            $ref: '#/definitions/SpinBrokerNextRecordNotFoundResponseBody'
      schemes:
      - http
  /status/{id}:
    get:
      tags:
      - spin-broker
      summary: status spin-broker
      description: Get the status for a package
      operationId: spin-broker#status
      parameters:
      - name: id
        in: path
        description: Package ID
        required: true
        type: string
      responses:
        "200":
          description: OK response.
          schema:
            $ref: '#/definitions/SpinBrokerStatusResponseBody'
            required:
            - status
        "400":
          description: No records were found
          schema:
            $ref: '#/definitions/SpinBrokerStatusRecordNotFoundResponseBody'
      schemes:
      - http
  /storage/volume/add:
    post:
      tags:
      - spin-apiserver
      summary: add_volume spin-apiserver
      description: Add a volume for image allocation with backing storage, and name it
      operationId: spin-apiserver#add_volume
      parameters:
      - name: add_volume_request_body
        in: body
        required: true
        schema:
          $ref: '#/definitions/SpinApiserverAddVolumeRequestBody'
          required:
          - volume
          - path
      responses:
        "200":
          description: OK response.
      schemes:
      - http
  /storage/volume/image/create:
    post:
      tags:
      - spin-apiserver
      summary: create_image_on_volume spin-apiserver
      description: Create an image on a volume
      operationId: spin-apiserver#create_image_on_volume
      parameters:
      - name: create_image_on_volume_request_body
        in: body
        required: true
        schema:
          $ref: '#/definitions/SpinApiserverCreateImageOnVolumeRequestBody'
          required:
          - image_name
          - image_size
          - volume
      responses:
        "200":
          description: OK response.
      schemes:
      - http
  /storage/volume/image/delete:
    post:
      tags:
      - spin-apiserver
      summary: delete_image_on_volume spin-apiserver
      description: Delete an image on a volume
      operationId: spin-apiserver#delete_image_on_volume
      parameters:
      - name: delete_image_on_volume_request_body
        in: body
        required: true
        schema:
          $ref: '#/definitions/SpinApiserverDeleteImageOnVolumeRequestBody'
          required:
          - image_name
          - volume
      responses:
        "200":
          description: OK response.
      schemes:
      - http
  /storage/volume/image/info/{volume}/{image_name}:
    get:
      tags:
      - spin-apiserver
      summary: info_image_on_volume spin-apiserver
      description: Obtain information on an image
      operationId: spin-apiserver#info_image_on_volume
      parameters:
      - name: volume
        in: path
        description: volume identifier
        required: true
        type: string
      - name: image_name
        in: path
        description: image name
        required: true
        type: string
      responses:
        "200":
          description: OK response.
      schemes:
      - http
  /storage/volume/image/move:
    post:
      tags:
      - spin-apiserver
      summary: move_image spin-apiserver
      description: Move an image from one volume to another
      operationId: spin-apiserver#move_image
      parameters:
      - name: move_image_request_body
        in: body
        required: true
        schema:
          $ref: '#/definitions/SpinApiserverMoveImageRequestBody'
          required:
          - image_name
          - volume
          - target_volume
      responses:
        "200":
          description: OK response.
      schemes:
      - http
  /storage/volume/image/resize:
    post:
      tags:
      - spin-apiserver
      summary: resize_image_on_volume spin-apiserver
      description: Resize an image on a volume
      operationId: spin-apiserver#resize_image_on_volume
      parameters:
      - name: resize_image_on_volume_request_body
        in: body
        required: true
        schema:
          $ref: '#/definitions/SpinApiserverResizeImageOnVolumeRequestBody'
          required:
          - image_name
          - image_size
          - volume
      responses:
        "200":
          description: OK response.
      schemes:
      - http
  /storage/volume/info/{volume}:
    get:
      tags:
      - spin-apiserver
      summary: info_volume spin-apiserver
      description: Get information on a volume
      operationId: spin-apiserver#info_volume
      parameters:
      - name: volume
        in: path
        description: volume identifier
        required: true
        type: string
      responses:
        "200":
          description: OK response.
      schemes:
      - http
  /storage/volume/remove/{volume}:
    post:
      tags:
      - spin-apiserver
      summary: remove_volume spin-apiserver
      description: Remove a volume. Requires all images to be removed.
      operationId: spin-apiserver#remove_volume
      parameters:
      - name: volume
        in: path
        description: volume identifier
        required: true
        type: string
      responses:
        "200":
          description: OK response.
      schemes:
      - http
  /storage/volumes/create:
    post:
      tags:
      - spin-registry
      summary: storage/volumes/create spin-registry
      description: create a new volume
      operationId: spin-registry#storage/volumes/create
      parameters:
      - name: Storage/Volumes/CreateRequestBody
        in: body
        required: true
        schema:
          $ref: '#/definitions/SpinRegistryStorageVolumesCreateRequestBody'
          required:
          - name
      responses:
        "200":
          description: OK response.
      schemes:
      - http
  /storage/volumes/delete:
    post:
      tags:
      - spin-registry
      summary: storage/volumes/delete spin-registry
      description: delete an existing volume
      operationId: spin-registry#storage/volumes/delete
      parameters:
      - name: Storage/Volumes/DeleteRequestBody
        in: body
        required: true
        schema:
          $ref: '#/definitions/SpinRegistryStorageVolumesDeleteRequestBody'
          required:
          - name
      responses:
        "200":
          description: OK response.
      schemes:
      - http
  /storage/volumes/list:
    get:
      tags:
      - spin-registry
      summary: storage/volumes/list spin-registry
      description: list all volumes
      operationId: spin-registry#storage/volumes/list
      responses:
        "200":
          description: OK response.
          schema:
            type: array
            items:
              type: string
              example: Vel provident quae.
      schemes:
      - http
  /vm/create:
    post:
      tags:
      - spin-registry
      summary: vm/create spin-registry
      description: Create a VM
      operationId: spin-registry#vm/create
      parameters:
      - name: Vm/CreateRequestBody
        in: body
        required: true
        schema:
          $ref: '#/definitions/SpinRegistryVMCreateRequestBody'
          required:
          - name
          - cpus
          - memory
          - storage
      responses:
        "200":
          description: OK response.
          schema:
            type: integer
            format: int64
      schemes:
      - http
  /vm/delete/{id}:
    post:
      tags:
      - spin-registry
      summary: vm/delete spin-registry
      description: Delete a VM by ID
      operationId: spin-registry#vm/delete
      parameters:
      - name: id
        in: path
        description: ID of VM to remove
        required: true
        type: integer
      responses:
        "200":
          description: OK response.
      schemes:
      - http
  /vm/get/{id}:
    get:
      tags:
      - spin-registry
      summary: vm/get spin-registry
      description: Retrieve a VM by ID
      operationId: spin-registry#vm/get
      parameters:
      - name: id
        in: path
        description: ID of VM to remove
        required: true
        type: integer
      responses:
        "200":
          description: OK response.
          schema:
            $ref: '#/definitions/SpinRegistryVMGetResponseBody'
            required:
            - name
            - cpus
            - memory
            - storage
      schemes:
      - http
  /vm/list:
    get:
      tags:
      - spin-registry
      summary: vm/list spin-registry
      description: Retrieve all VM IDs
      operationId: spin-registry#vm/list
      responses:
        "200":
          description: OK response.
          schema:
            type: array
            items:
              type: integer
              example: 6184685942829101060
              format: int64
      schemes:
      - http
  /vm/update/{id}:
    post:
      tags:
      - spin-registry
      summary: vm/update spin-registry
      description: Update a VM
      operationId: spin-registry#vm/update
      parameters:
      - name: id
        in: path
        description: ID of VM to update
        required: true
        type: integer
      - name: Vm/UpdateRequestBody
        in: body
        required: true
        schema:
          $ref: '#/definitions/SpinRegistryVMUpdateRequestBody'
          required:
          - vm
      responses:
        "200":
          description: OK response.
      schemes:
      - http
definitions:
  SpinApiserverAddVolumeRequestBody:
    title: SpinApiserverAddVolumeRequestBody
    type: object
    properties:
      path:
        type: string
        description: path to backing storage
        example: Alias vel.
      volume:
        type: string
        description: volume identifier
        example: Amet et id.
    example:
      path: Et ipsa.
      volume: Vitae cupiditate veniam atque accusamus.
    required:
    - volume
    - path
  SpinApiserverCreateImageOnVolumeRequestBody:
    title: SpinApiserverCreateImageOnVolumeRequestBody
    type: object
    properties:
      image_name:
        type: string
        description: image name
        example: Quia aliquam sit necessitatibus pariatur quam deleniti.
      image_size:
        type: integer
        description: image size in GB
        example: 16504758924706490004
        format: int64
      volume:
        type: string
        description: volume identifier
        example: Ea excepturi qui facilis ad.
    example:
      image_name: Commodi quia facere.
      image_size: 8415715876711929459
      volume: Nesciunt natus dolorem nemo vel tempora.
    required:
    - image_name
    - image_size
    - volume
  SpinApiserverDeleteImageOnVolumeRequestBody:
    title: SpinApiserverDeleteImageOnVolumeRequestBody
    type: object
    properties:
      image_name:
        type: string
        description: image name
        example: Optio quis aut quis vel officia.
      volume:
        type: string
        description: volume identifier
        example: Fugit incidunt tempora.
    example:
      image_name: Sed quae ea.
      volume: Tempore voluptate voluptas.
    required:
    - image_name
    - volume
  SpinApiserverMoveImageRequestBody:
    title: SpinApiserverMoveImageRequestBody
    type: object
    properties:
      image_name:
        type: string
        description: image name
        example: Perferendis rerum molestias.
      target_volume:
        type: string
        description: volume identifier to move to
        example: Qui provident.
      volume:
        type: string
        description: volume identifier
        example: Qui laborum.
    example:
      image_name: Laboriosam sapiente ut sint officia quod.
      target_volume: Inventore officia voluptatem ipsam dicta accusantium magnam.
      volume: Consequatur ut in impedit laboriosam et dolorum.
    required:
    - image_name
    - volume
    - target_volume
  SpinApiserverResizeImageOnVolumeRequestBody:
    title: SpinApiserverResizeImageOnVolumeRequestBody
    type: object
    properties:
      image_name:
        type: string
        description: image name
        example: Mollitia eius hic.
      image_size:
        type: integer
        description: new image size; must be larger than original size
        example: 16531843155838536809
        format: int64
      volume:
        type: string
        description: volume identifier
        example: Nulla et cum.
    example:
      image_name: In illo iure.
      image_size: 17192397419171730019
      volume: Minima nostrum.
    required:
    - image_name
    - image_size
    - volume
  SpinBrokerAddRequestBody:
    title: SpinBrokerAddRequestBody
    type: object
    properties:
      action:
        type: string
        description: Action name
        example: Assumenda soluta repellendus eaque neque vel accusamus.
      parameters:
        type: object
        description: Action parameters
        example:
          Eius molestiae.: Consequatur nemo autem ab delectus amet.
        additionalProperties: true
      resource:
        type: string
        description: Resource name
        example: Ea natus tempore distinctio laudantium.
    example:
      action: Facilis nobis quo quaerat iusto non quae.
      parameters:
        Aut dolores.: Excepturi ut quo ipsum ea.
        Sit a.: Velit adipisci rerum illo.
        Totam quia.: Deleniti illum quod est enim aperiam laborum.
      resource: Ex natus dicta aliquid sint provident sint.
    required:
    - resource
    - action
  SpinBrokerCompleteRequestBody:
    title: SpinBrokerCompleteRequestBody
    type: object
    properties:
      id:
        type: string
        description: Command ID
        example: Sit nihil libero libero commodi placeat exercitationem.
      status:
        type: boolean
        description: status of work
        example: false
      status_reason:
        type: string
        description: reason of success/failure
        example: Totam quasi eligendi quod voluptas.
    example:
      id: Cum sequi voluptatem culpa unde ut.
      status: false
      status_reason: Ut illum nulla repudiandae eos.
    required:
    - id
    - status
  SpinBrokerNextRecordNotFoundResponseBody:
    title: 'Mediatype identifier: application/vnd.goa.error; view=default'
    type: object
    properties:
      fault:
        type: boolean
        description: Is the error a server-side fault?
        example: false
      id:
        type: string
        description: ID is a unique identifier for this particular occurrence of the problem.
        example: 123abc
      message:
        type: string
        description: Message is a human-readable explanation specific to this occurrence of the problem.
        example: parameter 'p' must be an integer
      name:
        type: string
        description: Name is the name of this class of errors.
        example: bad_request
      temporary:
        type: boolean
        description: Is the error temporary?
        example: false
      timeout:
        type: boolean
        description: Is the error a timeout?
        example: true
    description: next_record_not_found_response_body result type (default view)
    example:
      fault: true
      id: 123abc
      message: parameter 'p' must be an integer
      name: bad_request
      temporary: true
      timeout: true
    required:
    - name
    - id
    - message
    - temporary
    - timeout
    - fault
  SpinBrokerNextResponseBody:
    title: SpinBrokerNextResponseBody
    type: object
    properties:
      action:
        type: string
        description: action name
        example: Exercitationem incidunt quae est velit eaque mollitia.
      parameters:
        type: object
        description: Action parameters
        example:
          Similique qui qui.: Minima nemo omnis quia deleniti.
        additionalProperties: true
      resource:
        type: string
        description: resource type
        example: Quia ut laboriosam beatae itaque omnis.
      uuid:
        type: string
        description: Command ID
        example: Consectetur nihil omnis.
    example:
      action: Sit quaerat.
      parameters:
        Dolor cupiditate perspiciatis.: Quia voluptatem adipisci et provident.
      resource: Vel enim ut voluptas ullam quas.
      uuid: Qui ea qui omnis qui sit et.
    required:
    - uuid
    - resource
    - action
  SpinBrokerStatusRecordNotFoundResponseBody:
    title: 'Mediatype identifier: application/vnd.goa.error; view=default'
    type: object
    properties:
      fault:
        type: boolean
        description: Is the error a server-side fault?
        example: false
      id:
        type: string
        description: ID is a unique identifier for this particular occurrence of the problem.
        example: 123abc
      message:
        type: string
        description: Message is a human-readable explanation specific to this occurrence of the problem.
        example: parameter 'p' must be an integer
      name:
        type: string
        description: Name is the name of this class of errors.
        example: bad_request
      temporary:
        type: boolean
        description: Is the error temporary?
        example: false
      timeout:
        type: boolean
        description: Is the error a timeout?
        example: true
    description: status_record_not_found_response_body result type (default view)
    example:
      fault: false
      id: 123abc
      message: parameter 'p' must be an integer
      name: bad_request
      temporary: false
      timeout: false
    required:
    - name
    - id
    - message
    - temporary
    - timeout
    - fault
  SpinBrokerStatusResponseBody:
    title: SpinBrokerStatusResponseBody
    type: object
    properties:
      causer:
        type: string
        description: Failure causer as UUID (if any)
        example: Quis quae nihil accusantium laboriosam.
      reason:
        type: string
        description: Failure reason (if any)
        example: Ex molestiae quod distinctio voluptatibus sint itaque.
      status:
        type: boolean
        description: Pass/Fail status
        example: false
    example:
      causer: Recusandae ut omnis laboriosam.
      reason: Saepe architecto cum enim quos.
      status: false
    required:
    - status
  SpinRegistryStorageVolumesCreateRequestBody:
    title: SpinRegistryStorageVolumesCreateRequestBody
    type: object
    properties:
      name:
        type: string
        description: name of volume
        example: Sed necessitatibus et asperiores.
    example:
      name: Hic sequi.
    required:
    - name
  SpinRegistryStorageVolumesDeleteRequestBody:
    title: SpinRegistryStorageVolumesDeleteRequestBody
    type: object
    properties:
      name:
        type: string
        description: name of volume
        example: Animi fugiat excepturi sed.
    example:
      name: Aut tempore aliquam.
    required:
    - name
  SpinRegistryVMCreateRequestBody:
    title: SpinRegistryVMCreateRequestBody
    type: object
    properties:
      cpus:
        type: integer
        description: CPU count
        example: 13654993227678912479
        format: int64
      memory:
        type: integer
        description: Memory (in megabytes)
        example: 17170428336381239599
        format: int64
      name:
        type: string
        description: Name of VM; does not need to be unique
        example: Quibusdam error dolorem.
      storage:
        type: array
        items:
          $ref: '#/definitions/StorageRequestBody'
        description: Storage references
        example:
        - cdrom: true
          image: Aut minima recusandae et.
          image_size: 4597833110689897909
          volume: Perferendis ea iusto adipisci sapiente temporibus.
        - cdrom: true
          image: Aut minima recusandae et.
          image_size: 4597833110689897909
          volume: Perferendis ea iusto adipisci sapiente temporibus.
        - cdrom: true
          image: Aut minima recusandae et.
          image_size: 4597833110689897909
          volume: Perferendis ea iusto adipisci sapiente temporibus.
    example:
      cpus: 16371545999011268138
      memory: 15145889332214776877
      name: Voluptatem qui explicabo quaerat officiis voluptatum deleniti.
      storage:
      - cdrom: true
        image: Aut minima recusandae et.
        image_size: 4597833110689897909
        volume: Perferendis ea iusto adipisci sapiente temporibus.
      - cdrom: true
        image: Aut minima recusandae et.
        image_size: 4597833110689897909
        volume: Perferendis ea iusto adipisci sapiente temporibus.
    required:
    - name
    - cpus
    - memory
    - storage
  SpinRegistryVMGetResponseBody:
    title: SpinRegistryVMGetResponseBody
    type: object
    properties:
      cpus:
        type: integer
        description: CPU count
        example: 2591967222747619247
        format: int64
      memory:
        type: integer
        description: Memory (in megabytes)
        example: 3286436954421689110
        format: int64
      name:
        type: string
        description: Name of VM; does not need to be unique
        example: Itaque ducimus qui recusandae aliquid blanditiis repudiandae.
      storage:
        type: array
        items:
          $ref: '#/definitions/StorageResponseBody'
        description: Storage references
        example:
        - cdrom: false
          image: Nihil vitae nesciunt.
          image_size: 11176502060165847513
          volume: Consectetur adipisci quia.
        - cdrom: false
          image: Nihil vitae nesciunt.
          image_size: 11176502060165847513
          volume: Consectetur adipisci quia.
        - cdrom: false
          image: Nihil vitae nesciunt.
          image_size: 11176502060165847513
          volume: Consectetur adipisci quia.
        - cdrom: false
          image: Nihil vitae nesciunt.
          image_size: 11176502060165847513
          volume: Consectetur adipisci quia.
    example:
      cpus: 4099979743360283536
      memory: 5173812223221144089
      name: Inventore cupiditate commodi aut asperiores quidem sit.
      storage:
      - cdrom: false
        image: Nihil vitae nesciunt.
        image_size: 11176502060165847513
        volume: Consectetur adipisci quia.
      - cdrom: false
        image: Nihil vitae nesciunt.
        image_size: 11176502060165847513
        volume: Consectetur adipisci quia.
      - cdrom: false
        image: Nihil vitae nesciunt.
        image_size: 11176502060165847513
        volume: Consectetur adipisci quia.
    required:
    - name
    - cpus
    - memory
    - storage
  SpinRegistryVMUpdateRequestBody:
    title: SpinRegistryVMUpdateRequestBody
    type: object
    properties:
      vm:
        $ref: '#/definitions/VMRequestBody'
    example:
      vm:
        cpus: 6259074207733349285
        memory: 3262028922579224625
        name: Modi magni voluptas corrupti.
        storage:
        - cdrom: true
          image: Aut minima recusandae et.
          image_size: 4597833110689897909
          volume: Perferendis ea iusto adipisci sapiente temporibus.
        - cdrom: true
          image: Aut minima recusandae et.
          image_size: 4597833110689897909
          volume: Perferendis ea iusto adipisci sapiente temporibus.
        - cdrom: true
          image: Aut minima recusandae et.
          image_size: 4597833110689897909
          volume: Perferendis ea iusto adipisci sapiente temporibus.
    required:
    - vm
  StorageRequestBody:
    title: StorageRequestBody
    type: object
    properties:
      cdrom:
        type: boolean
        description: Is this image a cdrom?
        example: true
      image:
        type: string
        description: Image filename, must not include `/`
        example: Animi saepe.
      image_size:
        type: integer
        description: Image size (in gigabytes)
        example: 6325199792409648331
        format: int64
      volume:
        type: string
        description: Volume name, must not include `/`
        example: Impedit autem optio ut quidem numquam provident.
    example:
      cdrom: false
      image: Officia voluptas voluptate.
      image_size: 6479444625026069939
      volume: Veritatis quos reiciendis et quisquam.
    required:
    - volume
    - image
  StorageResponseBody:
    title: StorageResponseBody
    type: object
    properties:
      cdrom:
        type: boolean
        description: Is this image a cdrom?
        example: true
      image:
        type: string
        description: Image filename, must not include `/`
        example: Molestias deserunt dicta eaque reiciendis autem exercitationem.
      image_size:
        type: integer
        description: Image size (in gigabytes)
        example: 3209690071918089088
        format: int64
      volume:
        type: string
        description: Volume name, must not include `/`
        example: Voluptas et inventore.
    example:
      cdrom: true
      image: In inventore.
      image_size: 1204504054380391946
      volume: Qui repellendus voluptate voluptas.
    required:
    - volume
    - image
  VMRequestBody:
    title: VMRequestBody
    type: object
    properties:
      cpus:
        type: integer
        description: CPU count
        example: 2802966637285714696
        format: int64
      memory:
        type: integer
        description: Memory (in megabytes)
        example: 9195914643071085458
        format: int64
      name:
        type: string
        description: Name of VM; does not need to be unique
        example: Sed qui sint delectus quis.
      storage:
        type: array
        items:
          $ref: '#/definitions/StorageRequestBody'
        description: Storage references
        example:
        - cdrom: true
          image: Aut minima recusandae et.
          image_size: 4597833110689897909
          volume: Perferendis ea iusto adipisci sapiente temporibus.
        - cdrom: true
          image: Aut minima recusandae et.
          image_size: 4597833110689897909
          volume: Perferendis ea iusto adipisci sapiente temporibus.
        - cdrom: true
          image: Aut minima recusandae et.
          image_size: 4597833110689897909
          volume: Perferendis ea iusto adipisci sapiente temporibus.
        - cdrom: true
          image: Aut minima recusandae et.
          image_size: 4597833110689897909
          volume: Perferendis ea iusto adipisci sapiente temporibus.
    example:
      cpus: 5403544277777148000
      memory: 9819878344929341869
      name: Molestiae nihil tempora.
      storage:
      - cdrom: true
        image: Aut minima recusandae et.
        image_size: 4597833110689897909
        volume: Perferendis ea iusto adipisci sapiente temporibus.
      - cdrom: true
        image: Aut minima recusandae et.
        image_size: 4597833110689897909
        volume: Perferendis ea iusto adipisci sapiente temporibus.
      - cdrom: true
        image: Aut minima recusandae et.
        image_size: 4597833110689897909
        volume: Perferendis ea iusto adipisci sapiente temporibus.
      - cdrom: true
        image: Aut minima recusandae et.
        image_size: 4597833110689897909
        volume: Perferendis ea iusto adipisci sapiente temporibus.
    required:
    - name
    - cpus
    - memory
    - storage
